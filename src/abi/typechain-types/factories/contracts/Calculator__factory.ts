/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Calculator,
  CalculatorInterface,
} from "../../contracts/Calculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "BVPlan",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ListLevelUpDate",
    outputs: [
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "OrderList",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "seller_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bv_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sv_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "seller_token",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UserAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UserLevelUpDateIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "UserList",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "left",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "right",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dir",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "summ",
            type: "uint256",
          },
        ],
        internalType: "struct UsersStruct.BusinessValue",
        name: "bv",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "order_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bv_level",
            type: "uint256",
          },
        ],
        internalType: "struct UsersStruct.LastOrder",
        name: "last_order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "depth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_withdraw",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levelup_count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastweek",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "step",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_voucher",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UsersPaths",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UsersPathsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "user",
        type: "tuple",
      },
    ],
    name: "calcW",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "user",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "user_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seller_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bv_value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sv_value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seller_token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct OrdersStruct.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "ulevel",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lr",
        type: "uint256",
      },
    ],
    name: "calculateOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_order_id",
        type: "uint256",
      },
    ],
    name: "getOrderList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "user_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seller_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bv_value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sv_value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seller_token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct OrdersStruct.Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "user",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getWeekNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "level_up_data_index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "order_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "user_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611171806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637548f42411610097578063c2afb68311610066578063c2afb6831461032f578063e6d3c18f1461034f578063eb63a59e1461038b578063f89183121461046057600080fd5b80637548f424146103015780638cbe096e1461030a578063b97914251461031d578063bb5d88fa1461032657600080fd5b8063511095b5116100d3578063511095b51461024657806352e70839146102595780635c79347f1461026c5780636f77926b146102ee57600080fd5b806306b099af14610105578063120a521a146101ac5780632d823e6d146101ed5780633ce0adeb1461020d575b600080fd5b610161610113366004610bee565b600a6020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600788015460089098015496979596949593949293919290919060ff1689565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e08301521515610100820152610120015b60405180910390f35b6101d56101ba366004610bee565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101a3565b6102006101fb366004610e1b565b61048b565b6040516101a39190610e38565b61023861021b366004610f13565b600660209081526000928352604080842090915290825290205481565b6040519081526020016101a3565b610238610254366004610f13565b6107ba565b610200610267366004610f35565b6107eb565b61027f61027a366004610bee565b610955565b6040516101a39190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e0830152610100808401511515818401525092915050565b6102006102fc366004610ff5565b610a27565b61023860015481565b610238610318366004610bee565b610b26565b61023860095481565b61023860005481565b61023861033d366004610bee565b60086020526000908152604090205481565b61037661035d366004610bee565b6004602052600090815260409020805460019091015482565b604080519283526020830191909152016101a3565b610449610399366004610ff5565b6002602081815260009283526040928390208054845160a08101865260018301548152938201548484015260038201548486015260048201546060808601919091526005830154608086015285519081018652600683015481526007830154938101939093526008820154948301949094526009810154600a820154600b830154600c840154600d850154600e860154600f87015460109097015495969495939492939192909160ff909116908b565b6040516101a39b9a9998979695949392919061101e565b61023861046e366004610f13565b600760209081526000928352604080842090915290825290205481565b610493610b3d565b600061049e42610b26565b9050808360c00151106105025760405162461bcd60e51b815260206004820152602160248201527f596f752063616e206e6f742063616c63756c617465207269676874206e6f77206044820152602160f81b60648201526084015b60405180910390fd5b600080600080866040015160400151905060018110158015610525575060078111155b1561079b578060070361055a57681043561a882930000093506802b5e3af16b188000092506702c68af0bb1400009150610657565b8060060361058a57682086ac351052600000935068056bc75e2d63100000925067058d15e1762800009150610657565b806005036105b357685150ae84a8cdf000009350680d8d726b7177a80000925060019150610657565b806004036105dc5768a2a15d09519be000009350681b1ae4d6e2ef500000925060029150610657565b806003036106065769014542ba12a337c000009350683635c9adc5dea00000925060049150610657565b806002036106305769032d26d12e980b600000935068878678326eac9000009250600a9150610657565b806001036106575769065a4da25d3016c00000935069010f0cf064dd592000009250601491505b60208701515160009061066b9086906110d6565b905060008589602001516020015161068391906110d6565b905060008183116106945782610696565b815b9050600a81106106bb57506020808a018051600090819052905190910152600a6106fd565b6106c587826110f8565b60208b015180516106d7908390611115565b9052506106e487826110f8565b8a602001516020018181516106f99190611115565b9052505b808a60e00181815161070f9190611128565b90525060e08a0151600090610726906005906110d6565b90506107338160056110f8565b8b60e0018181516107449190611115565b9052506107518183611115565b915061075d86826110f8565b8b6101000181815161076f9190611128565b905250600061077e88846110f8565b9050808c6080018181516107929190611128565b90525050505050505b6040870151516107aa90610b26565b60c0880152509495945050505050565b600360205281600052604060002081815481106107d657600080fd5b90600052602060002001600091509150505481565b6107f3610b3d565b8260080361080257508361094d565b81158061080f5750816001145b61084f5760405162461bcd60e51b81526020600482015260116024820152701b1c881a5cc81b9bdd0818dbdc9c9958dd607a1b60448201526064016104f9565b600061085e8560c00151610b26565b90506000610873876040015160000151610b26565b90508660c0015182116108bf5760405162461bcd60e51b815260206004820152601460248201527332b93937b91034b7103bb2b2b590373ab6b132b960611b60448201526064016104f9565b6108ca816001611128565b82101580156108dd575060408701515115155b156108ee576108eb8761048b565b96505b836000036109155760608601516020880151805161090d908390611128565b905250610933565b8560600151876020015160200181815161092f9190611128565b9052505b5050506040808501805190910183905260c0840151905152835b949350505050565b6109a960405180610120016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600080191681526020016000151581525090565b506000908152600a6020908152604091829020825161012081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260089091015460ff16151561010082015290565b610a2f610b3d565b506001600160a01b031660009081526002602081815260409283902083516101608101855281548152845160a080820187526001840154825294830154818501526003830154818701526004830154606080830191909152600584015460808084019190915283860192909252865180820188526006850154815260078501549581019590955260088401548588015295820193909352600982015494810194909452600a81015491840191909152600b81015491830191909152600c81015460c0830152600d81015460e0830152600e810154610100830152600f81015460ff1615156101208301526010015461014082015290565b600062093a80610b3681846110d6565b9392505050565b60405180610160016040528060008152602001610b826040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001610bab60405180606001604052806000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600080191681525090565b600060208284031215610c0057600080fd5b5035919050565b604051610160810167ffffffffffffffff81118282101715610c3957634e487b7160e01b600052604160045260246000fd5b60405290565b604051610120810167ffffffffffffffff81118282101715610c3957634e487b7160e01b600052604160045260246000fd5b600060a08284031215610c8357600080fd5b60405160a0810181811067ffffffffffffffff82111715610cb457634e487b7160e01b600052604160045260246000fd5b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600060608284031215610d0157600080fd5b6040516060810181811067ffffffffffffffff82111715610d3257634e487b7160e01b600052604160045260246000fd5b80604052508091508235815260208301356020820152604083013560408201525092915050565b80358015158114610d6957600080fd5b919050565b60006102208284031215610d8157600080fd5b610d89610c07565b905081358152610d9c8360208401610c71565b6020820152610dae8360c08401610cef565b604082015261012080830135606083015261014080840135608084015261016084013560a084015261018084013560c08401526101a084013560e08401526101c0840135610100840152610e056101e08501610d59565b8284015261020084013581840152505092915050565b60006102208284031215610e2e57600080fd5b610b368383610d6e565b81518152602080830151610220830191610e7f9084018280518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b50604083810151805160c0850152602081015160e085015290810151610100840152506060830151610120818185015260808501519150610140828186015260a086015161016086015260c086015161018086015260e08601516101a08601526101008601516101c0860152818601519250610f006101e086018415159052565b8086015161020086015250505092915050565b60008060408385031215610f2657600080fd5b50508035926020909101359150565b600080600080848603610380811215610f4d57600080fd5b610f578787610d6e565b945061012061021f1982011215610f6d57600080fd5b50610f76610c3f565b61022086013581526102408601356020820152610260860135604082015261028086013560608201526102a086013560808201526102c086013560a08201526102e086013560c082015261030086013560e0820152610fd86103208701610d59565b610100820152939693955050505061034082013591610360013590565b60006020828403121561100757600080fd5b81356001600160a01b0381168114610b3657600080fd5b8b8152610220810161105e602083018d80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8a5160c083015260208b015160e08301526040909a01516101008201526101208101989098526101408801969096526101608701949094526101808601929092526101a08501526101c084015215156101e08301526102009091015292915050565b634e487b7160e01b600052601160045260246000fd5b6000826110f357634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761110f5761110f6110c0565b92915050565b8181038181111561110f5761110f6110c0565b8082018082111561110f5761110f6110c056fea2646970667358221220c964b56659aba21bf2f0fd051424a41ecc8e597ad54270aca61821f94ade31c364736f6c63430008140033";

type CalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Calculator__factory extends ContractFactory {
  constructor(...args: CalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Calculator> {
    return super.deploy(overrides || {}) as Promise<Calculator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Calculator {
    return super.attach(address) as Calculator;
  }
  override connect(signer: Signer): Calculator__factory {
    return super.connect(signer) as Calculator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalculatorInterface {
    return new utils.Interface(_abi) as CalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Calculator {
    return new Contract(address, _abi, signerOrProvider) as Calculator;
  }
}
