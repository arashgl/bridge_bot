/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Users, UsersInterface } from "../../contracts/Users";

const _abi = [
  {
    inputs: [],
    name: "DevTimeOver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
    ],
    name: "InvalidFromID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "InvalidRangeID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "InvalidToID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UserNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user_address",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
    ],
    name: "CreatedUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "LevelUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "BVPlan",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ListLevelUpDate",
    outputs: [
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UserAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UserLevelUpDateIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "UserList",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "left",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "right",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dir",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "summ",
            type: "uint256",
          },
        ],
        internalType: "struct UsersStruct.BusinessValue",
        name: "bv",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "order_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bv_level",
            type: "uint256",
          },
        ],
        internalType: "struct UsersStruct.LastOrder",
        name: "last_order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "depth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_withdraw",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levelup_count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastweek",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "step",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_voucher",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UsersPaths",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UsersPathsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "userAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "parent_addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bvlevel",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bvsum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_date",
            type: "uint256",
          },
        ],
        internalType: "struct UsersStruct.ImportUser[]",
        name: "users",
        type: "tuple[]",
      },
    ],
    name: "addUserBulk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "calculator",
    outputs: [
      {
        internalType: "contract Calculator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "floor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "b",
        type: "bytes1",
      },
      {
        internalType: "uint8",
        name: "position",
        type: "uint8",
      },
    ],
    name: "getBit",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_user_id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ignore_validation",
        type: "bool",
      },
    ],
    name: "getUser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "user",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "getUserList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "left",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "right",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "dir",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "level",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "summ",
                    type: "uint256",
                  },
                ],
                internalType: "struct UsersStruct.BusinessValue",
                name: "bv",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "date",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "order_id",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bv_level",
                    type: "uint256",
                  },
                ],
                internalType: "struct UsersStruct.LastOrder",
                name: "last_order",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "depth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending_withdraw",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "levelup_count",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastweek",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "step",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending_voucher",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "exists",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "data",
                type: "bytes32",
              },
            ],
            internalType: "struct UsersStruct.User",
            name: "user",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "user_address",
            type: "address",
          },
        ],
        internalType: "struct UsersStruct.UserInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "parent",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "child",
        type: "tuple",
      },
    ],
    name: "isChildOfParent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isDev",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "level_up_data_index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "switchToProduction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "user_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff60a01b1916600160a01b17905534801561002357600080fd5b50338061004a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005381610059565b506100a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611ef1806100b86000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063be379d5b116100b8578063e6d3c18f1161007c578063e6d3c18f146102ed578063eb63a59e14610329578063f079914f146103fe578063f27be14e14610422578063f2fde38b1461044e578063f89183121461046157600080fd5b8063be379d5b1461028c578063c1debecb1461029f578063c2afb683146102b2578063c2f29eb0146102d2578063ce3e39c0146102da57600080fd5b8063514fbe501161010a578063514fbe501461021f5780636f77926b1461023f578063715018a61461025f5780637548f424146102695780638da5cb5b14610272578063bb5d88fa1461028357600080fd5b8063120a521a146101475780633070667f1461018d5780633ce0adeb146101b257806344da319c146101eb578063511095b51461020c575b600080fd5b6101706101553660046117cd565b6006602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101a061019b3660046117e6565b61048c565b60405160ff9091168152602001610184565b6101dd6101c0366004611832565b600760209081526000928352604080842090915290825290205481565b604051908152602001610184565b6101fe6101f9366004611869565b6104cb565b604051610184929190611968565b6101dd61021a366004611832565b610618565b61023261022d366004611832565b610649565b6040516101849190611986565b61025261024d3660046119ff565b61089c565b6040516101849190611a1a565b61026761099b565b005b6101dd60025481565b6000546001600160a01b0316610170565b6101dd60015481565b6101dd61029a366004611832565b6109af565b6102676102ad366004611abd565b6109c2565b6101dd6102c03660046117cd565b60096020526000908152604090205481565b610267610af9565b600a54610170906001600160a01b031681565b6103146102fb3660046117cd565b6005602052600090815260409020805460019091015482565b60408051928352602083019190915201610184565b6103e76103373660046119ff565b6003602081815260009283526040928390208054845160a08101865260018301548152600283015481850152938201548486015260048201546060808601919091526005830154608086015285519081018652600683015481526007830154938101939093526008820154948301949094526009810154600a820154600b830154600c840154600d850154600e860154600f87015460109097015495969495939492939192909160ff909116908b565b6040516101849b9a99989796959493929190611bb3565b60005461041290600160a01b900460ff1681565b6040519015158152602001610184565b610435610430366004611dac565b610b10565b60408051921515835260ff909116602083015201610184565b61026761045c3660046119ff565b610e76565b6101dd61046f366004611832565b600860209081526000928352604080842090915290825290205481565b60008061049a836007611df0565b600160ff919091161b905060f884901c8082166104b8856007611df0565b60ff91821691161c925050505b92915050565b60006104d561169c565b6000848152600660205260409020546001600160a01b0316801580156104f9575083155b15610517576040516319c29a3360e21b815260040160405180910390fd5b6001600160a01b03811660009081526003602081815260409283902083516101608101855281548152845160a080820187526001840154825260028401548286015294830154818701526004830154606080830191909152600584015460808084019190915283860192909252865180820188526006850154815260078501549581019590955260088401548588015295820193909352600982015494810194909452600a81015491840191909152600b81015491830191909152600c81015460c0830152600d81015460e0830152600e810154610100830152600f81015460ff1615156101208301526010015461014082015290925090505b9250929050565b6004602052816000526040600020818154811061063457600080fd5b90600052602060002001600091509150505481565b60608282600182101561067757604051633a2bd95560e11b8152600481018390526024015b60405180910390fd5b8082106106a15760405163d427f71f60e01b8152600481018290526024810183905260440161066e565b6001548411156106c757604051633322840360e11b81526004810185905260240161066e565b60006106d38686611e09565b67ffffffffffffffff8111156106eb576106eb611a29565b60405190808252806020026020018201604052801561072457816020015b61071161174d565b8152602001906001900390816107095790505b50905060005b6107348787611e09565b81101561089257600060068161074a848b611e1c565b8152602080820192909252604090810160009081205482516001600160a01b039091168083526003808652928490206101a0830185528054838601908152855160a08082018852600184015482526002840154828a01529583015481880152600483015460608281019190915260058401546080808401919091528187019290925287519081018852600684015481526007840154818a0152600884015497810197909752840195909552600981015493830193909352600a83015460c0830152600b83015460e0830152600c830154610100830152600d830154610120830152600e830154610140830152600f83015460ff16151561016083015260109092015461018082015291825291810182905284519192509084908490811061087357610873611e2f565b602002602001018190525050808061088a90611e45565b91505061072a565b5095945050505050565b6108a461169c565b506001600160a01b031660009081526003602081815260409283902083516101608101855281548152845160a080820187526001840154825260028401548286015294830154818701526004830154606080830191909152600584015460808084019190915283860192909252865180820188526006850154815260078501549581019590955260088401548588015295820193909352600982015494810194909452600a81015491840191909152600b81015491830191909152600c81015460c0830152600d81015460e0830152600e810154610100830152600f81015460ff1615156101208301526010015461014082015290565b6109a3610eb4565b6109ad6000610ee1565b565b60006109bb8284611e74565b9392505050565b600054600160a01b900460ff166109ec57604051631867fcd960e11b815260040160405180910390fd5b6109f4610eb4565b60005b8151811015610af55760036000838381518110610a1657610a16611e2f565b602090810291909101810151516001600160a01b03168252810191909152604001600020600f015460ff16610ae357610ae3828281518110610a5a57610a5a611e2f565b602002602001015160000151838381518110610a7857610a78611e2f565b602002602001015160200151848481518110610a9657610a96611e2f565b602002602001015160400151858581518110610ab457610ab4611e2f565b602002602001015160600151868681518110610ad257610ad2611e2f565b602002602001015160800151610f31565b80610aed81611e45565b9150506109f7565b5050565b610b01610eb4565b6000805460ff60a01b19169055565b6000808260600151846060015110610b2e575060009050600a610611565b60006101008560600151610b429190611e74565b905060006101008660600151610b589190611e88565b90508115610cd4578015610bd8578451600090815260086020526040812090610b82600185611e09565b8152602080820192909252604090810160009081205489518252600890935290812090610bb0600186611e09565b81526020019081526020016000205414610bd3576000600b935093505050610611565b610cd4565b600060018311610bf2576647656e6573697360c81b610c1e565b8651600090815260086020526040812090610c0e600286611e09565b8152602001908152602001600020545b8751600090815260076020526040812091925090829082610c40600188611e09565b815260200190815260200160002054604051602001610c69929190918252602082015260400190565b60408051601f1981840301815291815281516020808401919091208a5160009081526008909252918120929350909181610ca4600189611e09565b8152602001908152602001600020549050808214610ccf576000606f97509750505050505050610611565b505050505b6000610ce1600883611e74565b9050600a6000805b838111610e195760005b60088160ff161015610e065782610d0981611e45565b93505085831115610d5557895160009081526007602090815260408083208a8452825290912054610d4e9184908110610d4457610d44611e2f565b1a60f81b8261048c565b9350610e06565b8a5160009081526007602090815260408083208a84528252822054610d8e9185908110610d8457610d84611e2f565b1a60f81b8361048c565b8b5160009081526007602090815260408083208c845282528220549293509091610dcc9186908110610dc257610dc2611e2f565b1a60f81b8461048c565b90508060ff168260ff1614610df1576000600c9a509a50505050505050505050610611565b50508080610dfe90611e9c565b915050610cf3565b5080610e1181611e45565b915050610ce9565b5060028260ff1610610e665760405162461bcd60e51b8152602060048201526016602482015275736f6d657468696e672077656e742077726f6e67202160501b604482015260640161066e565b5060019890975095505050505050565b610e7e610eb4565b6001600160a01b038116610ea857604051631e4fbdf760e01b81526000600482015260240161066e565b610eb181610ee1565b50565b6000546001600160a01b031633146109ad5760405163118cdaa760e01b815233600482015260240161066e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03808516600090815260036020818152604080842081516101608101835281548152825160a080820185526001840154825260028401548287015283870154828601526004840154606080840191909152600585015460808085019190915284880193909352855180820187526006860154815260078601548189015260088601548188015284870152600985015490840152600a84015491830191909152600b83015490820152600c82015460c0820152600d82015460e0820152600e820154610100820152600f8083015460ff9081161515610120840152601090930154610140830152968c1686529390925290922090920154161561106d5760405162461bcd60e51b815260206004820152600e60248201526d757365727320657869737473202160901b604482015260640161066e565b8061012001516110b65760405162461bcd60e51b8152602060048201526014602482015273706172656e74206973206e6f742065786973747360601b604482015260640161066e565b60028160200151604001511061111a5760405162461bcd60e51b815260206004820152602360248201527f706172656e742063616e206e6f742068617665206d6f7265207468616e2032206044820152623234b960e91b606482015260840161066e565b600154600090815260046020526040902060608051909161113d9160809061176d565b50600060405180610160016040528060015481526020016040518060a001604052806000815260200160008152602001600081526020018981526020018881525081526020016040518060600160405280600081526020016000815260200160008152508152602001846060015160016111b79190611e1c565b8152600060208083018290526040808401839052606084018390526080840183905260a08401839052600160c0850181905260e090940183905283548352600682529182902080546001600160a01b0319166001600160a01b038e1617905586015101519192506112289190611e1c565b6001600160a01b038881166000908152600360208181526040808420830195909555928c1680835284832086518155868501518051600180840191909155818701516002840155818801519483019490945560608082015160048401556080918201516005840155888801518051600685015596870151600784015595870151600883015594870151600982015593860151600a85015560a0860151600b85015560c0860151600c85015560e0860151600d850155610100860151600e850155610120860151600f8501805460ff19169115159190911790556101408601516010909401939093555492517fd9e1d255053318ccf2a036b32fd2a70cced70ba0d33da18b23b2ccb7d4c002799190a36001805490600061134783611e45565b9091555050805161135990858861136d565b611363818461144c565b5050505050505050565b600083815260066020908152604080832080546001600160a01b0390811685526003808552838620600d0186905583518085018552888152808601888152600280548952600588528689208351815591516001928301558b89526004885286892090548154928301825590895287892090910155925490911685529092528220600b01805491926113fd83611e45565b91905055508183857f66833f6d7d7a01eaed9fb21eb9cc54f0fb9497fa9251a6c0773372c8d3e0aa0c60405160405180910390a46002805490600061144183611e45565b919050555050505050565b600061010082606001516114609190611e74565b9050600061010083606001516114769190611e88565b905060005b828110156114ef57835160009081526007602081815260408084208585528252808420548951855292825280842085855282528084209290925586518352600880825282842085855282528284205489518552908252828420858552909152912055806114e781611e45565b91505061147b565b5080156115495782516000908152600760209081526040808320858452825291829020549085015190910151611528919083901561166e565b84516000908152600760209081526040808320868452909152902055611668565b600061156281600086602001516040015160001461166e565b8551600090815260076020908152604080832087845290915290205582156116665760006001841161159e576647656e6573697360c81b6115ca565b85516000908152600860205260408120906115ba600287611e09565b8152602001908152602001600020545b86516000908152600760205260408120919250908290826115ec600189611e09565b815260200190815260200160002054604051602001611615929190918252602082015260400190565b60408051601f1981840301815291815281516020808401919091208a51600090815260089092529181209293509091829161165160018a611e09565b81526020810191909152604001600020555050505b505b50505050565b60008061167c8460ff611e09565b8361168857600161168b565b60005b60ff16901b85189150509392505050565b604051806101600160405280600081526020016116e16040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b815260200161170a60405180606001604052806000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600080191681525090565b604051806040016040528061176061169c565b8152600060209091015290565b8280548282559060005260206000209081019282156117a8579160200282015b828111156117a857825182559160200191906001019061178d565b506117b49291506117b8565b5090565b5b808211156117b457600081556001016117b9565b6000602082840312156117df57600080fd5b5035919050565b600080604083850312156117f957600080fd5b82356001600160f81b03198116811461181157600080fd5b9150602083013560ff8116811461182757600080fd5b809150509250929050565b6000806040838503121561184557600080fd5b50508035926020909101359150565b8035801515811461186457600080fd5b919050565b6000806040838503121561187c57600080fd5b8235915061188c60208401611854565b90509250929050565b8051825260208101516118d6602084018280518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b50604081810151805160c0850152602081015160e085015290810151610100840152506060810151610120818185015260808301519150610140828186015260a084015161016086015260c084015161018086015260e08401516101a08601526101008401516101c08601528184015192506119576101e086018415159052565b808401516102008601525050505050565b6001600160a01b038316815261024081016109bb6020830184611895565b6020808252825182820181905260009190848201906040850190845b818110156119dc5783516119b7848251611895565b8501516001600160a01b031661022084015292840192610240909201916001016119a2565b50909695505050505050565b80356001600160a01b038116811461186457600080fd5b600060208284031215611a1157600080fd5b6109bb826119e8565b61022081016104c58284611895565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715611a6257611a62611a29565b60405290565b604051610160810167ffffffffffffffff81118282101715611a6257611a62611a29565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ab557611ab5611a29565b604052919050565b60006020808385031215611ad057600080fd5b823567ffffffffffffffff80821115611ae857600080fd5b818501915085601f830112611afc57600080fd5b813581811115611b0e57611b0e611a29565b611b1c848260051b01611a8c565b818152848101925060a0918202840185019188831115611b3b57600080fd5b938501935b82851015611ba75780858a031215611b585760008081fd5b611b60611a3f565b611b69866119e8565b8152611b768787016119e8565b8188015260408681013590820152606080870135908201526080808701359082015284529384019392850192611b40565b50979650505050505050565b8b81526102208101611bf3602083018d80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8a5160c083015260208b015160e08301526040909a01516101008201526101208101989098526101408801969096526101608701949094526101808601929092526101a08501526101c084015215156101e08301526102009091015292915050565b600060a08284031215611c6757600080fd5b611c6f611a3f565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b600060608284031215611cb557600080fd5b6040516060810181811067ffffffffffffffff82111715611cd857611cd8611a29565b80604052508091508235815260208301356020820152604083013560408201525092915050565b60006102208284031215611d1257600080fd5b611d1a611a68565b905081358152611d2d8360208401611c55565b6020820152611d3f8360c08401611ca3565b604082015261012080830135606083015261014080840135608084015261016084013560a084015261018084013560c08401526101a084013560e08401526101c0840135610100840152611d966101e08501611854565b8284015261020084013581840152505092915050565b6000806104408385031215611dc057600080fd5b611dca8484611cff565b915061188c846102208501611cff565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156104c5576104c5611dda565b818103818111156104c5576104c5611dda565b808201808211156104c5576104c5611dda565b634e487b7160e01b600052603260045260246000fd5b600060018201611e5757611e57611dda565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611e8357611e83611e5e565b500490565b600082611e9757611e97611e5e565b500690565b600060ff821660ff8103611eb257611eb2611dda565b6001019291505056fea264697066735822122080776d243cf6e8fa73964133923d0ba7b5ba4137cb5c7536537361e5a950b5c764736f6c63430008140033";

type UsersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Users__factory extends ContractFactory {
  constructor(...args: UsersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Users> {
    return super.deploy(overrides || {}) as Promise<Users>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Users {
    return super.attach(address) as Users;
  }
  override connect(signer: Signer): Users__factory {
    return super.connect(signer) as Users__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsersInterface {
    return new utils.Interface(_abi) as UsersInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Users {
    return new Contract(address, _abi, signerOrProvider) as Users;
  }
}
