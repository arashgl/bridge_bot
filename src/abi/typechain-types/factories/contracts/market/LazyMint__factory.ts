/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LazyMint,
  LazyMintInterface,
} from "../../../contracts/market/LazyMint";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "address payable",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNATURE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNING_DOMAIN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "tokenUri",
            type: "string",
          },
        ],
        internalType: "struct ILazyMintStruct.MetaToken",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "_check_singture",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "createOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "getTokenMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "tokenUri",
            type: "string",
          },
        ],
        internalType: "struct ILazyMintStruct.MetaToken",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "mintByOperators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "operators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pendingWithdrawals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenUris",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "typeId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620026703803806200267083398101604081905262000035916200035f565b8383826040518060400160405280600b81526020016a135155104b53505492d15560aa1b815250604051806040016040528060018152602001603160f81b8152506200008c600083620001c460201b90919060201c565b610120526200009d816001620001c4565b61014052815160208084019190912060e052815190820120610100524660a0526200012b60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526001600160a01b0381166200016457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200016f81620001fd565b5060036200017e8382620004a1565b5060046200018d8282620004a1565b5050600b80546001600160a01b0319166001600160a01b038416179055506009620001b98382620004a1565b5050505050620005c7565b6000602083511015620001e457620001dc836200024f565b9050620001f7565b81620001f18482620004a1565b5060ff90505b92915050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080829050601f815111156200027d578260405163305a27a960e01b81526004016200015b91906200056d565b80516200028a82620005a2565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002c5578181015183820152602001620002ab565b50506000910152565b600082601f830112620002e057600080fd5b81516001600160401b0380821115620002fd57620002fd62000292565b604051601f8301601f19908116603f0116810190828211818310171562000328576200032862000292565b816040528381528660208588010111156200034257600080fd5b62000355846020830160208901620002a8565b9695505050505050565b600080600080608085870312156200037657600080fd5b84516001600160401b03808211156200038e57600080fd5b6200039c88838901620002ce565b95506020870151915080821115620003b357600080fd5b620003c188838901620002ce565b94506040870151915080821115620003d857600080fd5b50620003e787828801620002ce565b606087015190935090506001600160a01b03811681146200040757600080fd5b939692955090935050565b600181811c908216806200042757607f821691505b6020821081036200044857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200049c57600081815260208120601f850160051c81016020861015620004775750805b601f850160051c820191505b81811015620004985782815560010162000483565b5050505b505050565b81516001600160401b03811115620004bd57620004bd62000292565b620004d581620004ce845462000412565b846200044e565b602080601f8311600181146200050d5760008415620004f45750858301515b600019600386901b1c1916600185901b17855562000498565b600085815260208120601f198616915b828110156200053e578886015182559484019460019091019084016200051d565b50858210156200055d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200058e816040850160208701620002a8565b601f01601f19169190910160400192915050565b80516020808301519190811015620004485760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161204e620006226000396000610e0601526000610dd40152600061172a015260006117020152600061165d01526000611687015260006116b1015261204e6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806395d89b411161010f578063c55d2260116100a2578063e985e9c511610071578063e985e9c514610482578063f2fde38b14610495578063f3f43703146104a8578063f6ae6f13146104c857600080fd5b8063c55d2260146103fe578063c87b56dd1461041e578063d539139314610431578063e3faad941461045857600080fd5b8063ae882b65116100de578063ae882b65146103b2578063b3a7906f146103c5578063b88d4fde146103d8578063c1a662ad146103eb57600080fd5b806395d89b4114610364578063a22cb4651461036c578063a41572961461037f578063ac8a584a1461039f57600080fd5b806342842e0e1161018757806370a082311161015657806370a082311461030f578063715018a61461033057806384b0196e146103385780638da5cb5b1461035357600080fd5b806342842e0e146102ce57806342966c68146102e15780636352211e146102f45780636c0360eb1461030757600080fd5b80630e89341c116101c35780630e89341c1461027257806313e7c9d8146102855780631b6b158c146102a857806323b872dd146102bb57600080fd5b806301ffc9a7146101f557806306fdde031461021d578063081812fc14610232578063095ea7b31461025d575b600080fd5b610208610203366004611888565b6104db565b60405190151581526020015b60405180910390f35b61022561052d565b60405161021491906118f5565b610245610240366004611908565b6105bf565b6040516001600160a01b039091168152602001610214565b61027061026b36600461193d565b6105e8565b005b610225610280366004611908565b6105f7565b610208610293366004611967565b600d6020526000908152604090205460ff1681565b6102456102b6366004611a3d565b6106da565b6102706102c9366004611aa1565b6106ef565b6102706102dc366004611aa1565b61077f565b6102706102ef366004611908565b61079f565b610245610302366004611908565b6107b3565b6102256107be565b61032261031d366004611967565b61084c565b604051908152602001610214565b610270610894565b6103406108a8565b6040516102149796959493929190611add565b6002546001600160a01b0316610245565b6102256108ee565b61027061037a366004611b73565b6108fd565b610225604051806040016040528060018152602001603160f81b81525081565b6102706103ad366004611967565b610908565b6102256103c0366004611908565b610931565b6103226103d3366004611baf565b61094a565b6102706103e6366004611c21565b61097f565b6103226103f9366004611c89565b610996565b61032261040c366004611908565b600e6020526000908152604090205481565b61022561042c366004611908565b610ab2565b6103227f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102256040518060400160405280600b81526020016a135155104b53505492d15560aa1b81525081565b610208610490366004611cfd565b610b27565b6102706104a3366004611967565b610b55565b6103226104b6366004611967565b600c6020526000908152604090205481565b6102706104d6366004611967565b610b90565b60006001600160e01b031982166380ac58cd60e01b148061050c57506001600160e01b03198216635b5e139f60e01b145b8061052757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461053c90611d30565b80601f016020809104026020016040519081016040528092919081815260200182805461056890611d30565b80156105b55780601f1061058a576101008083540402835291602001916105b5565b820191906000526020600020905b81548152906001019060200180831161059857829003601f168201915b5050505050905090565b60006105ca82610bbc565b506000828152600760205260409020546001600160a01b0316610527565b6105f3828233610bf5565b5050565b606060006009805461060890611d30565b90501161069f576009805461061c90611d30565b80601f016020809104026020016040519081016040528092919081815260200182805461064890611d30565b80156106955780601f1061066a57610100808354040283529160200191610695565b820191906000526020600020905b81548152906001019060200180831161067857829003601f168201915b5050505050610527565b6009600f60008481526020019081526020016000206040516020016106c5929190611dd7565b60405160208183030381529060405292915050565b6000806106e78484610c02565b949350505050565b6001600160a01b03821661071e57604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061072b838333610c1a565b9050836001600160a01b0316816001600160a01b031614610779576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610715565b50505050565b61079a8383836040518060200160405280600081525061097f565b505050565b6107a7610d13565b6107b081610d40565b50565b600061052782610bbc565b600980546107cb90611d30565b80601f01602080910402602001604051908101604052809291908181526020018280546107f790611d30565b80156108445780601f1061081957610100808354040283529160200191610844565b820191906000526020600020905b81548152906001019060200180831161082757829003601f168201915b505050505081565b60006001600160a01b038216610878576040516322718ad960e21b815260006004820152602401610715565b506001600160a01b031660009081526006602052604090205490565b61089c610d13565b6108a66000610d7b565b565b6000606080600080600060606108bc610dcd565b6108c4610dff565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606004805461053c90611d30565b6105f3338383610e2c565b610910610d13565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600f60205260009081526040902080546107cb90611d30565b6000600e60008484604051610960929190611dec565b6040518091039020815260200190815260200160002054905092915050565b61098a8484846106ef565b61077984848484610ecb565b336000908152600d602052604081205460ff1615156001146109cb5760405163ccea9e6f60e01b815260040160405180910390fd5b60006109d78584610c02565b90506001600a60008282546109ec9190611dfc565b90915550506001600160a01b0384811690821614610a1d57604051632057875960e21b815260040160405180910390fd5b610a2981600a54610ff4565b610a3633600a5483610bf5565b610a408580611e1d565b600a546000908152600f6020526040902091610a5d919083611eb9565b506001600e6000610a6e8880611e1d565b604051610a7c929190611dec565b604051809103902081526020019081526020016000206000828254610aa19190611dfc565b9091555050600a5495945050505050565b6060610abd82610bbc565b506000610ad560408051602081019091526000815290565b90506000815111610af55760405180602001604052806000815250610b20565b80610aff84611059565b604051602001610b10929190611f79565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b610b5d610d13565b6001600160a01b038116610b8757604051631e4fbdf760e01b815260006004820152602401610715565b6107b081610d7b565b610b98610d13565b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b6000818152600560205260408120546001600160a01b03168061052757604051637e27328960e01b815260048101849052602401610715565b61079a83838360016110ec565b600080610c0e846111f2565b90506106e7818461126a565b6000828152600560205260408120546001600160a01b0390811690831615610c4757610c47818486611294565b6001600160a01b03811615610c8557610c646000856000806110ec565b6001600160a01b038116600090815260066020526040902080546000190190555b6001600160a01b03851615610cb4576001600160a01b0385166000908152600660205260409020805460010190555b60008481526005602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6002546001600160a01b031633146108a65760405163118cdaa760e01b8152336004820152602401610715565b6000610d4f6000836000610c1a565b90506001600160a01b0381166105f357604051637e27328960e01b815260048101839052602401610715565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060610dfa7f000000000000000000000000000000000000000000000000000000000000000060006112f8565b905090565b6060610dfa7f000000000000000000000000000000000000000000000000000000000000000060016112f8565b6001600160a01b038216610e5e57604051630b61174360e31b81526001600160a01b0383166004820152602401610715565b6001600160a01b03838116600081815260086020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561077957604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610f0d903390889087908790600401611fa8565b6020604051808303816000875af1925050508015610f48575060408051601f3d908101601f19168201909252610f4591810190611fe5565b60015b610fb1573d808015610f76576040519150601f19603f3d011682016040523d82523d6000602084013e610f7b565b606091505b508051600003610fa957604051633250574960e11b81526001600160a01b0385166004820152602401610715565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610fed57604051633250574960e11b81526001600160a01b0385166004820152602401610715565b5050505050565b6001600160a01b03821661101e57604051633250574960e11b815260006004820152602401610715565b600061102c83836000610c1a565b90506001600160a01b0381161561079a576040516339e3563760e11b815260006004820152602401610715565b60606000611066836113a3565b600101905060008167ffffffffffffffff8111156110865761108661199a565b6040519080825280601f01601f1916602001820160405280156110b0576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846110ba57509392505050565b808061110057506001600160a01b03821615155b156111c257600061111084610bbc565b90506001600160a01b0383161580159061113c5750826001600160a01b0316816001600160a01b031614155b801561114f575061114d8184610b27565b155b156111785760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610715565b81156111c05783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260076020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b60006105277fdb8e99efd8acaf9f6984a297a23c14e0c02194dd449bba353acb14463582ae6e6112228480611e1d565b604051611230929190611dec565b60405190819003812061124f9291602001918252602082015260400190565b6040516020818303038152906040528051906020012061147b565b60008060008061127a86866114a8565b92509250925061128a82826114f5565b5090949350505050565b61129f8383836115ae565b61079a576001600160a01b0383166112cd57604051637e27328960e01b815260048101829052602401610715565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610715565b606060ff83146113125761130b83611611565b9050610527565b81805461131e90611d30565b80601f016020809104026020016040519081016040528092919081815260200182805461134a90611d30565b80156113975780601f1061136c57610100808354040283529160200191611397565b820191906000526020600020905b81548152906001019060200180831161137a57829003601f168201915b50505050509050610527565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113e25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061140e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061142c57662386f26fc10000830492506010015b6305f5e1008310611444576305f5e100830492506008015b612710831061145857612710830492506004015b6064831061146a576064830492506002015b600a83106105275760010192915050565b6000610527611488611650565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600083516041036114e25760208401516040850151606086015160001a6114d48882858561177b565b9550955095505050506114ee565b50508151600091506002905b9250925092565b600082600381111561150957611509612002565b03611512575050565b600182600381111561152657611526612002565b036115445760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561155857611558612002565b036115795760405163fce698f760e01b815260048101829052602401610715565b600382600381111561158d5761158d612002565b036105f3576040516335e2f38360e21b815260048101829052602401610715565b60006001600160a01b038316158015906106e75750826001600160a01b0316846001600160a01b031614806115e857506115e88484610b27565b806106e75750506000908152600760205260409020546001600160a01b03918216911614919050565b6060600061161e8361184a565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156116a957507f000000000000000000000000000000000000000000000000000000000000000046145b156116d357507f000000000000000000000000000000000000000000000000000000000000000090565b610dfa604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156117b65750600091506003905082611840565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561180a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661183657506000925060019150829050611840565b9250600091508190505b9450945094915050565b600060ff8216601f81111561052757604051632cd44ac360e21b815260040160405180910390fd5b6001600160e01b0319811681146107b057600080fd5b60006020828403121561189a57600080fd5b8135610b2081611872565b60005b838110156118c05781810151838201526020016118a8565b50506000910152565b600081518084526118e18160208601602086016118a5565b601f01601f19169290920160200192915050565b602081526000610b2060208301846118c9565b60006020828403121561191a57600080fd5b5035919050565b80356001600160a01b038116811461193857600080fd5b919050565b6000806040838503121561195057600080fd5b61195983611921565b946020939093013593505050565b60006020828403121561197957600080fd5b610b2082611921565b60006020828403121561199457600080fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126119c157600080fd5b813567ffffffffffffffff808211156119dc576119dc61199a565b604051601f8301601f19908116603f01168101908282118183101715611a0457611a0461199a565b81604052838152866020858801011115611a1d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611a5057600080fd5b823567ffffffffffffffff80821115611a6857600080fd5b611a7486838701611982565b93506020850135915080821115611a8a57600080fd5b50611a97858286016119b0565b9150509250929050565b600080600060608486031215611ab657600080fd5b611abf84611921565b9250611acd60208501611921565b9150604084013590509250925092565b60ff60f81b881681526000602060e081840152611afd60e084018a6118c9565b8381036040850152611b0f818a6118c9565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611b6157835183529284019291840191600101611b45565b50909c9b505050505050505050505050565b60008060408385031215611b8657600080fd5b611b8f83611921565b915060208301358015158114611ba457600080fd5b809150509250929050565b60008060208385031215611bc257600080fd5b823567ffffffffffffffff80821115611bda57600080fd5b818501915085601f830112611bee57600080fd5b813581811115611bfd57600080fd5b866020828501011115611c0f57600080fd5b60209290920196919550909350505050565b60008060008060808587031215611c3757600080fd5b611c4085611921565b9350611c4e60208601611921565b925060408501359150606085013567ffffffffffffffff811115611c7157600080fd5b611c7d878288016119b0565b91505092959194509250565b600080600060608486031215611c9e57600080fd5b833567ffffffffffffffff80821115611cb657600080fd5b611cc287838801611982565b9450611cd060208701611921565b93506040860135915080821115611ce657600080fd5b50611cf3868287016119b0565b9150509250925092565b60008060408385031215611d1057600080fd5b611d1983611921565b9150611d2760208401611921565b90509250929050565b600181811c90821680611d4457607f821691505b60208210810361199457634e487b7160e01b600052602260045260246000fd5b60008154611d7181611d30565b60018281168015611d895760018114611d9e57611dcd565b60ff1984168752821515830287019450611dcd565b8560005260208060002060005b85811015611dc45781548a820152908401908201611dab565b50505082870194505b5050505092915050565b60006106e7611de68386611d64565b84611d64565b8183823760009101908152919050565b8082018082111561052757634e487b7160e01b600052601160045260246000fd5b6000808335601e19843603018112611e3457600080fd5b83018035915067ffffffffffffffff821115611e4f57600080fd5b602001915036819003821315611e6457600080fd5b9250929050565b601f82111561079a57600081815260208120601f850160051c81016020861015611e925750805b601f850160051c820191505b81811015611eb157828155600101611e9e565b505050505050565b67ffffffffffffffff831115611ed157611ed161199a565b611ee583611edf8354611d30565b83611e6b565b6000601f841160018114611f195760008515611f015750838201355b600019600387901b1c1916600186901b178355610fed565b600083815260209020601f19861690835b82811015611f4a5786850135825560209485019460019092019101611f2a565b5086821015611f675760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60008351611f8b8184602088016118a5565b835190830190611f9f8183602088016118a5565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fdb908301846118c9565b9695505050505050565b600060208284031215611ff757600080fd5b8151610b2081611872565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220a2f30af7bac0b512cacc691b4c45710e6e2ea8bc866001b846476dded69e9a6664736f6c63430008140033";

type LazyMintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LazyMintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LazyMint__factory extends ContractFactory {
  constructor(...args: LazyMintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    symbol_: string,
    _baseURI: string,
    _admin: string,
    overrides?: Overrides & { from?: string }
  ): Promise<LazyMint> {
    return super.deploy(
      name_,
      symbol_,
      _baseURI,
      _admin,
      overrides || {}
    ) as Promise<LazyMint>;
  }
  override getDeployTransaction(
    name_: string,
    symbol_: string,
    _baseURI: string,
    _admin: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      _baseURI,
      _admin,
      overrides || {}
    );
  }
  override attach(address: string): LazyMint {
    return super.attach(address) as LazyMint;
  }
  override connect(signer: Signer): LazyMint__factory {
    return super.connect(signer) as LazyMint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LazyMintInterface {
    return new utils.Interface(_abi) as LazyMintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LazyMint {
    return new Contract(address, _abi, signerOrProvider) as LazyMint;
  }
}
