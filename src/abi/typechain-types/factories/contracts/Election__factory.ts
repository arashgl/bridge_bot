/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Election, ElectionInterface } from "../../contracts/Election";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stake",
        type: "address",
      },
      {
        internalType: "address",
        name: "dnm_token",
        type: "address",
      },
      {
        internalType: "address[6]",
        name: "_owners",
        type: "address[6]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "beCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidateAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkVotingPeriod",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cycleCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cycleUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dnmToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
    ],
    name: "getCandidateVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getVoterStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setWinners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "voteWithStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voterStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "voterStakeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006001556301e13380600255621baf806003553480156200002557600080fd5b50604051620019c5380380620019c5833981016040819052620000489162000277565b33806200007057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007b81620001f4565b5060005b6006811015620001bc576000828260068110620000a057620000a06200032e565b602002015190506001600160a01b038116620000ef5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b604482015260640162000067565b6001600160a01b03811660009081526008602052604090205460ff16156200014d5760405162461bcd60e51b815260206004820152601060248201526f6f776e6572206e6f7420756e6971756560801b604482015260640162000067565b6001600160a01b0381166000908152600860205260409020805460ff1916600117905580600c83600681106200018757620001876200032e565b0180546001600160a01b0319166001600160a01b03929092169190911790555080620001b38162000344565b9150506200007f565b5050600a80546001600160a01b039384166001600160a01b03199182161790915560098054929093169116179055426004556200036c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200025c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060006101008085870312156200028f57600080fd5b6200029a8562000244565b93506020620002ab81870162000244565b935086605f870112620002bd57600080fd5b60405160c081016001600160401b0381118282101715620002e257620002e262000261565b604052918601918088841115620002f857600080fd5b604088015b848110156200031f57620003118162000244565b8252908301908301620002fd565b50508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600182016200036557634e487b7160e01b600052601160045260246000fd5b5060010190565b611649806200037c6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638dcba1d6116100c3578063d55d73c51161007c578063d55d73c5146102e9578063d932a77f146102fc578063df69fd8a14610304578063dfa4ee8614610324578063eb03df8c1461034d578063f2fde38b1461035657600080fd5b80638dcba1d61461027457806399ad7ed914610287578063a7813587146102bd578063b7c59361146102c6578063bed9d861146102ce578063caf61462146102d657600080fd5b80633a4b66f1116101155780633a4b66f1146102015780635f74bbde14610214578063715018a61461022757806378e979251461022f5780638807f271146102385780638da5cb5b1461026357600080fd5b8063025e7c271461015257806306989454146101825780632f54bf6e146101bb578063301fa53d146101ee578063316fda0f146101f8575b600080fd5b6101656101603660046112a1565b610369565b6040516001600160a01b0390911681526020015b60405180910390f35b6101ad6101903660046112d6565b600560209081526000928352604080842090915290825290205481565b604051908152602001610179565b6101de6101c9366004611300565b60086020526000908152604090205460ff1681565b6040519015158152602001610179565b6101f6610389565b005b6101ad60015481565b600a54610165906001600160a01b031681565b6101f66102223660046112d6565b6104c2565b6101f6610819565b6101ad60045481565b6101ad6102463660046112d6565b600760209081526000928352604080842090915290825290205481565b6000546001600160a01b0316610165565b600954610165906001600160a01b031681565b6101ad610295366004611300565b6001600160a01b03166000908152600760209081526040808320600154845290915290205490565b6101ad60035481565b6101f661082d565b6101f6610bc1565b6101f66102e43660046112d6565b610d6f565b6101656102f73660046112a1565b6110e8565b6101de611112565b6101ad610312366004611300565b60066020526000908152604090205481565b6101ad610332366004611300565b6001600160a01b031660009081526006602052604090205490565b6101ad60025481565b6101f6610364366004611300565b611144565b600c816006811061037957600080fd5b01546001600160a01b0316905081565b6301e133806004544261039c9190611338565b6103a69190611351565b600181905560035460025490916103bd9190611373565b6004546103ca919061138a565b6103d49042611338565b106103fa5760405162461bcd60e51b81526004016103f19061139d565b60405180910390fd5b3360009081526007602090815260408083206001548452909152902054156104645760405162461bcd60e51b815260206004820152601960248201527f596f752061726520616c72656164792063616e6469646174650000000000000060448201526064016103f1565b600b805460018181019092557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b03191633908117909155600090815260076020908152604080832084548452909152902055565b6301e13380600454426104d59190611338565b6104df9190611351565b600181905560035460025490916104f69190611373565b600454610503919061138a565b61050d9042611338565b1061052a5760405162461bcd60e51b81526004016103f19061139d565b816001600160a01b03811661053e57600080fd5b81600081116105805760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642076616c75652160901b60448201526064016103f1565b6001600160a01b038416600090815260076020908152604080832060015484529091529020546105e65760405162461bcd60e51b8152602060048201526011602482015270696e76616c69642063616e64696461746560781b60448201526064016103f1565b6001600160a01b038416330361063e5760405162461bcd60e51b815260206004820152601c60248201527f796f752063616e6e6f7420766f746520666f7220796f757273656c660000000060448201526064016103f1565b600954604051636eb1769f60e11b815233600482015230602482015284916001600160a01b03169063dd62ed3e90604401602060405180830381865afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b091906113d4565b146106f15760405162461bcd60e51b8152602060048201526011602482015270696e76616c696420616c6c6f77616e636560781b60448201526064016103f1565b6009546040516323b872dd60e01b8152336004820152306024820152604481018590526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076d91906113fd565b9050806107c65760405162461bcd60e51b815260206004820152602160248201527f736f6d657468696e672077656e742077726f6e672077697468207061796d656e6044820152601d60fa1b60648201526084016103f1565b6001600160a01b03851660009081526007602090815260408083206001548452909152812080548692906107fb90849061138a565b90915550503360009081526006602052604090209390935550505050565b61082161117f565b61082b60006111ac565b565b6301e13380600454426108409190611338565b61084a9190611351565b600181905560035460025490916108619190611373565b60045461086e919061138a565b6108789042611338565b116108c55760405162461bcd60e51b815260206004820152601b60248201527f77652061726520696e2074686520766f74696e6720706572696f64000000000060448201526064016103f1565b600b546109145760405162461bcd60e51b815260206004820152601a60248201527f77696e6e65727320616c72656164792063616c63756c6174656400000000000060448201526064016103f1565b61091c6111fc565b60005b600b54811015610b3c5760008060005b60068160ff161015610a1d5760076000600b868154811061095257610952611418565b60009182526020808320909101546001600160a01b0316835282810193909352604091820181206001548252909252812054906007908760ff85166006811061099d5761099d611418565b60200201516001600160a01b03166001600160a01b0316815260200190815260200160002060006001548152602001908152602001600020541015610a0b57600b84815481106109ef576109ef611418565b6000918252602090912001546001600160a01b03169250610a1d565b80610a158161142e565b91505061092f565b5060005b60068160ff161015610aed5760076000868360ff1660068110610a4657610a46611418565b60200201516001600160a01b03166001600160a01b03168152602001908152602001600020600060015481526020019081526020016000205460076000878560ff1660068110610a9857610a98611418565b60200201516001600160a01b03166001600160a01b0316815260200190815260200160002060006001548152602001908152602001600020541115610adb578091505b80610ae58161142e565b915050610a21565b506001600160a01b03821615610b275781848260ff1660068110610b1357610b13611418565b6001600160a01b0390921660209290920201525b50508080610b349061144d565b91505061091f565b5060005b6006811015610ba357600160086000848460068110610b6157610b61611418565b602090810291909101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610b9b8161144d565b915050610b40565b50610bb1600c82600661121a565b50610bbe600b6000611272565b50565b6301e1338060045442610bd49190611338565b610bde9190611351565b60018190556003546002549091610bf59190611373565b600454610c02919061138a565b610c0c9042611338565b11610c595760405162461bcd60e51b815260206004820152601b60248201527f77652061726520696e2074686520766f74696e6720706572696f64000000000060448201526064016103f1565b33600090815260066020526040902054610ca95760405162461bcd60e51b8152602060048201526011602482015270796f752068617665206e6f207374616b6560781b60448201526064016103f1565b6009543360008181526006602052604080822054905163a9059cbb60e01b815260048101939093526024830152916001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610d09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2d91906113fd565b905080610bbe5760405162461bcd60e51b815260206004820152601060248201526f7769746864726177206661696c65642160801b60448201526064016103f1565b6301e1338060045442610d829190611338565b610d8c9190611351565b60018190556003546002549091610da39190611373565b600454610db0919061138a565b610dba9042611338565b10610dd75760405162461bcd60e51b81526004016103f19061139d565b816001600160a01b038116610deb57600080fd5b8160008111610e2d5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642076616c75652160901b60448201526064016103f1565b6001600160a01b03841660009081526007602090815260408083206001548452909152902054610e935760405162461bcd60e51b8152602060048201526011602482015270696e76616c69642063616e64696461746560781b60448201526064016103f1565b6001600160a01b0384163303610eeb5760405162461bcd60e51b815260206004820152601c60248201527f796f752063616e6e6f7420766f746520666f7220796f757273656c660000000060448201526064016103f1565b600a54604051635dd6e49d60e11b81523360048201526000916001600160a01b03169063bbadc93a90602401600060405180830381865afa158015610f34573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f5c91908101906114e8565b90506000805b8251811015610fce576000838281518110610f7f57610f7f611418565b602002602001015160e0015111610fbc57828181518110610fa257610fa2611418565b60200260200101516080015182610fb9919061138a565b91505b80610fc68161144d565b915050610f62565b5084811161100f5760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b60448201526064016103f1565b3360009081526005602090815260408083206001548452909152902054819061103990879061138a565b11156110875760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420616d6f756e74206f6620646e6d00000000000060448201526064016103f1565b6001600160a01b03861660009081526007602090815260408083206001548452909152812080548792906110bc90849061138a565b909155505033600090815260056020908152604080832060015484529091529020949094555050505050565b600b81815481106110f857600080fd5b6000918252602090912001546001600160a01b0316905081565b60006003546002546001546111279190611373565b600454611134919061138a565b61113e9042611338565b10905090565b61114c61117f565b6001600160a01b03811661117657604051631e4fbdf760e01b8152600060048201526024016103f1565b610bbe816111ac565b6000546001600160a01b0316331461082b5760405163118cdaa760e01b81523360048201526024016103f1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060c001604052806006906020820280368337509192915050565b8260068101928215611262579160200282015b8281111561126257825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061122d565b5061126e92915061128c565b5090565b5080546000825590600052602060002090810190610bbe91905b5b8082111561126e576000815560010161128d565b6000602082840312156112b357600080fd5b5035919050565b80356001600160a01b03811681146112d157600080fd5b919050565b600080604083850312156112e957600080fd5b6112f2836112ba565b946020939093013593505050565b60006020828403121561131257600080fd5b61131b826112ba565b9392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561134b5761134b611322565b92915050565b60008261136e57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761134b5761134b611322565b8082018082111561134b5761134b611322565b6020808252601f908201527f776520617265206e6f7420696e2074686520766f74696e6720706572696f6400604082015260600190565b6000602082840312156113e657600080fd5b5051919050565b805180151581146112d157600080fd5b60006020828403121561140f57600080fd5b61131b826113ed565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff810361144457611444611322565b60010192915050565b60006001820161145f5761145f611322565b5060010190565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156114a0576114a0611466565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156114cf576114cf611466565b604052919050565b805160ff811681146112d157600080fd5b600060208083850312156114fb57600080fd5b825167ffffffffffffffff8082111561151357600080fd5b818501915085601f83011261152757600080fd5b81518181111561153957611539611466565b611547848260051b016114a6565b818152848101925061014091820284018501918883111561156757600080fd5b938501935b828510156116075780858a0312156115845760008081fd5b61158c61147c565b8551815261159b8787016113ed565b8782015260406115ac8188016114d7565b90820152606086810151908201526080808701519082015260a0808701519082015260c0808701519082015260e08087015190820152610100808701519082015261012080870151908201528452938401939285019261156c565b5097965050505050505056fea2646970667358221220d61ab66dd2e68cfbf7e6f38827a4cb6fa71aa6fb4e6152bde9a39b14cd476d7864736f6c63430008140033";

type ElectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Election__factory extends ContractFactory {
  constructor(...args: ElectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stake: string,
    dnm_token: string,
    _owners: string[],
    overrides?: Overrides & { from?: string }
  ): Promise<Election> {
    return super.deploy(
      _stake,
      dnm_token,
      _owners,
      overrides || {}
    ) as Promise<Election>;
  }
  override getDeployTransaction(
    _stake: string,
    dnm_token: string,
    _owners: string[],
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stake,
      dnm_token,
      _owners,
      overrides || {}
    );
  }
  override attach(address: string): Election {
    return super.attach(address) as Election;
  }
  override connect(signer: Signer): Election__factory {
    return super.connect(signer) as Election__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElectionInterface {
    return new utils.Interface(_abi) as ElectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Election {
    return new Contract(address, _abi, signerOrProvider) as Election;
  }
}
