/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Sellers, SellersInterface } from "../../contracts/Sellers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
    ],
    name: "InvalidFromID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "InvalidRangeID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "InvalidToID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seller_id",
        type: "uint256",
      },
    ],
    name: "SellerNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller_addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "added_volume",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current_bv",
        type: "uint256",
      },
    ],
    name: "AddedSaleVolume",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller_addr",
        type: "address",
      },
    ],
    name: "CreatedSeller",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "SellerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "SellerList",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seller_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bv_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token_withdraw_value",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seller_id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ignore_vaildation",
        type: "bool",
      },
    ],
    name: "getSeller",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller_addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bv_value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token_withdraw_value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct Sellers.Seller",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "getSellerList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller_addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bv_value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token_withdraw_value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct Sellers.Seller[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seller_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506105f8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634d343cb21461005c57806358db9768146100a25780637b436480146100c25780637df6cc6f146100d9578063b67ea63714610154575b600080fd5b61008561006a36600461040d565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b56100b0366004610426565b610174565b6040516100999190610480565b6100cb60005481565b604051908152602001610099565b6101226100e73660046104ce565b6001602081905260009182526040909120805491810154600282015460038301546004909301546001600160a01b0390921692909160ff1685565b604080519586526001600160a01b0390941660208601529284019190915260608301521515608082015260a001610099565b6101676101623660046104fe565b610323565b6040516100999190610533565b6060828260018210156101a257604051633a2bd95560e11b8152600481018390526024015b60405180910390fd5b8082106101cc5760405163d427f71f60e01b81526004810182905260248101839052604401610199565b6000548411156101f257604051633322840360e11b815260048101859052602401610199565b60006101fe8686610557565b67ffffffffffffffff8111156102165761021661056a565b60405190808252806020026020018201604052801561024f57816020015b61023c6103d3565b8152602001906001900390816102345790505b50905060005b61025f8787610557565b811015610319576000600281610275848b610580565b815260208082019290925260409081016000908120546001600160a01b03908116808352600180865292849020845160a0810186528154815293810154909216948301949094526002810154928201929092526003820154606082015260049091015460ff16151560808201528451919250908490849081106102fa576102fa610593565b6020026020010181905250508080610311906105a9565b915050610255565b5095945050505050565b61032b6103d3565b6000838152600260205260409020546001600160a01b03168015801561034f575082155b1561037057604051631bf4938960e11b815260048101859052602401610199565b6001600160a01b03908116600090815260016020818152604092839020835160a0810185528154815292810154909416908201526002830154918101919091526003820154606082015260049091015460ff161515608082015290505b92915050565b6040518060a001604052806000815260200160006001600160a01b0316815260200160008152602001600081526020016000151581525090565b60006020828403121561041f57600080fd5b5035919050565b6000806040838503121561043957600080fd5b50508035926020909101359150565b805182526020808201516001600160a01b03169083015260408082015190830152606080820151908301526080908101511515910152565b6020808252825182820181905260009190848201906040850190845b818110156104c2576104af838551610448565b9284019260a0929092019160010161049c565b50909695505050505050565b6000602082840312156104e057600080fd5b81356001600160a01b03811681146104f757600080fd5b9392505050565b6000806040838503121561051157600080fd5b823591506020830135801515811461052857600080fd5b809150509250929050565b60a081016103cd8284610448565b634e487b7160e01b600052601160045260246000fd5b818103818111156103cd576103cd610541565b634e487b7160e01b600052604160045260246000fd5b808201808211156103cd576103cd610541565b634e487b7160e01b600052603260045260246000fd5b6000600182016105bb576105bb610541565b506001019056fea26469706673582212209be8424619db8e036e3cb52847db17d9066273dce05907bfd71663b9654e139864736f6c63430008140033";

type SellersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SellersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sellers__factory extends ContractFactory {
  constructor(...args: SellersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Sellers> {
    return super.deploy(overrides || {}) as Promise<Sellers>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Sellers {
    return super.attach(address) as Sellers;
  }
  override connect(signer: Signer): Sellers__factory {
    return super.connect(signer) as Sellers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SellersInterface {
    return new utils.Interface(_abi) as SellersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Sellers {
    return new Contract(address, _abi, signerOrProvider) as Sellers;
  }
}
