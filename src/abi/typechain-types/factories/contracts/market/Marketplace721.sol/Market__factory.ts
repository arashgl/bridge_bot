/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Market,
  MarketInterface,
} from "../../../../contracts/market/Marketplace721.sol/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_lazyMint_contract_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "gateway_contract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "ForbiddenMinter",
    type: "error",
  },
  {
    inputs: [],
    name: "GatewayFail",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOfferSeller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "actualSigner",
        type: "address",
      },
    ],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "SoldOut",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AddCollection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ChangeContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "SoldItem",
    type: "event",
  },
  {
    inputs: [],
    name: "GATEWAY",
    outputs: [
      {
        internalType: "contract Gateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LAZY_MINT_CONTRACT",
    outputs: [
      {
        internalType: "contract LazyMint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNATURE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNING_DOMAIN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_token_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "parent",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "tokenUri",
                type: "string",
              },
            ],
            internalType: "struct ILazyMintStruct.MetaToken",
            name: "meta_token",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "token_signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "seller",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "sv",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "qty",
                type: "uint256",
              },
            ],
            internalType: "struct Market.Sell",
            name: "sell_struct",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "sell_signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "token_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Market.BuyToken",
            name: "buy_token",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Market.BuyLazyMintInputArgs[]",
        name: "args",
        type: "tuple[]",
      },
    ],
    name: "buyNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_lazyMint_contract_address",
        type: "address",
      },
    ],
    name: "changeLazyMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "soldCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "t_id",
        type: "uint256",
      },
    ],
    name: "updateToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405260016007553480156200001757600080fd5b5060405162001f7038038062001f708339810160408190526200003a9162000280565b604080518082018252600b81526a135155104b53505492d15560aa1b602080830191909152825180840190935260018352603160f81b9083015233916200008382600062000199565b610120526200009481600162000199565b61014052815160208084019190912060e052815190820120610100524660a0526200012260e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526001600160a01b0381166200015b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200016681620001d2565b50600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055620004a5565b6000602083511015620001b957620001b18362000224565b9050620001cc565b81620001c6848262000364565b5060ff90505b92915050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080829050601f8151111562000252578260405163305a27a960e01b815260040162000152919062000430565b80516200025f8262000480565b179392505050565b6001600160a01b03811681146200027d57600080fd5b50565b600080604083850312156200029457600080fd5b8251620002a18162000267565b6020840151909250620002b48162000267565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002ea57607f821691505b6020821081036200030b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035f57600081815260208120601f850160051c810160208610156200033a5750805b601f850160051c820191505b818110156200035b5782815560010162000346565b5050505b505050565b81516001600160401b03811115620003805762000380620002bf565b6200039881620003918454620002d5565b8462000311565b602080601f831160018114620003d05760008415620003b75750858301515b600019600386901b1c1916600185901b1785556200035b565b600085815260208120601f198616915b828110156200040157888601518255948401946001909101908401620003e0565b5085821015620004205787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b818110156200045f5785810183015185820160400152820162000441565b506000604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156200030b5760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051611a70620005006000396000610ecf01526000610e9d015260006113570152600061132f0152600061128a015260006112b4015260006112de0152611a706000f3fe6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063d48bfca711610059578063d48bfca71461030f578063e3faad941461032f578063f2fde38b14610366578063f7e882011461038657600080fd5b80638da5cb5b1461025e578063a41572961461027c578063ab2f969a146102b6578063ad32e7c7146102fc57600080fd5b8063544e08c8116100c6578063544e08c8146101df5780636279f385146101ff578063715018a61461022157806384b0196e1461023657600080fd5b8063150b7a02146100f85780632bce9e7b14610141578063338c5371146101715780634f64b2be146101a9575b600080fd5b34801561010457600080fd5b5061012361011336600461152f565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561014d57600080fd5b5061016161015c36600461159b565b61039c565b6040519015158152602001610138565b34801561017d57600080fd5b50600454610191906001600160a01b031681565b6040516001600160a01b039091168152602001610138565b3480156101b557600080fd5b506101916101c43660046115c7565b6006602052600090815260409020546001600160a01b031681565b3480156101eb57600080fd5b50600354610191906001600160a01b031681565b34801561020b57600080fd5b5061021f61021a3660046115e0565b6103d7565b005b34801561022d57600080fd5b5061021f610401565b34801561024257600080fd5b5061024b610415565b604051610138979695949392919061164a565b34801561026a57600080fd5b506002546001600160a01b0316610191565b34801561028857600080fd5b506102a9604051806040016040528060018152602001603160f81b81525081565b60405161013891906116e0565b3480156102c257600080fd5b506102ee6102d13660046116f3565b805160208183018101805160058252928201919093012091525481565b604051908152602001610138565b61021f61030a366004611728565b61045b565b34801561031b57600080fd5b5061016161032a3660046115e0565b610d8a565b34801561033b57600080fd5b506102a96040518060400160405280600b81526020016a135155104b53505492d15560aa1b81525081565b34801561037257600080fd5b5061021f6103813660046115e0565b610dd9565b34801561039257600080fd5b506102ee60075481565b60006103a6610e17565b50600081815260066020526040902080546001600160a01b0319166001600160a01b03841617905560015b92915050565b6103df610e17565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610409610e17565b6104136000610e44565b565b600060608060008060006060610429610e96565b610431610ec8565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60005b81811015610d845760006104fe84848481811061047d5761047d6117b0565b905060200281019061048f91906117c6565b6040018585858181106104a4576104a46117b0565b90506020028101906104b691906117c6565b6104c49060c08101906117e7565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ef592505050565b9050838383818110610512576105126117b0565b905060200281019061052491906117c6565b6105359060608101906040016115e0565b6001600160a01b0316816001600160a01b0316146105b45780848484818110610560576105606117b0565b905060200281019061057291906117c6565b6105839060608101906040016115e0565b604051637ba5ffb560e01b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b6003546000906001600160a01b0316631b6b158c8686868181106105da576105da6117b0565b90506020028101906105ec91906117c6565b6105f69080611835565b878787818110610608576106086117b0565b905060200281019061061a91906117c6565b6106289060208101906117e7565b6040518463ffffffff1660e01b8152600401610646939291906118d1565b602060405180830381865afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106879190611901565b905061069281610f15565b61069b33610f15565b336001600160a01b038216036106c457604051634d3a582960e11b815260040160405180910390fd5b8484848181106106d6576106d66117b0565b90506020028101906106e891906117c6565b6106f99060608101906040016115e0565b6001600160a01b0316816001600160a01b0316146107245780858585818110610560576105606117b0565b6003546000906001600160a01b031663c1a662ad87878781811061074a5761074a6117b0565b905060200281019061075c91906117c6565b6107669080611835565b888888818110610778576107786117b0565b905060200281019061078a91906117c6565b61079b9060608101906040016115e0565b8989898181106107ad576107ad6117b0565b90506020028101906107bf91906117c6565b6107cd9060208101906117e7565b6040518563ffffffff1660e01b81526004016107ec949392919061191e565b6020604051808303816000875af115801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f919061195e565b6003549091506001600160a01b03166342842e0e878787818110610855576108556117b0565b905060200281019061086791906117c6565b6108789060608101906040016115e0565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015233602482015260448101849052606401600060405180830381600087803b1580156108c657600080fd5b505af11580156108da573d6000803e3d6000fd5b505050506000600660008888888181106108f6576108f66117b0565b905060200281019061090891906117c6565b60e0013581526020810191909152604001600020546001600160a01b03169050806109465760405163c1ab6dc160e01b815260040160405180910390fd5b6040516370a0823160e01b81523360048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b1919061195e565b90508787878181106109c5576109c56117b0565b90506020028101906109d791906117c6565b61010001358110156109fc5760405163356680b760e01b815260040160405180910390fd5b878787818110610a0e57610a0e6117b0565b9050602002810190610a2091906117c6565b60a001356005898989818110610a3857610a386117b0565b9050602002810190610a4a91906117c6565b610a589060208101906117e7565b604051610a66929190611977565b90815260200160405180910390205410610a93576040516352df9fe560e01b815260040160405180910390fd5b60016005898989818110610aa957610aa96117b0565b9050602002810190610abb91906117c6565b610ac99060208101906117e7565b604051610ad7929190611977565b90815260200160405180910390206000828254610af4919061199d565b90915550506004546040805160a081019091526000916001600160a01b031690639b421b5690808c8c8c818110610b2d57610b2d6117b0565b9050602002810190610b3f91906117c6565b6080013581526020018c8c8c818110610b5a57610b5a6117b0565b9050602002810190610b6c91906117c6565b6060013581526020018c8c8c818110610b8757610b876117b0565b9050602002810190610b9991906117c6565b60e0013581526020018c8c8c818110610bb457610bb46117b0565b9050602002810190610bc691906117c6565b610bd79060608101906040016115e0565b6001600160a01b03168152604051600160f01b6020828101919091526001600160c01b031960c08b901b16602283015290910190602a01604051602081830303815290604052610c26906119b0565b9052604080516001600160e01b031960e085901b168152825160048201526020830151602482015290820151604482015260608201516001600160a01b03908116606483015260809092015160848201523360a4820181905260c4820152908d1660e4820152610104016020604051808303816000875af1158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd3919061195e565b905060008111610cf6576040516314b47e2760e31b815260040160405180910390fd5b83898989818110610d0957610d096117b0565b9050602002810190610d1b91906117c6565b610d2c9060608101906040016115e0565b6001600160a01b0316336001600160a01b03167f257b5d5244b9b5107afddf768b3e6a726d77bc26d46eb38a10e2a8813fa044aa60405160405180910390a45050505050508080610d7c906119d7565b91505061045e565b50505050565b6000610d94610e17565b60078054600090815260066020526040812080546001600160a01b0319166001600160a01b03861617905581549190610dcc836119d7565b9091555060019392505050565b610de1610e17565b6001600160a01b038116610e0b57604051631e4fbdf760e01b8152600060048201526024016105ab565b610e1481610e44565b50565b6002546001600160a01b031633146104135760405163118cdaa760e01b81523360048201526024016105ab565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060610ec37f00000000000000000000000000000000000000000000000000000000000000006000610f5d565b905090565b6060610ec37f00000000000000000000000000000000000000000000000000000000000000006001610f5d565b600080610f0184611008565b9050610f0d8184611094565b949350505050565b6040516001600160a01b0382166024820152610e149060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790526110be565b606060ff8314610f7757610f70836110df565b90506103d1565b818054610f83906119f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610faf906119f0565b8015610ffc5780601f10610fd157610100808354040283529160200191610ffc565b820191906000526020600020905b815481529060010190602001808311610fdf57829003601f168201915b505050505090506103d1565b60006103d17f1ad4e7a45750bcfbf78e77914fcb55d90d2de4aa1b966717c987387aab88526b61103b60208501856115e0565b604080516020818101949094526001600160a01b0390921682820152918501356060828101919091529185013560808201529084013560a082015260c0016040516020818303038152906040528051906020012061111e565b6000806000806110a4868661114b565b9250925092506110b48282611198565b5090949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b606060006110ec83611255565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60006103d161112b61127d565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600083516041036111855760208401516040850151606086015160001a611177888285856113a8565b955095509550505050611191565b50508151600091506002905b9250925092565b60008260038111156111ac576111ac611a24565b036111b5575050565b60018260038111156111c9576111c9611a24565b036111e75760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156111fb576111fb611a24565b0361121c5760405163fce698f760e01b8152600481018290526024016105ab565b600382600381111561123057611230611a24565b03611251576040516335e2f38360e21b8152600481018290526024016105ab565b5050565b600060ff8216601f8111156103d157604051632cd44ac360e21b815260040160405180910390fd5b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156112d657507f000000000000000000000000000000000000000000000000000000000000000046145b1561130057507f000000000000000000000000000000000000000000000000000000000000000090565b610ec3604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156113e3575060009150600390508261146d565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611437573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114635750600092506001915082905061146d565b9250600091508190505b9450945094915050565b6001600160a01b0381168114610e1457600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126114b357600080fd5b813567ffffffffffffffff808211156114ce576114ce61148c565b604051601f8301601f19908116603f011681019082821181831017156114f6576114f661148c565b8160405283815286602085880101111561150f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561154557600080fd5b843561155081611477565b9350602085013561156081611477565b925060408501359150606085013567ffffffffffffffff81111561158357600080fd5b61158f878288016114a2565b91505092959194509250565b600080604083850312156115ae57600080fd5b82356115b981611477565b946020939093013593505050565b6000602082840312156115d957600080fd5b5035919050565b6000602082840312156115f257600080fd5b81356115fd81611477565b9392505050565b6000815180845260005b8181101561162a5760208185018101518683018201520161160e565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e08184015261166a60e084018a611604565b838103604085015261167c818a611604565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156116ce578351835292840192918401916001016116b2565b50909c9b505050505050505050505050565b6020815260006115fd6020830184611604565b60006020828403121561170557600080fd5b813567ffffffffffffffff81111561171c57600080fd5b610f0d848285016114a2565b60008060006040848603121561173d57600080fd5b833561174881611477565b9250602084013567ffffffffffffffff8082111561176557600080fd5b818601915086601f83011261177957600080fd5b81358181111561178857600080fd5b8760208260051b850101111561179d57600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b6000823561013e198336030181126117dd57600080fd5b9190910192915050565b6000808335601e198436030181126117fe57600080fd5b83018035915067ffffffffffffffff82111561181957600080fd5b60200191503681900382131561182e57600080fd5b9250929050565b60008235601e198336030181126117dd57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008135601e1983360301811261188a57600080fd5b820160208101903567ffffffffffffffff8111156118a757600080fd5b8036038213156118b657600080fd5b602085526118c860208601828461184b565b95945050505050565b6040815260006118e46040830186611874565b82810360208401526118f781858761184b565b9695505050505050565b60006020828403121561191357600080fd5b81516115fd81611477565b6060815260006119316060830187611874565b6001600160a01b0386166020840152828103604084015261195381858761184b565b979650505050505050565b60006020828403121561197057600080fd5b5051919050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103d1576103d1611987565b805160208083015191908110156119d1576000198160200360031b1b821691505b50919050565b6000600182016119e9576119e9611987565b5060010190565b600181811c90821680611a0457607f821691505b6020821081036119d157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220133057e629a3f33f776acad2d55a69cbda3c050fc99a0bc9ed641a12de39f9ca64736f6c63430008140033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _lazyMint_contract_address: string,
    gateway_contract: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Market> {
    return super.deploy(
      _lazyMint_contract_address,
      gateway_contract,
      overrides || {}
    ) as Promise<Market>;
  }
  override getDeployTransaction(
    _lazyMint_contract_address: string,
    gateway_contract: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lazyMint_contract_address,
      gateway_contract,
      overrides || {}
    );
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
