/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DNM, DNMInterface } from "../../contracts/DNM";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "send_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintByOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526a084595161401484a0000006005553480156200002057600080fd5b5060405162000c3538038062000c35833981016040819052620000439162000145565b818160036200005383826200023e565b5060046200006282826200023e565b5050600680546001600160a01b03191633179055506200030a915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000a857600080fd5b81516001600160401b0380821115620000c557620000c562000080565b604051601f8301601f19908116603f01168101908282118183101715620000f057620000f062000080565b816040528381526020925086838588010111156200010d57600080fd5b600091505b8382101562000131578582018301518183018401529082019062000112565b600093810190920192909252949350505050565b600080604083850312156200015957600080fd5b82516001600160401b03808211156200017157600080fd5b6200017f8683870162000096565b935060208501519150808211156200019657600080fd5b50620001a58582860162000096565b9150509250929050565b600181811c90821680620001c457607f821691505b602082108103620001e557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023957600081815260208120601f850160051c81016020861015620002145750805b601f850160051c820191505b81811015620002355782815560010162000220565b5050505b505050565b81516001600160401b038111156200025a576200025a62000080565b62000272816200026b8454620001af565b84620001eb565b602080601f831160018114620002aa5760008415620002915750858301515b600019600386901b1c1916600185901b17855562000235565b600085815260208120601f198616915b82811015620002db57888601518255948401946001909101908401620002ba565b5085821015620002fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61091b806200031a6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806332cb6b0c1161008c57806395d89b411161006657806395d89b41146101bb578063a6f9dae1146101c3578063a9059cbb146101d6578063dd62ed3e146101e957600080fd5b806332cb6b0c146101745780633542aee21461017d57806370a082311461019257600080fd5b806306fdde03146100d4578063095ea7b3146100f2578063117803e31461011557806318160ddd1461014057806323b872dd14610152578063313ce56714610165575b600080fd5b6100dc610222565b6040516100e99190610765565b60405180910390f35b6101056101003660046107cf565b6102b4565b60405190151581526020016100e9565b600654610128906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b6002545b6040519081526020016100e9565b6101056101603660046107f9565b6102ce565b604051601281526020016100e9565b61014460055481565b61019061018b3660046107cf565b6102f2565b005b6101446101a0366004610835565b6001600160a01b031660009081526020819052604090205490565b6100dc6103bb565b6101906101d1366004610835565b6103ca565b6101056101e43660046107cf565b610433565b6101446101f7366004610857565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102319061088a565b80601f016020809104026020016040519081016040528092919081815260200182805461025d9061088a565b80156102aa5780601f1061027f576101008083540402835291602001916102aa565b820191906000526020600020905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b6000336102c2818585610441565b60019150505b92915050565b6000336102dc858285610453565b6102e78585856104d1565b506001949350505050565b6006546001600160a01b0316331461033e5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064015b60405180910390fd5b6005548161034b60025490565b61035591906108c4565b11156103ad5760405162461bcd60e51b815260206004820152602160248201527f63616e206e6f74206d696e74206d6f7265207468616e206d617820737570706c6044820152607960f81b6064820152608401610335565b6103b78282610530565b5050565b6060600480546102319061088a565b6006546001600160a01b031633146104115760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606401610335565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000336102c28185856104d1565b61044e8383836001610566565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146104cb57818110156104bc57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610335565b6104cb84848484036000610566565b50505050565b6001600160a01b0383166104fb57604051634b637e8f60e11b815260006004820152602401610335565b6001600160a01b0382166105255760405163ec442f0560e01b815260006004820152602401610335565b61044e83838361063b565b6001600160a01b03821661055a5760405163ec442f0560e01b815260006004820152602401610335565b6103b76000838361063b565b6001600160a01b0384166105905760405163e602df0560e01b815260006004820152602401610335565b6001600160a01b0383166105ba57604051634a1406b160e11b815260006004820152602401610335565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104cb57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062d91815260200190565b60405180910390a350505050565b6001600160a01b03831661066657806002600082825461065b91906108c4565b909155506106d89050565b6001600160a01b038316600090815260208190526040902054818110156106b95760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610335565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106f457600280548290039055610713565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161075891815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561079257858101830151858201604001528201610776565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107ca57600080fd5b919050565b600080604083850312156107e257600080fd5b6107eb836107b3565b946020939093013593505050565b60008060006060848603121561080e57600080fd5b610817846107b3565b9250610825602085016107b3565b9150604084013590509250925092565b60006020828403121561084757600080fd5b610850826107b3565b9392505050565b6000806040838503121561086a57600080fd5b610873836107b3565b9150610881602084016107b3565b90509250929050565b600181811c9082168061089e57607f821691505b6020821081036108be57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102c857634e487b7160e01b600052601160045260246000fdfea26469706673582212202eb88c85c199a886a74376cfb6dc8c964bf3cfd91635c33236a4d0f91442012f64736f6c63430008140033";

type DNMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DNMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DNM__factory extends ContractFactory {
  constructor(...args: DNMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string }
  ): Promise<DNM> {
    return super.deploy(name, symbol, overrides || {}) as Promise<DNM>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): DNM {
    return super.attach(address) as DNM;
  }
  override connect(signer: Signer): DNM__factory {
    return super.connect(signer) as DNM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DNMInterface {
    return new utils.Interface(_abi) as DNMInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DNM {
    return new Contract(address, _abi, signerOrProvider) as DNM;
  }
}
