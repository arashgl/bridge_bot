/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DAO, DAOInterface } from "../../contracts/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_election",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ConfirmTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "RevokeConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "SubmitTransaction",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "election",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "getTransaction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "numConfirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numConfirmationsRequired",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "numConfirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff1916600417905534801561001d57600080fd5b5060405161154138038061154183398101604081905261003c91610067565b600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055610097565b60006020828403121561007957600080fd5b81516001600160a01b038116811461009057600080fd5b9392505050565b61149b806100a66000396000f3fe6080604052600436106100a05760003560e01c80639ace38c2116100645780639ace38c2146101e4578063c01a8c8414610204578063c642747414610224578063d0549b8514610244578063eb28fd9114610270578063ee22610b1461029057600080fd5b806320ea8d86146100e65780632e7700f01461010857806333ea3dc81461012b5780634b1d3ede1461015c57806380f59a651461019957600080fd5b366100e1576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b3480156100f257600080fd5b50610106610101366004610f5e565b6102b0565b005b34801561011457600080fd5b506002546040519081526020015b60405180910390f35b34801561013757600080fd5b5061014b610146366004610f5e565b61052c565b604051610122959493929190610fbd565b34801561016857600080fd5b506000546101819061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610122565b3480156101a557600080fd5b506101d46101b4366004611010565b600160209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610122565b3480156101f057600080fd5b5061014b6101ff366004610f5e565b610627565b34801561021057600080fd5b5061010661021f366004610f5e565b610700565b34801561023057600080fd5b5061010661023f366004611056565b610981565b34801561025057600080fd5b5060005461025e9060ff1681565b60405160ff9091168152602001610122565b34801561027c57600080fd5b5061018161028b366004611123565b610bf2565b34801561029c57600080fd5b506101066102ab366004610f5e565b610c6c565b600060019054906101000a90046001600160a01b03166001600160a01b031663d932a77f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610303573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610327919061114d565b1561034d5760405162461bcd60e51b81526004016103449061116f565b60405180910390fd5b6000546040516317aa5fb760e11b81523360048201526101009091046001600160a01b031690632f54bf6e90602401602060405180830381865afa158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bd919061114d565b6103d95760405162461bcd60e51b81526004016103449061119b565b600254819081106103fc5760405162461bcd60e51b8152600401610344906111be565b8160028181548110610410576104106111e9565b600091825260209091206003600590920201015460ff16156104445760405162461bcd60e51b8152600401610344906111ff565b600060028481548110610459576104596111e9565b600091825260208083208784526001825260408085203386529092529220546005909102909101915060ff166104c45760405162461bcd60e51b815260206004820152601060248201526f1d1e081b9bdd0818dbdb999a5c9b595960821b6044820152606401610344565b60018160040160008282546104d99190611242565b90915550506000848152600160209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b6000806060600080600060028781548110610549576105496111e9565b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff90921691839061059390611255565b80601f01602080910402602001604051908101604052809291908181526020018280546105bf90611255565b801561060c5780601f106105e15761010080835404028352916020019161060c565b820191906000526020600020905b8154815290600101906020018083116105ef57829003601f168201915b50505050509250955095509550955095505091939590929450565b6002818154811061063757600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b03909316945090929161066d90611255565b80601f016020809104026020016040519081016040528092919081815260200182805461069990611255565b80156106e65780601f106106bb576101008083540402835291602001916106e6565b820191906000526020600020905b8154815290600101906020018083116106c957829003601f168201915b505050506003830154600490930154919260ff1691905085565b600060019054906101000a90046001600160a01b03166001600160a01b031663d932a77f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610753573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610777919061114d565b156107945760405162461bcd60e51b81526004016103449061116f565b6000546040516317aa5fb760e11b81523360048201526101009091046001600160a01b031690632f54bf6e90602401602060405180830381865afa1580156107e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610804919061114d565b6108205760405162461bcd60e51b81526004016103449061119b565b600254819081106108435760405162461bcd60e51b8152600401610344906111be565b8160028181548110610857576108576111e9565b600091825260209091206003600590920201015460ff161561088b5760405162461bcd60e51b8152600401610344906111ff565b6000838152600160209081526040808320338452909152902054839060ff16156108ee5760405162461bcd60e51b81526020600482015260146024820152731d1e08185b1c9958591e4818dbdb999a5c9b595960621b6044820152606401610344565b600060028581548110610903576109036111e9565b906000526020600020906005020190506001816004016000828254610928919061128f565b90915550506000858152600160208181526040808420338086529252808420805460ff1916909317909255905187927f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004191a35050505050565b600060019054906101000a90046001600160a01b03166001600160a01b031663d932a77f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f8919061114d565b15610a155760405162461bcd60e51b81526004016103449061116f565b6000546040516317aa5fb760e11b81523360048201526101009091046001600160a01b031690632f54bf6e90602401602060405180830381865afa158015610a61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a85919061114d565b610aa15760405162461bcd60e51b81526004016103449061119b565b600280546040805160a0810182526001600160a01b03878116825260208201878152928201868152600060608401819052608084018190526001860187559590955281517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace6005860290810180546001600160a01b0319169290931691909117825592517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf84015593519293909290917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad00190610b7e90826112f1565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d90610be490889088906113b1565b60405180910390a450505050565b6000805460405163025e7c2760e01b815260ff841660048201526101009091046001600160a01b03169063025e7c2790602401602060405180830381865afa158015610c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6691906113d2565b92915050565b600060019054906101000a90046001600160a01b03166001600160a01b031663d932a77f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce3919061114d565b15610d005760405162461bcd60e51b81526004016103449061116f565b6000546040516317aa5fb760e11b81523360048201526101009091046001600160a01b031690632f54bf6e90602401602060405180830381865afa158015610d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d70919061114d565b610d8c5760405162461bcd60e51b81526004016103449061119b565b60025481908110610daf5760405162461bcd60e51b8152600401610344906111be565b8160028181548110610dc357610dc36111e9565b600091825260209091206003600590920201015460ff1615610df75760405162461bcd60e51b8152600401610344906111ff565b600060028481548110610e0c57610e0c6111e9565b9060005260206000209060050201905060008054906101000a900460ff1660ff1681600401541015610e745760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840caf0cac6eae8ca40e8f607b1b6044820152606401610344565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610eab9060028601906113ef565b60006040518083038185875af1925050503d8060008114610ee8576040519150601f19603f3d011682016040523d82523d6000602084013e610eed565b606091505b5050905080610f2a5760405162461bcd60e51b81526020600482015260096024820152681d1e0819985a5b195960ba1b6044820152606401610344565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b600060208284031215610f7057600080fd5b5035919050565b6000815180845260005b81811015610f9d57602081850181015186830182015201610f81565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038616815284602082015260a060408201526000610fe460a0830186610f77565b931515606083015250608001529392505050565b6001600160a01b038116811461100d57600080fd5b50565b6000806040838503121561102357600080fd5b82359150602083013561103581610ff8565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561106b57600080fd5b833561107681610ff8565b925060208401359150604084013567ffffffffffffffff8082111561109a57600080fd5b818601915086601f8301126110ae57600080fd5b8135818111156110c0576110c0611040565b604051601f8201601f19908116603f011681019083821181831017156110e8576110e8611040565b8160405282815289602084870101111561110157600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561113557600080fd5b813560ff8116811461114657600080fd5b9392505050565b60006020828403121561115f57600080fd5b8151801515811461114657600080fd5b6020808252601290820152711d9bdd1a5b99c81b9bdd08185b1b1bddd95960721b604082015260600190565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6020808252601190820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252601390820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610c6657610c6661122c565b600181811c9082168061126957607f821691505b60208210810361128957634e487b7160e01b600052602260045260246000fd5b50919050565b80820180821115610c6657610c6661122c565b601f8211156112ec57600081815260208120601f850160051c810160208610156112c95750805b601f850160051c820191505b818110156112e8578281556001016112d5565b5050505b505050565b815167ffffffffffffffff81111561130b5761130b611040565b61131f816113198454611255565b846112a2565b602080601f831160018114611354576000841561133c5750858301515b600019600386901b1c1916600185901b1785556112e8565b600085815260208120601f198616915b8281101561138357888601518255948401946001909101908401611364565b50858210156113a15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006113ca6040830184610f77565b949350505050565b6000602082840312156113e457600080fd5b815161114681610ff8565b60008083546113fd81611255565b60018281168015611415576001811461142a57611459565b60ff1984168752821515830287019450611459565b8760005260208060002060005b858110156114505781548a820152908401908201611437565b50505082870194505b5092969550505050505056fea2646970667358221220e4db85c8955ee917904f1a553ee37c6404572822cb362379e22d4e833cb8ca4064736f6c63430008140033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _election: string,
    overrides?: Overrides & { from?: string }
  ): Promise<DAO> {
    return super.deploy(_election, overrides || {}) as Promise<DAO>;
  }
  override getDeployTransaction(
    _election: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_election, overrides || {});
  }
  override attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  override connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
