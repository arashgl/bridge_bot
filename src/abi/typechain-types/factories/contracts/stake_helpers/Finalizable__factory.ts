/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Finalizable,
  FinalizableInterface,
} from "../../../contracts/stake_helpers/Finalizable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "FinalizeContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "CONTACT_FINALIZED",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff60a01b1916905534801561001d57600080fd5b50338061004457604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004d81610053565b506100a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610256806100b26000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806328c5cf0a1461005c5780635b75366e14610066578063715018a61461008f5780638da5cb5b14610097578063f2fde38b146100b2575b600080fd5b6100646100c5565b005b60005461007a90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b61006461011c565b6000546040516001600160a01b039091168152602001610086565b6100646100c03660046101f0565b610130565b6100cd610173565b6000805460ff60a01b1916600160a01b1790556040517fa26419d4e7754a6ee392a5f28e81e97453baa4d10cf3b78a2e198bd3cb14da1a906101129042815260200190565b60405180910390a1565b610124610173565b61012e60006101a0565b565b610138610173565b6001600160a01b03811661016757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610170816101a0565b50565b6000546001600160a01b0316331461012e5760405163118cdaa760e01b815233600482015260240161015e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561020257600080fd5b81356001600160a01b038116811461021957600080fd5b939250505056fea2646970667358221220668512b8dba8161743d2341ab5d693863ff8d5bba4cf2204e595244ffa34040464736f6c63430008140033";

type FinalizableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FinalizableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Finalizable__factory extends ContractFactory {
  constructor(...args: FinalizableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Finalizable> {
    return super.deploy(overrides || {}) as Promise<Finalizable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Finalizable {
    return super.attach(address) as Finalizable;
  }
  override connect(signer: Signer): Finalizable__factory {
    return super.connect(signer) as Finalizable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FinalizableInterface {
    return new utils.Interface(_abi) as FinalizableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Finalizable {
    return new Contract(address, _abi, signerOrProvider) as Finalizable;
  }
}
