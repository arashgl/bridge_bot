/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Wrapper, WrapperInterface } from "../../contracts/Wrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [],
    name: "NotLandOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWrapperOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001adf38038062001adf833981016040819052620000349162000147565b33604051806040016040528060078152602001662bb930b83832b960c91b8152506040518060400160405280600381526020016205752560ec1b81525081600090816200008291906200021e565b5060016200009182826200021e565b5050506001600160a01b038116620000c357604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000ce81620000f5565b50600b80546001600160a01b0319166001600160a01b0392909216919091179055620002ea565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200015a57600080fd5b81516001600160a01b03811681146200017257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001a457607f821691505b602082108103620001c557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021957600081815260208120601f850160051c81016020861015620001f45750805b601f850160051c820191505b81811015620002155782815560010162000200565b5050505b505050565b81516001600160401b038111156200023a576200023a62000179565b62000252816200024b84546200018f565b84620001cb565b602080601f8311600181146200028a5760008415620002715750858301515b600019600386901b1c1916600185901b17855562000215565b600085815260208120601f198616915b82811015620002bb578886015182559484019460019091019084016200029a565b5085821015620002da5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6117e580620002fa6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063519dc8d2116100c3578063a22cb4651161007c578063a22cb465146102ba578063b88d4fde146102cd578063c87b56dd146102e0578063e985e9c5146102f3578063f2fde38b14610306578063fc0c546a1461031957600080fd5b8063519dc8d2146102535780636352211e1461027357806370a0823114610286578063715018a6146102995780638da5cb5b146102a157806395d89b41146102b257600080fd5b806323b872dd1161011557806323b872dd146101e15780632e1a7d4d146101f45780632f745c591461020757806340c10f191461021a57806342842e0e1461022d5780634f6ccce71461024057600080fd5b806301ffc9a71461015257806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba57806318160ddd146101cf575b600080fd5b610165610160366004611383565b61032c565b60405190151581526020015b60405180910390f35b610182610357565b60405161017191906113f0565b6101a261019d366004611403565b6103e9565b6040516001600160a01b039091168152602001610171565b6101cd6101c8366004611431565b610412565b005b6008545b604051908152602001610171565b6101cd6101ef36600461145d565b610421565b6101cd610202366004611403565b6104b1565b6101d3610215366004611431565b610558565b6101cd610228366004611431565b6105bd565b6101cd61023b36600461145d565b6106cd565b6101d361024e366004611403565b6106ed565b61026661026136600461149e565b610746565b60405161017191906114bb565b6101a2610281366004611403565b6107e8565b6101d361029436600461149e565b6107f3565b6101cd61083b565b600a546001600160a01b03166101a2565b61018261084f565b6101cd6102c83660046114ff565b61085e565b6101cd6102db366004611553565b610869565b6101826102ee366004611403565b610880565b610165610301366004611633565b6108f5565b6101cd61031436600461149e565b610923565b600b546101a2906001600160a01b031681565b60006001600160e01b0319821663780e9d6360e01b1480610351575061035182610961565b92915050565b60606000805461036690611661565b80601f016020809104026020016040519081016040528092919081815260200182805461039290611661565b80156103df5780601f106103b4576101008083540402835291602001916103df565b820191906000526020600020905b8154815290600101906020018083116103c257829003601f168201915b5050505050905090565b60006103f4826109b1565b506000828152600460205260409020546001600160a01b0316610351565b61041d8282336109ea565b5050565b6001600160a01b03821661045057604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061045d8383336109f7565b9050836001600160a01b0316816001600160a01b0316146104ab576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610447565b50505050565b336104bb826107e8565b6001600160a01b0316146104e25760405163f78db80b60e01b815260040160405180910390fd5b6104eb81610acc565b600b546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561053d57600080fd5b505af1158015610551573d6000803e3d6000fd5b5050505050565b6000610563836107f3565b82106105945760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610447565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600b546040516331a9108f60e11b815260048101839052839183916001600160a01b03808516921690636352211e90602401602060405180830381865afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610630919061169b565b6001600160a01b0316146106575760405163a1d2981d60e01b815260040160405180910390fd5b600b546040516323b872dd60e01b81526001600160a01b03868116600483015230602483015260448201869052909116906323b872dd90606401600060405180830381600087803b1580156106ab57600080fd5b505af11580156106bf573d6000803e3d6000fd5b505050506104ab8484610b07565b6106e883838360405180602001604052806000815250610869565b505050565b60006106f860085490565b82106107215760405163295f44f760e21b81526000600482015260248101839052604401610447565b60088281548110610734576107346116b8565b90600052602060002001549050919050565b60606000610753836107f3565b905060008167ffffffffffffffff8111156107705761077061153d565b604051908082528060200260200182016040528015610799578160200160208202803683370190505b50905060005b828110156107e0576107b18582610558565b8282815181106107c3576107c36116b8565b6020908102919091010152806107d8816116e4565b91505061079f565b509392505050565b6000610351826109b1565b60006001600160a01b03821661081f576040516322718ad960e21b815260006004820152602401610447565b506001600160a01b031660009081526003602052604090205490565b610843610b6c565b61084d6000610b99565b565b60606001805461036690611661565b61041d338383610beb565b610874848484610421565b6104ab84848484610c8a565b606061088b826109b1565b5060006108a360408051602081019091526000815290565b905060008151116108c357604051806020016040528060008152506108ee565b806108cd84610dac565b6040516020016108de9291906116fd565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61092b610b6c565b6001600160a01b03811661095557604051631e4fbdf760e01b815260006004820152602401610447565b61095e81610b99565b50565b60006001600160e01b031982166380ac58cd60e01b148061099257506001600160e01b03198216635b5e139f60e01b145b8061035157506301ffc9a760e01b6001600160e01b0319831614610351565b6000818152600260205260408120546001600160a01b03168061035157604051637e27328960e01b815260048101849052602401610447565b6106e88383836001610e3f565b600080610a05858585610f45565b90506001600160a01b038116610a6257610a5d84600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610a85565b846001600160a01b0316816001600160a01b031614610a8557610a85818561103e565b6001600160a01b038516610aa157610a9c846110cf565b610ac4565b846001600160a01b0316816001600160a01b031614610ac457610ac4858561117e565b949350505050565b6000610adb60008360006109f7565b90506001600160a01b03811661041d57604051637e27328960e01b815260048101839052602401610447565b6001600160a01b038216610b3157604051633250574960e11b815260006004820152602401610447565b6000610b3f838360006109f7565b90506001600160a01b038116156106e8576040516339e3563760e11b815260006004820152602401610447565b600a546001600160a01b0316331461084d5760405163118cdaa760e01b8152336004820152602401610447565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610c1d57604051630b61174360e31b81526001600160a01b0383166004820152602401610447565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156104ab57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610ccc90339088908790879060040161172c565b6020604051808303816000875af1925050508015610d07575060408051601f3d908101601f19168201909252610d0491810190611769565b60015b610d70573d808015610d35576040519150601f19603f3d011682016040523d82523d6000602084013e610d3a565b606091505b508051600003610d6857604051633250574960e11b81526001600160a01b0385166004820152602401610447565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461055157604051633250574960e11b81526001600160a01b0385166004820152602401610447565b60606000610db9836111ce565b600101905060008167ffffffffffffffff811115610dd957610dd961153d565b6040519080825280601f01601f191660200182016040528015610e03576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e0d57509392505050565b8080610e5357506001600160a01b03821615155b15610f15576000610e63846109b1565b90506001600160a01b03831615801590610e8f5750826001600160a01b0316816001600160a01b031614155b8015610ea25750610ea081846108f5565b155b15610ecb5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610447565b8115610f135783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b0390811690831615610f7257610f728184866112a6565b6001600160a01b03811615610fb057610f8f600085600080610e3f565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610fdf576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000611049836107f3565b60008381526007602052604090205490915080821461109c576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906110e190600190611786565b60008381526009602052604081205460088054939450909284908110611109576111096116b8565b90600052602060002001549050806008838154811061112a5761112a6116b8565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061116257611162611799565b6001900381819060005260206000200160009055905550505050565b6000600161118b846107f3565b6111959190611786565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061120d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611239576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061125757662386f26fc10000830492506010015b6305f5e100831061126f576305f5e100830492506008015b612710831061128357612710830492506004015b60648310611295576064830492506002015b600a83106103515760010192915050565b6112b183838361130a565b6106e8576001600160a01b0383166112df57604051637e27328960e01b815260048101829052602401610447565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610447565b60006001600160a01b03831615801590610ac45750826001600160a01b0316846001600160a01b03161480611344575061134484846108f5565b80610ac45750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461095e57600080fd5b60006020828403121561139557600080fd5b81356108ee8161136d565b60005b838110156113bb5781810151838201526020016113a3565b50506000910152565b600081518084526113dc8160208601602086016113a0565b601f01601f19169290920160200192915050565b6020815260006108ee60208301846113c4565b60006020828403121561141557600080fd5b5035919050565b6001600160a01b038116811461095e57600080fd5b6000806040838503121561144457600080fd5b823561144f8161141c565b946020939093013593505050565b60008060006060848603121561147257600080fd5b833561147d8161141c565b9250602084013561148d8161141c565b929592945050506040919091013590565b6000602082840312156114b057600080fd5b81356108ee8161141c565b6020808252825182820181905260009190848201906040850190845b818110156114f3578351835292840192918401916001016114d7565b50909695505050505050565b6000806040838503121561151257600080fd5b823561151d8161141c565b91506020830135801515811461153257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561156957600080fd5b84356115748161141c565b935060208501356115848161141c565b925060408501359150606085013567ffffffffffffffff808211156115a857600080fd5b818701915087601f8301126115bc57600080fd5b8135818111156115ce576115ce61153d565b604051601f8201601f19908116603f011681019083821181831017156115f6576115f661153d565b816040528281528a602084870101111561160f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561164657600080fd5b82356116518161141c565b915060208301356115328161141c565b600181811c9082168061167557607f821691505b60208210810361169557634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156116ad57600080fd5b81516108ee8161141c565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016116f6576116f66116ce565b5060010190565b6000835161170f8184602088016113a0565b8351908301906117238183602088016113a0565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061175f908301846113c4565b9695505050505050565b60006020828403121561177b57600080fd5b81516108ee8161136d565b81810381811115610351576103516116ce565b634e487b7160e01b600052603160045260246000fdfea26469706673582212206f01844b524e98f8c86b8b46ea0d39d0656b22e29825130c5b2ae35d4d336de364736f6c63430008140033";

type WrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wrapper__factory extends ContractFactory {
  constructor(...args: WrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Wrapper> {
    return super.deploy(_token, overrides || {}) as Promise<Wrapper>;
  }
  override getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): Wrapper {
    return super.attach(address) as Wrapper;
  }
  override connect(signer: Signer): Wrapper__factory {
    return super.connect(signer) as Wrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrapperInterface {
    return new utils.Interface(_abi) as WrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Wrapper {
    return new Contract(address, _abi, signerOrProvider) as Wrapper;
  }
}
