/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DNM, DNMInterface } from "../../contracts/DNM";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "GATEWAY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "send_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintByGateway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526a084595161401484a0000006005553480156200002057600080fd5b5060405162000dde38038062000dde833981016040819052620000439162000332565b8383600362000053838262000454565b50600462000062828262000454565b50505060008111620000cb5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c20737570706c792068617320746f20626520677265617465726044820152660207468616e20360cc1b60648201526084015b60405180910390fd5b600680546001600160a01b0319166001600160a01b038416179055620000f23382620000fc565b5050505062000548565b6001600160a01b038216620001285760405163ec442f0560e01b815260006004820152602401620000c2565b62000136600083836200013a565b5050565b6001600160a01b038316620001695780600260008282546200015d919062000520565b90915550620001dd9050565b6001600160a01b03831660009081526020819052604090205481811015620001be5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000c2565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001fb576002805482900390556200021a565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200026091815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029557600080fd5b81516001600160401b0380821115620002b257620002b26200026d565b604051601f8301601f19908116603f01168101908282118183101715620002dd57620002dd6200026d565b81604052838152602092508683858801011115620002fa57600080fd5b600091505b838210156200031e5785820183015181830184015290820190620002ff565b600093810190920192909252949350505050565b600080600080608085870312156200034957600080fd5b84516001600160401b03808211156200036157600080fd5b6200036f8883890162000283565b955060208701519150808211156200038657600080fd5b50620003958782880162000283565b604087015190945090506001600160a01b0381168114620003b557600080fd5b6060959095015193969295505050565b600181811c90821680620003da57607f821691505b602082108103620003fb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200044f57600081815260208120601f850160051c810160208610156200042a5750805b601f850160051c820191505b818110156200044b5782815560010162000436565b5050505b505050565b81516001600160401b038111156200047057620004706200026d565b6200048881620004818454620003c5565b8462000401565b602080601f831160018114620004c05760008415620004a75750858301515b600019600386901b1c1916600185901b1785556200044b565b600085815260208120601f198616915b82811015620004f157888601518255948401946001909101908401620004d0565b5085821015620005105787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200054257634e487b7160e01b600052601160045260246000fd5b92915050565b61088680620005586000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063338c537111610071578063338c53711461013757806370a08231146101625780638556056e1461018b57806395d89b41146101a0578063a9059cbb146101a8578063dd62ed3e146101bb57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f57806332cb6b0c1461012e575b600080fd5b6100c16101f4565b6040516100ce91906106d0565b60405180910390f35b6100ea6100e536600461073a565b610286565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610764565b6102a0565b604051601281526020016100ce565b6100fe60055481565b60065461014a906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b6100fe6101703660046107a0565b6001600160a01b031660009081526020819052604090205490565b61019e61019936600461073a565b6102c4565b005b6100c161038f565b6100ea6101b636600461073a565b61039e565b6100fe6101c93660046107c2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b606060038054610203906107f5565b80601f016020809104026020016040519081016040528092919081815260200182805461022f906107f5565b801561027c5780601f106102515761010080835404028352916020019161027c565b820191906000526020600020905b81548152906001019060200180831161025f57829003601f168201915b5050505050905090565b6000336102948185856103ac565b60019150505b92915050565b6000336102ae8582856103be565b6102b985858561043c565b506001949350505050565b6006546001600160a01b031633146103125760405162461bcd60e51b815260206004820152600c60248201526b6f6e6c79206761746577617960a01b60448201526064015b60405180910390fd5b6005548161031f60025490565b610329919061082f565b11156103815760405162461bcd60e51b815260206004820152602160248201527f63616e206e6f74206d696e74206d6f7265207468616e206d617820737570706c6044820152607960f81b6064820152608401610309565b61038b828261049b565b5050565b606060048054610203906107f5565b60003361029481858561043c565b6103b983838360016104d1565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610436578181101561042757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610309565b610436848484840360006104d1565b50505050565b6001600160a01b03831661046657604051634b637e8f60e11b815260006004820152602401610309565b6001600160a01b0382166104905760405163ec442f0560e01b815260006004820152602401610309565b6103b98383836105a6565b6001600160a01b0382166104c55760405163ec442f0560e01b815260006004820152602401610309565b61038b600083836105a6565b6001600160a01b0384166104fb5760405163e602df0560e01b815260006004820152602401610309565b6001600160a01b03831661052557604051634a1406b160e11b815260006004820152602401610309565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561043657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161059891815260200190565b60405180910390a350505050565b6001600160a01b0383166105d15780600260008282546105c6919061082f565b909155506106439050565b6001600160a01b038316600090815260208190526040902054818110156106245760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610309565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661065f5760028054829003905561067e565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106c391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156106fd578581018301518582016040015282016106e1565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461073557600080fd5b919050565b6000806040838503121561074d57600080fd5b6107568361071e565b946020939093013593505050565b60008060006060848603121561077957600080fd5b6107828461071e565b92506107906020850161071e565b9150604084013590509250925092565b6000602082840312156107b257600080fd5b6107bb8261071e565b9392505050565b600080604083850312156107d557600080fd5b6107de8361071e565b91506107ec6020840161071e565b90509250929050565b600181811c9082168061080957607f821691505b60208210810361082957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561029a57634e487b7160e01b600052601160045260246000fdfea2646970667358221220acfdf047424abc87d3cc189a9ce51d62ccc12914b30fad43461771ea9bbbda9664736f6c63430008140033";

type DNMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DNMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DNM__factory extends ContractFactory {
  constructor(...args: DNMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    _gateway: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<DNM> {
    return super.deploy(
      name,
      symbol,
      _gateway,
      initialSupply,
      overrides || {}
    ) as Promise<DNM>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    _gateway: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      _gateway,
      initialSupply,
      overrides || {}
    );
  }
  override attach(address: string): DNM {
    return super.attach(address) as DNM;
  }
  override connect(signer: Signer): DNM__factory {
    return super.connect(signer) as DNM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DNMInterface {
    return new utils.Interface(_abi) as DNMInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DNM {
    return new Contract(address, _abi, signerOrProvider) as DNM;
  }
}
