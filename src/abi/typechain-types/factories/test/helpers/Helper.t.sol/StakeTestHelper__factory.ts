/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakeTestHelper,
  StakeTestHelperInterface,
} from "../../../../test/helpers/Helper.t.sol/StakeTestHelper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506801c969715ed4e000007fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d5567e4b4b8af6a7000007fabbb5caa7dda850e60932de0934eb1f9d0f59695050f761dc64e443e5030a5695567725a5c57b53800007f101e368776582e57ab3d116ffe2517c0a585cd5b23174b01e275c2d8329c3d8355672dbdbe897bb000007f52d75039926638d3c558b2bdefb945d5be8dae29dedd1c313212a4d472d9fde5556716dedf44bdd800007f2b232c97452f0950c94e2539fdc7e69d21166113cf7a9bcb99b220a3fe5d720a556802b00f8b505bde00007fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5568015807c5a82def00007fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f5567abf21f5adf1700007f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b556744ce5abb3c6300007fedc95719e9a3b28dd8e80877cb5880a9be7de1a13fc8b05e7999683b6b567643556722672d5d9e3180007fe2689cd4a84e23ad2f564004f1c9013e9589d260bde6380aba3ca7e09e4df40c556002602052680396b5a541e2dc00007fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0556801cb5ad2a0f16e00007f679795a0195a1b76cdebb7c51d74e058aee92919b8c3389af86ef24535e8a28c5567e5ad695078b700007f88601476d11616a71c5be67555bd1dff4b1cbf21533d2669b768b61518cfe1c355675bdef6ecfd1600007fee60d0579bcffd98e668647d59fec1ff86a7fb340ce572e844f234ae73a6918f556005600052672def7b767e8b00007fb98b78633099fa36ed8b8680c4f8092689e1e04080eb9cbb077ca38a14d7e38455603f806102b36000396000f3fe6080604052600080fdfea2646970667358221220c178352a09b10c665f086c1db19ffc07d38eecf85ebbf5c40d2c019090c3eb8a64736f6c63430008140033";

type StakeTestHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeTestHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeTestHelper__factory extends ContractFactory {
  constructor(...args: StakeTestHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<StakeTestHelper> {
    return super.deploy(overrides || {}) as Promise<StakeTestHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StakeTestHelper {
    return super.attach(address) as StakeTestHelper;
  }
  override connect(signer: Signer): StakeTestHelper__factory {
    return super.connect(signer) as StakeTestHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeTestHelperInterface {
    return new utils.Interface(_abi) as StakeTestHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakeTestHelper {
    return new Contract(address, _abi, signerOrProvider) as StakeTestHelper;
  }
}
