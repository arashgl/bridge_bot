/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OrdersStruct,
  OrdersStructInterface,
} from "../../contracts/OrdersStruct";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
    ],
    name: "InvalidFromID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "InvalidRangeID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "InvalidToID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "seller_id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
    ],
    name: "NewOrderEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "OrderList",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "seller_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bv_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sv_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "seller_token",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_order_id",
        type: "uint256",
      },
    ],
    name: "getOrderList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "user_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seller_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bv_value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sv_value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seller_token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct OrdersStruct.Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "getOrderLists",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "user_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seller_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bv_value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sv_value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seller_token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct OrdersStruct.Order[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "order_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061058b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306b099af146100515780635c79347f146100f757806380658cf814610117578063b979142514610137575b600080fd5b6100ac61005f3660046103d9565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006860154600787015460089097015495969495939492939192909160ff1689565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e08301521515610100820152610120015b60405180910390f35b61010a6101053660046103d9565b61014e565b6040516100ee919061044e565b61012a610125366004610463565b6101d3565b6040516100ee9190610485565b61014060005481565b6040519081526020016100ee565b610156610388565b506000908152600160208181526040928390208351610120810185528154815292810154918301919091526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260089091015460ff16151561010082015290565b60608282600182101561020157604051633a2bd95560e11b8152600481018390526024015b60405180910390fd5b80821061022b5760405163d427f71f60e01b815260048101829052602481018390526044016101f8565b60005484111561025157604051633322840360e11b8152600481018590526024016101f8565b600061025d86866104ea565b67ffffffffffffffff811115610275576102756104fd565b6040519080825280602002602001820160405280156102ae57816020015b61029b610388565b8152602001906001900390816102935790505b50905060005b6102be87876104ea565b81101561037e57600160006102d3838a610513565b81526020808201929092526040908101600020815161012081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e08301526008015460ff161515610100820152825183908390811061036057610360610526565b602002602001018190525080806103769061053c565b9150506102b4565b5095945050505050565b60405180610120016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600080191681526020016000151581525090565b6000602082840312156103eb57600080fd5b5035919050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151151581840152505050565b610120810161045d82846103f2565b92915050565b6000806040838503121561047657600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156104c8576104b48385516103f2565b9284019261012092909201916001016104a1565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561045d5761045d6104d4565b634e487b7160e01b600052604160045260246000fd5b8082018082111561045d5761045d6104d4565b634e487b7160e01b600052603260045260246000fd5b60006001820161054e5761054e6104d4565b506001019056fea26469706673582212203a99445444c57a5a6a3dfe45a611099e0af8dfe235277bfa46616db908b48d4364736f6c63430008140033";

type OrdersStructConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrdersStructConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrdersStruct__factory extends ContractFactory {
  constructor(...args: OrdersStructConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<OrdersStruct> {
    return super.deploy(overrides || {}) as Promise<OrdersStruct>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrdersStruct {
    return super.attach(address) as OrdersStruct;
  }
  override connect(signer: Signer): OrdersStruct__factory {
    return super.connect(signer) as OrdersStruct__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrdersStructInterface {
    return new utils.Interface(_abi) as OrdersStructInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrdersStruct {
    return new Contract(address, _abi, signerOrProvider) as OrdersStruct;
  }
}
