/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DAO, DAOInterface } from "../../contracts/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_election",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ConfirmTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "RevokeConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "SubmitTransaction",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "election",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "getTransaction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "cycleCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numConfirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numConfirmationsRequired",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "cycleCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numConfirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff1916600717905534801561001d57600080fd5b506040516118aa3803806118aa83398101604081905261003c91610067565b600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055610097565b60006020828403121561007957600080fd5b81516001600160a01b038116811461009057600080fd5b9392505050565b611804806100a66000396000f3fe6080604052600436106100a05760003560e01c80639ace38c2116100645780639ace38c2146101e5578063c01a8c8414610205578063c642747414610225578063d0549b8514610245578063eb28fd9114610271578063ee22610b1461029157600080fd5b806320ea8d86146100e65780632e7700f01461010857806333ea3dc81461012b5780634b1d3ede1461015d57806380f59a651461019a57600080fd5b366100e1576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b3480156100f257600080fd5b50610106610101366004611258565b6102b1565b005b34801561011457600080fd5b506002546040519081526020015b60405180910390f35b34801561013757600080fd5b5061014b610146366004611258565b6105e6565b604051610122969594939291906112b7565b34801561016957600080fd5b506000546101829061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610122565b3480156101a657600080fd5b506101d56101b5366004611314565b600160209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610122565b3480156101f157600080fd5b5061014b610200366004611258565b6106e9565b34801561021157600080fd5b50610106610220366004611258565b6107ca565b34801561023157600080fd5b5061010661024036600461135a565b610b04565b34801561025157600080fd5b5060005461025f9060ff1681565b60405160ff9091168152602001610122565b34801561027d57600080fd5b5061018261028c366004611427565b610db7565b34801561029d57600080fd5b506101066102ac366004611258565b610ea1565b600060019054906101000a90046001600160a01b03166001600160a01b031663d932a77f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610304573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103289190611451565b1561034e5760405162461bcd60e51b815260040161034590611473565b60405180910390fd5b6000546040516317aa5fb760e11b81523360048201526101009091046001600160a01b031690632f54bf6e90602401602060405180830381865afa15801561039a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103be9190611451565b6103da5760405162461bcd60e51b8152600401610345906114a2565b600254819081106103fd5760405162461bcd60e51b8152600401610345906114c5565b60028181548110610410576104106114f0565b906000526020600020906006020160040154600060019054906101000a90046001600160a01b03166001600160a01b031663316fda0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190611506565b146104b65760405162461bcd60e51b81526004016103459061151f565b81600281815481106104ca576104ca6114f0565b600091825260209091206003600690920201015460ff16156104fe5760405162461bcd60e51b815260040161034590611568565b600060028481548110610513576105136114f0565b600091825260208083208784526001825260408085203386529092529220546006909102909101915060ff1661057e5760405162461bcd60e51b815260206004820152601060248201526f1d1e081b9bdd0818dbdb999a5c9b595960821b6044820152606401610345565b600181600501600082825461059391906115ab565b90915550506000848152600160209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b600080606060008060008060028881548110610604576106046114f0565b60009182526020909120600690910201805460018201546003830154600484015460058501546002860180549697506001600160a01b039095169593949360ff909316928490610653906115be565b80601f016020809104026020016040519081016040528092919081815260200182805461067f906115be565b80156106cc5780601f106106a1576101008083540402835291602001916106cc565b820191906000526020600020905b8154815290600101906020018083116106af57829003601f168201915b505050505093509650965096509650965096505091939550919395565b600281815481106106f957600080fd5b60009182526020909120600690910201805460018201546002830180546001600160a01b03909316945090929161072f906115be565b80601f016020809104026020016040519081016040528092919081815260200182805461075b906115be565b80156107a85780601f1061077d576101008083540402835291602001916107a8565b820191906000526020600020905b81548152906001019060200180831161078b57829003601f168201915b5050505060038301546004840154600590940154929360ff9091169290915086565b600060019054906101000a90046001600160a01b03166001600160a01b031663d932a77f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108419190611451565b1561085e5760405162461bcd60e51b815260040161034590611473565b6000546040516317aa5fb760e11b81523360048201526101009091046001600160a01b031690632f54bf6e90602401602060405180830381865afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce9190611451565b6108ea5760405162461bcd60e51b8152600401610345906114a2565b6002548190811061090d5760405162461bcd60e51b8152600401610345906114c5565b60028181548110610920576109206114f0565b906000526020600020906006020160040154600060019054906101000a90046001600160a01b03166001600160a01b031663316fda0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190611506565b146109c65760405162461bcd60e51b81526004016103459061151f565b81600281815481106109da576109da6114f0565b600091825260209091206003600690920201015460ff1615610a0e5760405162461bcd60e51b815260040161034590611568565b6000838152600160209081526040808320338452909152902054839060ff1615610a715760405162461bcd60e51b81526020600482015260146024820152731d1e08185b1c9958591e4818dbdb999a5c9b595960621b6044820152606401610345565b600060028581548110610a8657610a866114f0565b906000526020600020906006020190506001816005016000828254610aab91906115f8565b90915550506000858152600160208181526040808420338086529252808420805460ff1916909317909255905187927f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004191a35050505050565b600060019054906101000a90046001600160a01b03166001600160a01b031663d932a77f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7b9190611451565b15610b985760405162461bcd60e51b815260040161034590611473565b6000546040516317aa5fb760e11b81523360048201526101009091046001600160a01b031690632f54bf6e90602401602060405180830381865afa158015610be4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c089190611451565b610c245760405162461bcd60e51b8152600401610345906114a2565b6000600280549050905060026040518060c00160405280866001600160a01b03168152602001858152602001848152602001600015158152602001600060019054906101000a90046001600160a01b03166001600160a01b031663316fda0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd69190611506565b81526000602091820181905283546001808201865594825290829020835160069092020180546001600160a01b0319166001600160a01b03909216919091178155908201519281019290925560408101519091906002820190610d39908261165a565b50606082015160038201805460ff19169115159190911790556080820151600482015560a0909101516005909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d90610da9908890889061171a565b60405180910390a450505050565b600080546040805163316fda0f60e01b815290516101009092046001600160a01b03169163ab91ade891839163316fda0f916004808201926020929091908290030181865afa158015610e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e329190611506565b6040516001600160e01b031960e084901b168152600481019190915260ff85166024820152604401602060405180830381865afa158015610e77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9b919061173b565b92915050565b600060019054906101000a90046001600160a01b03166001600160a01b031663d932a77f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f189190611451565b15610f355760405162461bcd60e51b815260040161034590611473565b6000546040516317aa5fb760e11b81523360048201526101009091046001600160a01b031690632f54bf6e90602401602060405180830381865afa158015610f81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa59190611451565b610fc15760405162461bcd60e51b8152600401610345906114a2565b60025481908110610fe45760405162461bcd60e51b8152600401610345906114c5565b60028181548110610ff757610ff76114f0565b906000526020600020906006020160040154600060019054906101000a90046001600160a01b03166001600160a01b031663316fda0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561105c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110809190611506565b1461109d5760405162461bcd60e51b81526004016103459061151f565b81600281815481106110b1576110b16114f0565b600091825260209091206003600690920201015460ff16156110e55760405162461bcd60e51b815260040161034590611568565b6000600284815481106110fa576110fa6114f0565b9060005260206000209060060201905060008054906101000a900460ff1660ff168160050154101561116e5760405162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f75676820636f6e6669726d6174696f6e7300000000000000006044820152606401610345565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b031691906111a5906002860190611758565b60006040518083038185875af1925050503d80600081146111e2576040519150601f19603f3d011682016040523d82523d6000602084013e6111e7565b606091505b50509050806112245760405162461bcd60e51b81526020600482015260096024820152681d1e0819985a5b195960ba1b6044820152606401610345565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b60006020828403121561126a57600080fd5b5035919050565b6000815180845260005b818110156112975760208185018101518683018201520161127b565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038716815285602082015260c0604082015260006112de60c0830187611271565b941515606083015250608081019290925260a0909101529392505050565b6001600160a01b038116811461131157600080fd5b50565b6000806040838503121561132757600080fd5b823591506020830135611339816112fc565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561136f57600080fd5b833561137a816112fc565b925060208401359150604084013567ffffffffffffffff8082111561139e57600080fd5b818601915086601f8301126113b257600080fd5b8135818111156113c4576113c4611344565b604051601f8201601f19908116603f011681019083821181831017156113ec576113ec611344565b8160405282815289602084870101111561140557600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561143957600080fd5b813560ff8116811461144a57600080fd5b9392505050565b60006020828403121561146357600080fd5b8151801515811461144a57600080fd5b6020808252601590820152746e6f7420616c6c6f77656420696e20766f74696e6760581b604082015260600190565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6020808252601190820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561151857600080fd5b5051919050565b60208082526029908201527f796f7520646f6e277420686176652061636365737320746f207468697320747260408201526830b739b0b1ba34b7b760b91b606082015260800190565b6020808252601390820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610e9b57610e9b611595565b600181811c908216806115d257607f821691505b6020821081036115f257634e487b7160e01b600052602260045260246000fd5b50919050565b80820180821115610e9b57610e9b611595565b601f82111561165557600081815260208120601f850160051c810160208610156116325750805b601f850160051c820191505b818110156116515782815560010161163e565b5050505b505050565b815167ffffffffffffffff81111561167457611674611344565b6116888161168284546115be565b8461160b565b602080601f8311600181146116bd57600084156116a55750858301515b600019600386901b1c1916600185901b178555611651565b600085815260208120601f198616915b828110156116ec578886015182559484019460019091019084016116cd565b508582101561170a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006117336040830184611271565b949350505050565b60006020828403121561174d57600080fd5b815161144a816112fc565b6000808354611766816115be565b6001828116801561177e5760018114611793576117c2565b60ff19841687528215158302870194506117c2565b8760005260208060002060005b858110156117b95781548a8201529084019082016117a0565b50505082870194505b5092969550505050505056fea264697066735822122021eac2751bcc3cf00a5db8d739dc6b1eaccf3dfda8d0679cdddb0f5e807d690a64736f6c63430008140033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _election: string,
    overrides?: Overrides & { from?: string }
  ): Promise<DAO> {
    return super.deploy(_election, overrides || {}) as Promise<DAO>;
  }
  override getDeployTransaction(
    _election: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_election, overrides || {});
  }
  override attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  override connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
