/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StakeMeta, StakeMetaInterface } from "../../contracts/StakeMeta";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "uvm_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "dnm_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "land_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sc_address",
        type: "address",
      },
    ],
    name: "AddSideContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AddTokenToPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "FinalizeContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "plan",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dnmAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "uvm_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "land_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
    ],
    name: "NewStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
    ],
    name: "NewUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "RemoveSideContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
    ],
    name: "WithdrawUserStake",
    type: "event",
  },
  {
    inputs: [],
    name: "CONTACT_FINALIZED",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DNM_TOKEN",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EIGHTEEN_MONTH_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LAND_TOKEN",
    outputs: [
      {
        internalType: "contract ERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LAUNCH_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_YEAR_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_DECAY_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SC_EXISTS",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKE_LIST_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKE_MAX_DNM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKE_MAX_UVM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKE_MIN_DNM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIME_STEP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOP_UP_PHASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_DNM_STAKED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_LAND_STAKED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_REWARD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_UVM_STAKED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TWO_YEAR_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USER_LIST_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UVM_POOL_BALANCE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UVM_TOKEN",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sc_address",
        type: "address",
      },
    ],
    name: "addSideContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addTokenToPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "plan",
        type: "uint8",
      },
    ],
    name: "allowedDnmAmountStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dnm",
        type: "uint256",
      },
    ],
    name: "calDnmUvmRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "plan_type",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "dnm_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stake_duration",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
    ],
    name: "calculateRewardForStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractDNMBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractUVMBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFinishedStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "land_id",
        type: "uint256",
      },
    ],
    name: "getPlanByTokenId",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan",
        name: "sp",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "getUserStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "getUserStakeIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeSideContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dnmAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "land_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stake_duration",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dnmAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "land_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stake_duration",
        type: "uint256",
      },
    ],
    name: "stakeFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakeList",
    outputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "plan",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "uvm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dnm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "land",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "finish",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stake_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "total_paid_out",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "transferRewardFromSideContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateTopUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan",
        name: "sp",
        type: "tuple",
      },
    ],
    name: "withdrawAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
    ],
    name: "withdrawReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdraw_reward",
        type: "bool",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260008080556003805460ff60a01b19908116909155600780549091169055601081905560118190556012556301e133806013556302d124806014556303c267006015553480156200005457600080fd5b506040516200431b3803806200431b83398101604081905262000077916200086e565b600180546001600160a01b0319166001600160a01b038416179055600260205268018493fba64ef000007fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e05567c249fdd3277800007f679795a0195a1b76cdebb7c51d74e058aee92919b8c3389af86ef24535e8a28c55676124fee993bc00007f88601476d11616a71c5be67555bd1dff4b1cbf21533d2669b768b61518cfe1c3556726db992a3b1800007fee60d0579bcffd98e668647d59fec1ff86a7fb340ce572e844f234ae73a6918f55600560005267136dcc951d8c00007fb98b78633099fa36ed8b8680c4f8092689e1e04080eb9cbb077ca38a14d7e3845533806200019b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620001a681620007ff565b50604080518082018252670ed96754b5ab00008082526729a2241af62c0000602080840182815260016000818152600480855296517fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe055591517fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0655865180880188528581526714d1120d7b160000818501818152600280865289875292517f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a755517f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a8558851808a018a52878152670a688906bd8b000081870190815260038087528a885291517f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa055517f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa1558951808b018b52888152670429d069189e00008188018181528b88528b895291517f1a1e6821cde7d0159c0d293177871e09677b4e42307c7db3ba94f8648a5a050f5590517f1a1e6821cde7d0159c0d293177871e09677b4e42307c7db3ba94f8648a5a0510558a51808c018c52988952670214e8348c4f000089880190815260058088528b895299517f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f0555517f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f06558a51808c018c52671657de7848610000808252673e73362871420000828a019081528789528b8a5291517f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b5590517f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017c558b51808d018d52818152671f399b1438a10000818a019081528689528b8a5290517f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a55517f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733b558b51808d018d52818152670f8b0a10e4700000818a019081528489528b8a5290517fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc055517fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc1558b51808d018d5281815267063eb89da4ed0000818a019081528c89528b8a5290517f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d555517f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d6558b51808d018d5290815267031f5c4ed27680008189019081528a88528a895290517f458b30c2d72bfd2c6317304a4594ecbafe5f729d3111b65fdc3a33bd48e5432d55517f458b30c2d72bfd2c6317304a4594ecbafe5f729d3111b65fdc3a33bd48e5432e558a51808c018c52671dd6559bdb1700008082526753444835ec580000828a019081529688526006808a5291517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a315595517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a32558b51808d018d52868152808901998a5294875280885293517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace295596517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2a558951808b018b52848152808701928352908552828652517f75f96ab15d697e93042dc45b5c896c4b27e89bb6eaf39475c5c371cb2513f7d255517f75f96ab15d697e93042dc45b5c896c4b27e89bb6eaf39475c5c371cb2513f7d35587518089018952828152670853a0d2313c0000818601908152978452818552517fc5069e24aaadb2addc3e52e868fcf3f4f8acf5a87e24300992fd4540c2a87eed5595517fc5069e24aaadb2addc3e52e868fcf3f4f8acf5a87e24300992fd4540c2a87eee55865180880190975286528582019283529290925291905290517fbfd358e93f18da3ed276c3afdbdba00b8f0b6008a03476a6a86bd6320ee6938b55517fbfd358e93f18da3ed276c3afdbdba00b8f0b6008a03476a6a86bd6320ee6938c5542600b55600880546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620008b8565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200086957600080fd5b919050565b6000806000606084860312156200088457600080fd5b6200088f8462000851565b92506200089f6020850162000851565b9150620008af6040850162000851565b90509250925092565b613a5380620008c86000396000f3fe608060405234801561001057600080fd5b506004361061030c5760003560e01c80637fea672c1161019d578063bf2683c4116100e9578063e66db227116100a2578063f19d2e5e1161007c578063f19d2e5e14610717578063f2a6c53514610727578063f2fde38b1461073b578063fc964a841461074e57600080fd5b8063e66db227146106e9578063ead8dbd4146106f1578063ec2daa9c1461070457600080fd5b8063bf2683c414610689578063c81acf5c1461069c578063c8333bb2146106a5578063ce325bf8146106ae578063d21d70de146106ce578063e28231e9146106e157600080fd5b80639f4216e811610156578063a638f2e211610130578063a638f2e214610635578063af4572b114610648578063b4ebaa2d14610651578063bbadc93a1461067657600080fd5b80639f4216e8146105fa578063a4580cd014610623578063a61e28ce1461062c57600080fd5b80637fea672c146105a45780638da5cb5b146105b5578063974c4195146105c65780639965f9e2146105d95780639d69c991146105e25780639df8cf72146105f157600080fd5b806341eedcbe1161025c578063631e136c116102155780636ddf4991116101ef5780636ddf49911461052a5780636f77926b14610532578063715018a614610589578063763ba3561461059157600080fd5b8063631e136c146105055780636560a8cc1461050e5780636841cbb41461052157600080fd5b806341eedcbe146103dc5780634c86259e146103ef5780634cd1f5f21461049b578063523a3f08146104c657806356714790146104e95780635b75366e146104f157600080fd5b80632424e6fa116102c95780633127ff95116102a35780633127ff95146103a1578063313da78f146103aa57806332bc298c146103ca57806338f10585146103d457600080fd5b80632424e6fa146103795780632879cf4b1461038457806328c5cf0a1461039757600080fd5b8063022466b5146103115780630adcbfac1461032d5780630ba70992146103425780630e1718961461035557806317387b58146103685780631f74440614610370575b600080fd5b61031a600b5481565b6040519081526020015b60405180910390f35b610335610761565b6040516103249190613466565b61031a61035036600461352d565b610895565b61031a6103633660046135c2565b610967565b610335610997565b61031a60125481565b61031a6301e1338081565b61031a6103923660046135c2565b610aea565b61039f610bca565b005b61031a600d5481565b6103bd6103b83660046135f0565b610c21565b604051610324919061360d565b61031a6201518081565b610335610c90565b61039f6103ea366004613645565b610df3565b6104496103fd3660046135c2565b601860205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880154600890980154969760ff8088169861010090980416968a565b604080519a8b5298151560208b015260ff909716978901979097526060880194909452608087019290925260a086015260c085015260e084015261010083019190915261012082015261014001610324565b6008546104ae906001600160a01b031681565b6040516001600160a01b039091168152602001610324565b6104d96104d43660046135c2565b611732565b6040519015158152602001610324565b61039f611a5a565b6003546104d990600160a01b900460ff1681565b61031a60135481565b61039f61051c366004613680565b611aef565b61031a60005481565b61031a611b4c565b61056e6105403660046135f0565b6001600160a01b0316600090815260166020526040902080546001820154600390920154909260ff90921691565b60408051938452911515602084015290820152606001610324565b61039f611bbf565b6009546104ae906001600160a01b031681565b61031a69014542ba12a337c0000081565b6003546001600160a01b03166104ae565b61031a6105d43660046136b0565b611bd3565b61031a60155481565b61031a670de0b6b3a764000081565b61031a600c5481565b6104ae6106083660046135c2565b6017602052600090815260409020546001600160a01b031681565b61031a60145481565b61031a600e5481565b61039f6106433660046136cb565b611c08565b61031a60105481565b61066461065f3660046135c2565b6124d7565b60405160ff9091168152602001610324565b6103356106843660046135f0565b61258a565b61031a6106973660046136f7565b61270e565b61031a60115481565b61031a600f5481565b6106c16106bc3660046135c2565b6128b9565b6040516103249190613742565b600a546104ae906001600160a01b031681565b61031a612950565b61039f612981565b61039f6106ff366004613751565b612a8e565b61039f6107123660046135f0565b612f56565b61031a68018493fba64ef0000081565b6007546104d990600160a01b900460ff1681565b61039f6107493660046135f0565b612ffd565b61039f61075c3660046135c2565b613038565b6060600060115467ffffffffffffffff811115610780576107806134b5565b6040519080825280602002602001820160405280156107b957816020015b6107a6613333565b81526020019060019003908161079e5790505b50905060015b601154811161088f576000818152601860209081526040918290208251610140810184528154815260018083015460ff80821615159584019590955261010090819004909416948201949094526002820154606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e082015260078201549281019290925260080154610120820152908390610861908461378c565b815181106108715761087161379f565b60200260200101819052508080610887906137b5565b9150506107bf565b50919050565b6000806108bd836040015160ff1684608001518560c001518660e0015187610100015161270e565b90508261012001516000036108de576108d7600a826137ce565b9392505050565b6000836101200151826108f1919061378c565b9050600081116109545760405162461bcd60e51b8152602060048201526024808201527f796f7520686176652077697468647261776e20616c6c206f66207468652072656044820152631dd85c9960e21b60648201526084015b60405180910390fd5b61095f600a836137ce565b949350505050565b600068018493fba64ef000006109878369014542ba12a337c000006137f0565b61099191906137ce565b92915050565b60606000600e5467ffffffffffffffff8111156109b6576109b66134b5565b6040519080825280602002602001820160405280156109ef57816020015b6109dc613333565b8152602001906001900390816109d45790505b509050600060015b6011548111610ae2576000818152601860205260408120600601549003610ad05760008181526018602090815260409182902082516101408101845281548152600182015460ff80821615159483019490945261010090819004909316938101939093526002810154606084015260038101546080840152600481015460a0840152600581015460c0840152600681015460e0840152600781015491830191909152600801546101208201528351849084908110610ab757610ab761379f565b6020908102919091010152610acd826001613807565b91505b80610ada816137b5565b9150506109f7565b509092915050565b600081815260186020526040812060019081015460ff16151514610b205760405162461bcd60e51b815260040161094b9061381a565b60008281526018602090815260409182902082516101408101845281548152600182015460ff80821615159483019490945261010090819004909316938101939093526002810154606084015260038101546080840152600481015460a0840152600581015460c0840152600681015460e084018190526007820154928401929092526008015461012083015215610bbb576108d781610895565b4260e08201526108d781610895565b610bd26131a9565b6003805460ff60a01b1916600160a01b1790556040517fa26419d4e7754a6ee392a5f28e81e97453baa4d10cf3b78a2e198bd3cb14da1a90610c179042815260200190565b60405180910390a1565b6001600160a01b038116600090815260166020908152604091829020600201805483518184028101840190945280845260609392830182828015610c8457602002820191906000526020600020905b815481526020019060010190808311610c70575b50505050509050919050565b60606000600e54601154610ca4919061378c565b905060008167ffffffffffffffff811115610cc157610cc16134b5565b604051908082528060200260200182016040528015610cfa57816020015b610ce7613333565b815260200190600190039081610cdf5790505b509050600060015b838111610dea5760008181526018602052604090206006015415610dd85760008181526018602090815260409182902082516101408101845281548152600182015460ff80821615159483019490945261010090819004909316938101939093526002810154606084015260038101546080840152600481015460a0840152600581015460c0840152600681015460e0840152600781015491830191909152600801546101208201528351849084908110610dbf57610dbf61379f565b6020908102919091010152610dd5826001613807565b91505b80610de2816137b5565b915050610d02565b50909392505050565b601354811480610e04575060145481145b80610e10575060155481145b610e515760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207374616b652074696d6560701b604482015260640161094b565b6000610e5c836124d7565b905060068160ff16108015610e74575060008160ff16115b610e905760405162461bcd60e51b815260040161094b90613847565b6000610e9b82611bd3565b9050808511158015610eb55750670de0b6b3a76400008510155b610ed15760405162461bcd60e51b815260040161094b9061386d565b6000610edc86610967565b6009546040516370a0823160e01b815233600482015291925087916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4d91906138af565b1015610f975760405162461bcd60e51b81526020600482015260196024820152780889c9a40c4c2d8c2dcc6ca40d2e640dcdee840cadcdeeaced603b1b604482015260640161094b565b6008546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610fdf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100391906138af565b10156110215760405162461bcd60e51b815260040161094b906138c8565b600a546040516331a9108f60e11b81526004810187905233916001600160a01b031690636352211e90602401602060405180830381865afa15801561106a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108e91906138ff565b6001600160a01b0316146110e05760405162461bcd60e51b8152602060048201526019602482015278165bdd48185c99481b9bdd081bdddb995c881bd9881b185b99603a1b604482015260640161094b565b6009546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd9061111590339030908c9060040161391c565b6020604051808303816000875af1158015611134573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111589190613940565b90506001811515146111ac5760405162461bcd60e51b815260206004820152601e60248201527f496e7465726e616c204572726f72204f6e20444e4d205472616e736665720000604482015260640161094b565b86600d546111ba9190613807565b600d556008546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd906111f29033903090889060040161391c565b6020604051808303816000875af1158015611211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112359190613940565b90506001811515146112595760405162461bcd60e51b815260040161094b9061395d565b82600c546112679190613807565b600c55600a546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061129e90339030908c9060040161391c565b600060405180830381600087803b1580156112b857600080fd5b505af11580156112cc573d6000803e3d6000fd5b50505050600e5460016112df9190613807565b600e556001600160a01b0389166000908152601660209081526040808320815160808101835281548152600182015460ff1615158185015260028201805484518187028101870186528181529295939486019383018282801561136157602002820191906000526020600020905b81548152602001906001019080831161134d575b50505050508152602001600382015481525050905080602001511515600015150361145b5760128054906000611396836137b5565b90915550506040805160808101825260125481526001602082015290810160006040519080825280602002602001820160405280156113df578160200160208202803683370190505b50815260006020918201819052601280548252601790925260409081902080546001600160a01b038f166001600160a01b031990911681179091559154905192935090917fd75b88a9203b17f9356ca063241beac16a25d5a46f485b378c2c229e864bdd4d916114529190815260200190565b60405180910390a25b6040805161014081018252825181526001602082015260ff88169181019190915260608101859052608081018a905260a081018990524260c0820152600060e082018190526101008201899052610120820181905260118054916114be836137b5565b9190505550806018600060115481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff021916908360ff160217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e082015181600601556101008201518160070155610120820151816008015590505081601660008d6001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160020190805190602001906115db92919061338b565b50606091909101516003909101556001600160a01b038b166000908152601660209081526040822060115460029091018054600180820183559185529290932090910155600754600160a01b900460ff16151590036116cb576040805160c0810182526001600160a01b03808e16825260ff8a1660208301528183018d905260608201889052608082018c905260115460a0830152600754925163af7107a560e01b81529192169063af7107a590611697908490600401613994565b600060405180830381600087803b1580156116b157600080fd5b505af11580156116c5573d6000803e3d6000fd5b50505050505b81516011546040805192835260ff8a16602084015282018c905260608201879052608082018b905260a08201527fe63a5261debedf32bcae3ebaf6d8f288e9c71cfbcb99ec6e1832eef7255e8e2b9060c00160405180910390a15050505050505050505050565b336000908152601660209081526040808320848452601883528184208251610140810184528154815260018083015460ff808216151597840197909752610100908190048716958301959095526002830154606083015260038301546080830152600483015460a0830152600583015460c0830152600683015460e0830152600783015494820194909452600890910154610120820152828201549193909291161515146118185760405162461bcd60e51b81526020600482015260136024820152721d5cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b604482015260640161094b565b6020810151151560011461183e5760405162461bcd60e51b815260040161094b9061381a565b815481511461185f5760405162461bcd60e51b815260040161094b906139dc565b61010081015160c0820151611874904261378c565b10156118c25760405162461bcd60e51b815260206004820152601f60248201527f596f752073686f756c642077616974206174206c656173742061207965617200604482015260640161094b565b60006118cd85610aea565b90508082610120018181516118e29190613807565b9052506003830180548291906000906118fc908490613807565b90915550670de0b6b3a7640000905061191c82662386f26fc100006137f0565b61192691906137ce565b611930908261378c565b90508015611a4f5760008581526018602090815260409182902084518155908401516001820180549386015161ffff1990941691151561ff0019169190911761010060ff9094168402179055606084015160028201556080840151600382015560a0840151600482015560c0840151600582015560e08401516006820155908301516007820155610120830151600890910155601054811115611a055760405162461bcd60e51b815260206004820152600d60248201526c506f6f6c20697320656d70747960981b604482015260640161094b565b611a0f33826131d6565b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2506001949350505050565b506000949350505050565b611a626131a9565b600354600160a01b900460ff1615611ab15760405162461bcd60e51b815260206004820152601260248201527118dbdb9d1c9858dd08199a5b985b1a5e995960721b604482015260640161094b565b6007805460ff60a01b19169055604051600081527fe8b0ba57f60acd4a38b199339c683a7c50d6648482b6969e80accaa6dc6cadc990602001610c17565b6007546001600160a01b03163314611b3e5760405162461bcd60e51b81526020600482015260126024820152711bdb9b1e481cda59194818dbdb9d1c9858dd60721b604482015260640161094b565b611b4881836131d6565b5050565b6009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024015b602060405180830381865afa158015611b96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bba91906138af565b905090565b611bc76131a9565b611bd160006132ab565b565b6000611bdd612981565b600054611beb906001613807565b60ff831660009081526002602052604090205461099191906137f0565b601354811480611c19575060145481145b80611c25575060155481145b611c665760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207374616b652074696d6560701b604482015260640161094b565b6000611c71836124d7565b905060068160ff16108015611c89575060008160ff16115b611ca55760405162461bcd60e51b815260040161094b90613847565b6000611cb082611bd3565b9050808511158015611cca5750670de0b6b3a76400008510155b611ce65760405162461bcd60e51b815260040161094b9061386d565b6000611cf186610967565b6009546040516370a0823160e01b815233600482015291925087916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611d3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6291906138af565b1015611dac5760405162461bcd60e51b81526020600482015260196024820152780889c9a40c4c2d8c2dcc6ca40d2e640dcdee840cadcdeeaced603b1b604482015260640161094b565b6008546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1891906138af565b1015611e365760405162461bcd60e51b815260040161094b906138c8565b600a546040516331a9108f60e11b81526004810187905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea391906138ff565b6001600160a01b031614611ef55760405162461bcd60e51b8152602060048201526019602482015278165bdd48185c99481b9bdd081bdddb995c881bd9881b185b99603a1b604482015260640161094b565b6009546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd90611f2a90339030908c9060040161391c565b6020604051808303816000875af1158015611f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6d9190613940565b9050600181151514611fc15760405162461bcd60e51b815260206004820152601e60248201527f496e7465726e616c204572726f72204f6e20444e4d205472616e736665720000604482015260640161094b565b86600d54611fcf9190613807565b600d556008546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd906120079033903090889060040161391c565b6020604051808303816000875af1158015612026573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061204a9190613940565b905060018115151461206e5760405162461bcd60e51b815260040161094b9061395d565b82600c5461207c9190613807565b600c55600a546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906120b390339030908c9060040161391c565b600060405180830381600087803b1580156120cd57600080fd5b505af11580156120e1573d6000803e3d6000fd5b50505050600e5460016120f49190613807565b600e55336000908152601660209081526040808320815160808101835281548152600182015460ff1615158185015260028201805484518187028101870186528181529295939486019383018282801561216d57602002820191906000526020600020905b815481526020019060010190808311612159575b50505050508152602001600382015481525050905080602001511515600015150361225157601280549060006121a2836137b5565b90915550506040805160808101825260125481526001602082015290810160006040519080825280602002602001820160405280156121eb578160200160208202803683370190505b508152600060209182018190526012805482526017835260409182902080546001600160a01b03191633908117909155905491519182529293507fd75b88a9203b17f9356ca063241beac16a25d5a46f485b378c2c229e864bdd4d910160405180910390a25b6040805161014081018252825181526001602082015260ff88169181019190915260608101859052608081018a905260a081018990524260c0820152600060e082018190526101008201899052610120820181905260118054916122b4836137b5565b909155505060115460009081526018602090815260408083208451815584830151600180830180548886015161ffff1990911693151561ff0019169390931761010060ff909416840217905560608701516002808501919091556080880151600385015560a0880151600485015560c0880151600585015560e0880151600685015591870151600784015561012087015160089093019290925533855260168452938290208651815586840151918101805460ff1916921515929092179091559085015180518694929361238c93850192019061338b565b5060609190910151600390910155336000908152601660209081526040822060115460029091018054600180820183559185529290932090910155600754600160a01b900460ff1615159003612471576040805160c08101825233815260ff891660208201528082018c905260608101879052608081018b905260115460a0820152600754915163af7107a560e01b815290916001600160a01b03169063af7107a59061243d908490600401613994565b600060405180830381600087803b15801561245757600080fd5b505af115801561246b573d6000803e3d6000fd5b50505050505b81516011546040805192835260ff8a16602084015282018c905260608201879052608082018b905260a08201527fe63a5261debedf32bcae3ebaf6d8f288e9c71cfbcb99ec6e1832eef7255e8e2b9060c00160405180910390a150505050505050505050565b6000600182101580156124ec5750611f408211155b156124f957506001919050565b611f41821015801561250d5750613a988211155b1561251a57506002919050565b613a99821015801561252e5750614e208211155b1561253b57506003919050565b614e21821015801561254f57506159d88211155b1561255c57506004919050565b6159d9821015801561257057506161a88211155b1561257d57506005919050565b506000919050565b919050565b6001600160a01b0381166000908152601660205260408120600201546060918167ffffffffffffffff8111156125c2576125c26134b5565b6040519080825280602002602001820160405280156125fb57816020015b6125e8613333565b8152602001906001900390816125e05790505b50905060005b82811015612706576001600160a01b0385166000908152601660205260408120600201805460189291908490811061263b5761263b61379f565b60009182526020808320909101548352828101939093526040918201902081516101408101835281548152600182015460ff80821615159583019590955261010090819004909416928101929092526002810154606083015260038101546080830152600481015460a0830152600581015460c0830152600681015460e083015260078101549282019290925260089091015461012082015282518390839081106126e8576126e861379f565b602002602001018190525080806126fe906137b5565b915050612601565b509392505050565b600060068661ffff16108015612728575060008661ffff16115b6127445760405162461bcd60e51b815260040161094b90613847565b600085116127895760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908191b9b48185b5bdd5b9d60721b604482015260640161094b565b828411156127d15760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081cdd185c9d08185b9908195b99605a1b604482015260640161094b565b6000620151806127e1868661378c565b6127eb91906137ce565b9050600060015b8281116128ad5760008060135487036128285761ffff8b166000908152600460205260409020612822908b6132fd565b90925090505b60145487036128545761ffff8b16600090815260056020526040902061284e908b6132fd565b90925090505b60155487036128805761ffff8b16600090815260066020526040902061287a908b6132fd565b90925090505b61288a8285613807565b93506128968185613807565b9350505080806128a5906137b5565b9150506127f2565b50979650505050505050565b6128c1613333565b5060009081526018602090815260409182902082516101408101845281548152600182015460ff80821615159483019490945261010090819004909316938101939093526002810154606084015260038101546080840152600481015460a0840152600581015460c0840152600681015460e08401526007810154918301919091526008015461012082015290565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401611b79565b600154604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156129cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ef91906138af565b90506a07324bf1ed9079c58000008110612a0b57600660005550565b6a05ff3f499b4dbacf4000008110612a2557600560005550565b6a04cc32a1490afbd90000008110612a3f57600460005550565b6a039925f8f6c83ce2c000008110612a5957600360005550565b6a02661950a4857dec8000008110612a7357600260005550565b6a01330ca85242bef64000008110612a8b5760016000555b50565b33600090815260166020908152604080832085845260188352928190208151610140810183528154815260018083015460ff808216151596840196909652610100908190048616948301949094526002830154606083015260038301546080830152600483015460a0830152600583015460c0830152600683015460e083015260078301549382019390935260089091015461012082015281840154909216151514612b725760405162461bcd60e51b81526020600482015260136024820152721d5cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b604482015260640161094b565b60208101511515600114612b985760405162461bcd60e51b815260040161094b9061381a565b60e081015115612be05760405162461bcd60e51b81526020600482015260136024820152727374616b65206973206e6f742061637469766560681b604482015260640161094b565b8154815114612c015760405162461bcd60e51b815260040161094b906139dc565b61010081015160c0820151612c16904261378c565b1015612c645760405162461bcd60e51b815260206004820152601f60248201527f596f752073686f756c642077616974206174206c656173742061207965617200604482015260640161094b565b4260e0820190815260008581526018602090815260409182902084518155908401516001820180548487015161ffff1990911692151561ff0019169290921761010060ff90931683021790556060850151600283018190556080860151600384015560a086015160048085019190915560c08701516005850155945160068401559085015160078301556101208501516008928301559054915163a9059cbb60e01b8152339381019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015612d47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d6b9190613940565b508060600151600c54612d7e919061378c565b600c55600954608082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015612dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dfc9190613940565b508060800151600d54612e0f919061378c565b600d55600a5460a08201516040516323b872dd60e01b81526001600160a01b03909216916323b872dd91612e49913091339160040161391c565b600060405180830381600087803b158015612e6357600080fd5b505af1158015612e77573d6000803e3d6000fd5b505050506001600e54612e8a919061378c565b600e55821515600103612ea257612ea084611732565b505b600754600160a01b900460ff161515600103612f1d57600754604051635410f36560e01b8152336004820152602481018690526001600160a01b0390911690635410f36590604401600060405180830381600087803b158015612f0457600080fd5b505af1158015612f18573d6000803e3d6000fd5b505050505b6040518481527fbf82b326dece9f8ab13bc4f7bb7d61eef7ba78986c3f5b35cba39bea331844459060200160405180910390a150505050565b612f5e6131a9565b600354600160a01b900460ff1615612fad5760405162461bcd60e51b815260206004820152601260248201527118dbdb9d1c9858dd08199a5b985b1a5e995960721b604482015260640161094b565b600780546001600160a81b0319166001600160a01b038316908117600160a01b179091556040517fb28ace751049cf14472ef879a8bf24b8fa60a3cf05b2ca4774c56845324bf04490600090a250565b6130056131a9565b6001600160a01b03811661302f57604051631e4fbdf760e01b81526000600482015260240161094b565b612a8b816132ab565b6008546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015613080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130a491906138af565b10156130c25760405162461bcd60e51b815260040161094b906138c8565b6008546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd906130f79033903090879060040161391c565b6020604051808303816000875af1158015613116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061313a9190613940565b905060018115151461315e5760405162461bcd60e51b815260040161094b9061395d565b8160105461316c9190613807565b60105560405182815233907f685455f4b0eabaeb2c46de87f47dfc665a4f0f8bb345f444535c1bbfdf98498b906020015b60405180910390a25050565b6003546001600160a01b03163314611bd15760405163118cdaa760e01b815233600482015260240161094b565b60085460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015613229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061324d9190613940565b508060105461325c919061378c565b601055600f5461326d908290613807565b600f556040518181526001600160a01b038316907f65ba0d013dd6bc1414e500ad30e4d210e42f0159a37abcbc8f78e8e10a6a87659060200161319d565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808360010154670de0b6b3a764000084866000015461331e91906137f0565b61332891906137ce565b915091509250929050565b60405180610140016040528060008152602001600015158152602001600060ff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8280548282559060005260206000209081019282156133c6579160200282015b828111156133c65782518255916020019190600101906133ab565b506133d29291506133d6565b5090565b5b808211156133d257600081556001016133d7565b805182526020810151613402602084018215159052565b506040810151613417604084018260ff169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b6020808252825182820181905260009190848201906040850190845b818110156134a9576134958385516133eb565b928401926101409290920191600101613482565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156134fd57634e487b7160e01b600052604160045260246000fd5b60405290565b8015158114612a8b57600080fd5b803561258581613503565b803560ff8116811461258557600080fd5b6000610140828403121561354057600080fd5b6135486134cb565b8235815261355860208401613511565b60208201526135696040840161351c565b6040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013581830152506101208084013581830152508091505092915050565b6000602082840312156135d457600080fd5b5035919050565b6001600160a01b0381168114612a8b57600080fd5b60006020828403121561360257600080fd5b81356108d7816135db565b6020808252825182820181905260009190848201906040850190845b818110156134a957835183529284019291840191600101613629565b6000806000806080858703121561365b57600080fd5b8435613666816135db565b966020860135965060408601359560600135945092505050565b6000806040838503121561369357600080fd5b8235915060208301356136a5816135db565b809150509250929050565b6000602082840312156136c257600080fd5b6108d78261351c565b6000806000606084860312156136e057600080fd5b505081359360208301359350604090920135919050565b600080600080600060a0868803121561370f57600080fd5b853561ffff8116811461372157600080fd5b97602087013597506040870135966060810135965060800135945092505050565b610140810161099182846133eb565b6000806040838503121561376457600080fd5b8235915060208301356136a581613503565b634e487b7160e01b600052601160045260246000fd5b8181038181111561099157610991613776565b634e487b7160e01b600052603260045260246000fd5b6000600182016137c7576137c7613776565b5060010190565b6000826137eb57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761099157610991613776565b8082018082111561099157610991613776565b6020808252601390820152727374616b65206973206e6f742065786973747360681b604082015260600190565b6020808252600c908201526b24b73b30b634b210383630b760a11b604082015260600190565b60208082526022908201527f444e4d20616d6f756e74206973206e6f7420696e20636f72726563742072616e604082015261676560f01b606082015260800190565b6000602082840312156138c157600080fd5b5051919050565b60208082526019908201527f55564d2062616c616e6365206973206e6f7420656e6f75676800000000000000604082015260600190565b60006020828403121561391157600080fd5b81516108d7816135db565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561395257600080fd5b81516108d781613503565b6020808252601e908201527f496e7465726e616c204572726f72204f6e2055766d205472616e736665720000604082015260600190565b81516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201519181019190915260c00190565b60208082526021908201527f796f752063616e206f6e6c7920776974686472617720796f75722072657761726040820152601960fa1b60608201526080019056fea26469706673582212206719115f1ffcf2b844bad4594a0e5fd38cca7e7b8bd6916e571ae8f855a4444064736f6c63430008140033";

type StakeMetaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeMetaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeMeta__factory extends ContractFactory {
  constructor(...args: StakeMetaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uvm_token: string,
    dnm_token: string,
    land_token: string,
    overrides?: Overrides & { from?: string }
  ): Promise<StakeMeta> {
    return super.deploy(
      uvm_token,
      dnm_token,
      land_token,
      overrides || {}
    ) as Promise<StakeMeta>;
  }
  override getDeployTransaction(
    uvm_token: string,
    dnm_token: string,
    land_token: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      uvm_token,
      dnm_token,
      land_token,
      overrides || {}
    );
  }
  override attach(address: string): StakeMeta {
    return super.attach(address) as StakeMeta;
  }
  override connect(signer: Signer): StakeMeta__factory {
    return super.connect(signer) as StakeMeta__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeMetaInterface {
    return new utils.Interface(_abi) as StakeMetaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakeMeta {
    return new Contract(address, _abi, signerOrProvider) as StakeMeta;
  }
}
