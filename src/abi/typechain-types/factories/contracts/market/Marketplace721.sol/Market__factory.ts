/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Market,
  MarketInterface,
} from "../../../../contracts/market/Marketplace721.sol/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_lazyMint_contract_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "gateway_contract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "ForbiddenMinter",
    type: "error",
  },
  {
    inputs: [],
    name: "GatewayFail",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOfferSeller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "actualSigner",
        type: "address",
      },
    ],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "SoldOut",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AddCollection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ChangeContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "SoldItem",
    type: "event",
  },
  {
    inputs: [],
    name: "GATEWAY",
    outputs: [
      {
        internalType: "contract Gateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LAZY_MINT_CONTRACT",
    outputs: [
      {
        internalType: "contract LazyMint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNATURE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNING_DOMAIN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_token_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "parent",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "tokenUri",
                type: "string",
              },
            ],
            internalType: "struct ILazyMintStruct.MetaToken",
            name: "meta_token",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "token_signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "seller",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "sv",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "qty",
                type: "uint256",
              },
            ],
            internalType: "struct Market.Sell",
            name: "sell_struct",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "sell_signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "token_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Market.BuyToken",
            name: "buy_token",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Market.BuyLazyMintInputArgs[]",
        name: "args",
        type: "tuple[]",
      },
    ],
    name: "buyNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_lazyMint_contract_address",
        type: "address",
      },
    ],
    name: "changeLazyMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "soldCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "t_id",
        type: "uint256",
      },
    ],
    name: "updateToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405260016007553480156200001757600080fd5b5060405162001e8938038062001e898339810160408190526200003a9162000280565b604080518082018252600b81526a135155104b53505492d15560aa1b602080830191909152825180840190935260018352603160f81b9083015233916200008382600062000199565b610120526200009481600162000199565b61014052815160208084019190912060e052815190820120610100524660a0526200012260e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526001600160a01b0381166200015b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200016681620001d2565b50600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055620004a5565b6000602083511015620001b957620001b18362000224565b9050620001cc565b81620001c6848262000364565b5060ff90505b92915050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080829050601f8151111562000252578260405163305a27a960e01b815260040162000152919062000430565b80516200025f8262000480565b179392505050565b6001600160a01b03811681146200027d57600080fd5b50565b600080604083850312156200029457600080fd5b8251620002a18162000267565b6020840151909250620002b48162000267565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002ea57607f821691505b6020821081036200030b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035f57600081815260208120601f850160051c810160208610156200033a5750805b601f850160051c820191505b818110156200035b5782815560010162000346565b5050505b505050565b81516001600160401b03811115620003805762000380620002bf565b6200039881620003918454620002d5565b8462000311565b602080601f831160018114620003d05760008415620003b75750858301515b600019600386901b1c1916600185901b1785556200035b565b600085815260208120601f198616915b828110156200040157888601518255948401946001909101908401620003e0565b5085821015620004205787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b818110156200045f5785810183015185820160400152820162000441565b506000604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156200030b5760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051611989620005006000396000610e5e01526000610e2c0152600061127001526000611248015260006111a3015260006111cd015260006111f701526119896000f3fe6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063d48bfca711610059578063d48bfca71461030f578063e3faad941461032f578063f2fde38b14610366578063f7e882011461038657600080fd5b80638da5cb5b1461025e578063a41572961461027c578063ab2f969a146102b6578063ad32e7c7146102fc57600080fd5b8063544e08c8116100c6578063544e08c8146101df5780636279f385146101ff578063715018a61461022157806384b0196e1461023657600080fd5b8063150b7a02146100f85780632bce9e7b14610141578063338c5371146101715780634f64b2be146101a9575b600080fd5b34801561010457600080fd5b50610123610113366004611448565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561014d57600080fd5b5061016161015c3660046114b4565b61039c565b6040519015158152602001610138565b34801561017d57600080fd5b50600454610191906001600160a01b031681565b6040516001600160a01b039091168152602001610138565b3480156101b557600080fd5b506101916101c43660046114e0565b6006602052600090815260409020546001600160a01b031681565b3480156101eb57600080fd5b50600354610191906001600160a01b031681565b34801561020b57600080fd5b5061021f61021a3660046114f9565b6103d7565b005b34801561022d57600080fd5b5061021f610401565b34801561024257600080fd5b5061024b610415565b6040516101389796959493929190611563565b34801561026a57600080fd5b506002546001600160a01b0316610191565b34801561028857600080fd5b506102a9604051806040016040528060018152602001603160f81b81525081565b60405161013891906115f9565b3480156102c257600080fd5b506102ee6102d136600461160c565b805160208183018101805160058252928201919093012091525481565b604051908152602001610138565b61021f61030a366004611641565b61045b565b34801561031b57600080fd5b5061016161032a3660046114f9565b610d19565b34801561033b57600080fd5b506102a96040518060400160405280600b81526020016a135155104b53505492d15560aa1b81525081565b34801561037257600080fd5b5061021f6103813660046114f9565b610d68565b34801561039257600080fd5b506102ee60075481565b60006103a6610da6565b50600081815260066020526040902080546001600160a01b0319166001600160a01b03841617905560015b92915050565b6103df610da6565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610409610da6565b6104136000610dd3565b565b600060608060008060006060610429610e25565b610431610e57565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60005b81811015610d135760006104fe84848481811061047d5761047d6116c9565b905060200281019061048f91906116df565b6040018585858181106104a4576104a46116c9565b90506020028101906104b691906116df565b6104c49060c0810190611700565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e8492505050565b6003549091506000906001600160a01b0316631b6b158c868686818110610527576105276116c9565b905060200281019061053991906116df565b610543908061174e565b878787818110610555576105556116c9565b905060200281019061056791906116df565b610575906020810190611700565b6040518463ffffffff1660e01b8152600401610593939291906117ea565b602060405180830381865afa1580156105b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d4919061181a565b9050336001600160a01b038216036105ff57604051634d3a582960e11b815260040160405180910390fd5b848484818110610611576106116116c9565b905060200281019061062391906116df565b6106349060608101906040016114f9565b6001600160a01b0316816001600160a01b0316146106b3578085858581811061065f5761065f6116c9565b905060200281019061067191906116df565b6106829060608101906040016114f9565b604051637ba5ffb560e01b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b6003546000906001600160a01b031663c1a662ad8787878181106106d9576106d96116c9565b90506020028101906106eb91906116df565b6106f5908061174e565b888888818110610707576107076116c9565b905060200281019061071991906116df565b61072a9060608101906040016114f9565b89898981811061073c5761073c6116c9565b905060200281019061074e91906116df565b61075c906020810190611700565b6040518563ffffffff1660e01b815260040161077b9493929190611837565b6020604051808303816000875af115801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be9190611877565b6003549091506001600160a01b03166342842e0e8787878181106107e4576107e46116c9565b90506020028101906107f691906116df565b6108079060608101906040016114f9565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015233602482015260448101849052606401600060405180830381600087803b15801561085557600080fd5b505af1158015610869573d6000803e3d6000fd5b50505050600060066000888888818110610885576108856116c9565b905060200281019061089791906116df565b60e0013581526020810191909152604001600020546001600160a01b03169050806108d55760405163c1ab6dc160e01b815260040160405180910390fd5b6040516370a0823160e01b81523360048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190611877565b9050878787818110610954576109546116c9565b905060200281019061096691906116df565b610100013581101561098b5760405163356680b760e01b815260040160405180910390fd5b87878781811061099d5761099d6116c9565b90506020028101906109af91906116df565b60a0013560058989898181106109c7576109c76116c9565b90506020028101906109d991906116df565b6109e7906020810190611700565b6040516109f5929190611890565b90815260200160405180910390205410610a22576040516352df9fe560e01b815260040160405180910390fd5b60016005898989818110610a3857610a386116c9565b9050602002810190610a4a91906116df565b610a58906020810190611700565b604051610a66929190611890565b90815260200160405180910390206000828254610a8391906118b6565b90915550506004546040805160a081019091526000916001600160a01b031690639b421b5690808c8c8c818110610abc57610abc6116c9565b9050602002810190610ace91906116df565b6080013581526020018c8c8c818110610ae957610ae96116c9565b9050602002810190610afb91906116df565b6060013581526020018c8c8c818110610b1657610b166116c9565b9050602002810190610b2891906116df565b60e0013581526020018c8c8c818110610b4357610b436116c9565b9050602002810190610b5591906116df565b610b669060608101906040016114f9565b6001600160a01b03168152604051600160f01b6020828101919091526001600160c01b031960c08b901b16602283015290910190602a01604051602081830303815290604052610bb5906118c9565b9052604080516001600160e01b031960e085901b168152825160048201526020830151602482015290820151604482015260608201516001600160a01b03908116606483015260809092015160848201523360a4820181905260c4820152908d1660e4820152610104016020604051808303816000875af1158015610c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c629190611877565b905060008111610c85576040516314b47e2760e31b815260040160405180910390fd5b83898989818110610c9857610c986116c9565b9050602002810190610caa91906116df565b610cbb9060608101906040016114f9565b6001600160a01b0316336001600160a01b03167f257b5d5244b9b5107afddf768b3e6a726d77bc26d46eb38a10e2a8813fa044aa60405160405180910390a45050505050508080610d0b906118f0565b91505061045e565b50505050565b6000610d23610da6565b60078054600090815260066020526040812080546001600160a01b0319166001600160a01b03861617905581549190610d5b836118f0565b9091555060019392505050565b610d70610da6565b6001600160a01b038116610d9a57604051631e4fbdf760e01b8152600060048201526024016106aa565b610da381610dd3565b50565b6002546001600160a01b031633146104135760405163118cdaa760e01b81523360048201526024016106aa565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060610e527f00000000000000000000000000000000000000000000000000000000000000006000610ea4565b905090565b6060610e527f00000000000000000000000000000000000000000000000000000000000000006001610ea4565b600080610e9084610f4f565b9050610e9c8184610fce565b949350505050565b606060ff8314610ebe57610eb783610ff8565b90506103d1565b818054610eca90611909565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef690611909565b8015610f435780601f10610f1857610100808354040283529160200191610f43565b820191906000526020600020905b815481529060010190602001808311610f2657829003601f168201915b505050505090506103d1565b60006103d17f26507d74c83aac5cd35278fce9d1c3c22a1808b58181ab16a5072a9eea87cb78610f8260208501856114f9565b604080516020818101949094526001600160a01b039092168282015291850135606082015290840135608082015260a00160405160208183030381529060405280519060200120611037565b600080600080610fde8686611064565b925092509250610fee82826110b1565b5090949350505050565b606060006110058361116e565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60006103d1611044611196565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000835160410361109e5760208401516040850151606086015160001a611090888285856112c1565b9550955095505050506110aa565b50508151600091506002905b9250925092565b60008260038111156110c5576110c561193d565b036110ce575050565b60018260038111156110e2576110e261193d565b036111005760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156111145761111461193d565b036111355760405163fce698f760e01b8152600481018290526024016106aa565b60038260038111156111495761114961193d565b0361116a576040516335e2f38360e21b8152600481018290526024016106aa565b5050565b600060ff8216601f8111156103d157604051632cd44ac360e21b815260040160405180910390fd5b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156111ef57507f000000000000000000000000000000000000000000000000000000000000000046145b1561121957507f000000000000000000000000000000000000000000000000000000000000000090565b610e52604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156112fc5750600091506003905082611386565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611350573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661137c57506000925060019150829050611386565b9250600091508190505b9450945094915050565b6001600160a01b0381168114610da357600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126113cc57600080fd5b813567ffffffffffffffff808211156113e7576113e76113a5565b604051601f8301601f19908116603f0116810190828211818310171561140f5761140f6113a5565b8160405283815286602085880101111561142857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561145e57600080fd5b843561146981611390565b9350602085013561147981611390565b925060408501359150606085013567ffffffffffffffff81111561149c57600080fd5b6114a8878288016113bb565b91505092959194509250565b600080604083850312156114c757600080fd5b82356114d281611390565b946020939093013593505050565b6000602082840312156114f257600080fd5b5035919050565b60006020828403121561150b57600080fd5b813561151681611390565b9392505050565b6000815180845260005b8181101561154357602081850181015186830182015201611527565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e08184015261158360e084018a61151d565b8381036040850152611595818a61151d565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156115e7578351835292840192918401916001016115cb565b50909c9b505050505050505050505050565b602081526000611516602083018461151d565b60006020828403121561161e57600080fd5b813567ffffffffffffffff81111561163557600080fd5b610e9c848285016113bb565b60008060006040848603121561165657600080fd5b833561166181611390565b9250602084013567ffffffffffffffff8082111561167e57600080fd5b818601915086601f83011261169257600080fd5b8135818111156116a157600080fd5b8760208260051b85010111156116b657600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b6000823561013e198336030181126116f657600080fd5b9190910192915050565b6000808335601e1984360301811261171757600080fd5b83018035915067ffffffffffffffff82111561173257600080fd5b60200191503681900382131561174757600080fd5b9250929050565b60008235601e198336030181126116f657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008135601e198336030181126117a357600080fd5b820160208101903567ffffffffffffffff8111156117c057600080fd5b8036038213156117cf57600080fd5b602085526117e1602086018284611764565b95945050505050565b6040815260006117fd604083018661178d565b8281036020840152611810818587611764565b9695505050505050565b60006020828403121561182c57600080fd5b815161151681611390565b60608152600061184a606083018761178d565b6001600160a01b0386166020840152828103604084015261186c818587611764565b979650505050505050565b60006020828403121561188957600080fd5b5051919050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103d1576103d16118a0565b805160208083015191908110156118ea576000198160200360031b1b821691505b50919050565b600060018201611902576119026118a0565b5060010190565b600181811c9082168061191d57607f821691505b6020821081036118ea57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220e2b53e0034c94d623b9ec7d144513bf49ffb11492e35b205f4e147b5a522c4e864736f6c63430008140033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _lazyMint_contract_address: string,
    gateway_contract: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Market> {
    return super.deploy(
      _lazyMint_contract_address,
      gateway_contract,
      overrides || {}
    ) as Promise<Market>;
  }
  override getDeployTransaction(
    _lazyMint_contract_address: string,
    gateway_contract: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lazyMint_contract_address,
      gateway_contract,
      overrides || {}
    );
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
