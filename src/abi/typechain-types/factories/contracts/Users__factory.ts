/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Users, UsersInterface } from "../../contracts/Users";

const _abi = [
  {
    inputs: [],
    name: "DevTimeOver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
    ],
    name: "InvalidFromID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "InvalidRangeID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "InvalidToID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "parent_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
    ],
    name: "ParentNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "UserNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user_address",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
    ],
    name: "CreatedUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "LevelUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "BVPlan",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ListLevelUpDate",
    outputs: [
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UserAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UserLevelUpDateIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "UserList",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "left",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "right",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "all_left",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "all_right",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dir",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "summ",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm_withdraw",
            type: "uint256",
          },
        ],
        internalType: "struct UsersStruct.BusinessValue",
        name: "bv",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "order_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bv_level",
            type: "uint256",
          },
        ],
        internalType: "struct UsersStruct.LastOrder",
        name: "last_order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "depth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_withdraw",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levelup_count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastweek",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "step",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_voucher",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UsersPaths",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "UsersPathsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "left",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "right",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bv_level",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user_address",
            type: "address",
          },
          {
            internalType: "address",
            name: "parent_address",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "level_up_date",
            type: "uint256",
          },
        ],
        internalType: "struct UsersStruct.ImportUser[]",
        name: "users",
        type: "tuple[]",
      },
    ],
    name: "addUserBulk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "calculator",
    outputs: [
      {
        internalType: "contract Calculator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "floor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "b",
        type: "bytes1",
      },
      {
        internalType: "uint8",
        name: "position",
        type: "uint8",
      },
    ],
    name: "getBit",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_user_id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ignore_validation",
        type: "bool",
      },
    ],
    name: "getUser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "all_left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "all_right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dnm_withdraw",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "all_left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "all_right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dnm_withdraw",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "user",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toId",
        type: "uint256",
      },
    ],
    name: "getUserList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "left",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "right",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "all_left",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "all_right",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "dir",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "level",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "summ",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "dnm_withdraw",
                    type: "uint256",
                  },
                ],
                internalType: "struct UsersStruct.BusinessValue",
                name: "bv",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "date",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "order_id",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bv_level",
                    type: "uint256",
                  },
                ],
                internalType: "struct UsersStruct.LastOrder",
                name: "last_order",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "depth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending_withdraw",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "levelup_count",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastweek",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "step",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending_voucher",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "exists",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "data",
                type: "bytes32",
              },
            ],
            internalType: "struct UsersStruct.User",
            name: "user",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "user_address",
            type: "address",
          },
        ],
        internalType: "struct UsersStruct.UserInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "all_left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "all_right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dnm_withdraw",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "parent",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "all_left",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "all_right",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dir",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "level",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "summ",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dnm_withdraw",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.BusinessValue",
            name: "bv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "date",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "order_id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bv_level",
                type: "uint256",
              },
            ],
            internalType: "struct UsersStruct.LastOrder",
            name: "last_order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_withdraw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelup_count",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastweek",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "step",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending_voucher",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct UsersStruct.User",
        name: "child",
        type: "tuple",
      },
    ],
    name: "isChildOfParent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDev",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "level_up_data_index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "switchToProduction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "user_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff60a01b1916600160a01b17905534801561002357600080fd5b50338061004a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005381610059565b506100a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6121fb806100b86000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063bb5d88fa116100b8578063e5d0a5041161007c578063e5d0a50414610306578063e6d3c18f14610319578063eb63a59e14610355578063f079914f14610449578063f2fde38b1461046d578063f89183121461048057600080fd5b8063bb5d88fa146102af578063be379d5b146102b8578063c2afb683146102cb578063c2f29eb0146102eb578063ce3e39c0146102f357600080fd5b8063511095b51161010a578063511095b514610238578063514fbe501461024b5780636f77926b1461026b578063715018a61461028b5780637548f424146102955780638da5cb5b1461029e57600080fd5b8063120a521a146101475780633070667f1461018d5780633ce0adeb146101b257806344da319c146101eb578063508756871461020c575b600080fd5b610170610155366004611aa5565b6006602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101a061019b366004611abe565b6104ab565b60405160ff9091168152602001610184565b6101dd6101c0366004611b0a565b600760209081526000928352604080842090915290825290205481565b604051908152602001610184565b6101fe6101f9366004611b41565b6104ea565b604051610184929190611c57565b61021f61021a366004611e81565b61067a565b60408051921515835260ff909116602083015201610184565b6101dd610246366004611b0a565b6109e5565b61025e610259366004611b0a565b610a16565b6040516101849190611eaf565b61027e610279366004611f28565b610cc1565b6040516101849190611f43565b610293610e03565b005b6101dd60025481565b6000546001600160a01b0316610170565b6101dd60015481565b6101dd6102c6366004611b0a565b610e17565b6101dd6102d9366004611aa5565b60096020526000908152604090205481565b610293610e2a565b600a54610170906001600160a01b031681565b610293610314366004611f52565b610e41565b610340610327366004611aa5565b6005602052600090815260409020805460019091015482565b60408051928352602083019190915201610184565b610432610363366004611f28565b6003602081815260009283526040928390208054845161010081018652600183015481526002830154818501529382015484860152600482015460608086019190915260058301546080860152600683015460a0860152600783015460c0860152600883015460e08601528551908101865260098301548152600a83015493810193909352600b82015494830194909452600c810154600d820154600e830154600f84015460108501546011860154601287015460139097015495969495939492939192909160ff909116908b565b6040516101849b9a9998979695949392919061206b565b60005461045d90600160a01b900460ff1681565b6040519015158152602001610184565b61029361047b366004611f28565b61106f565b6101dd61048e366004611b0a565b600860209081526000928352604080842090915290825290205481565b6000806104b98360076120fa565b600160ff919091161b905060f884901c8082166104d78560076120fa565b60ff91821691161c925050505b92915050565b60006104f461195e565b6000848152600660205260409020546001600160a01b031680158015610518575083155b15610536576040516319c29a3360e21b815260040160405180910390fd5b8060036000836001600160a01b03166001600160a01b0316815260200190815260200160002080604051806101600160405290816000820154815260200160018201604051806101000160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001600c8201548152602001600d8201548152602001600e8201548152602001600f820154815260200160108201548152602001601182015481526020016012820160009054906101000a900460ff16151515158152602001601382015481525050905092509250505b9250929050565b6000808260600151846060015110610698575060009050600a610673565b600061010085606001516106ac9190612129565b9050600061010086606001516106c2919061213d565b9050811561083e5780156107425784516000908152600860205260408120906106ec600185612151565b815260208082019290925260409081016000908120548951825260089093529081209061071a600186612151565b8152602001908152602001600020541461073d576000600b935093505050610673565b61083e565b60006001831161075c576647656e6573697360c81b610788565b8651600090815260086020526040812090610778600286612151565b8152602001908152602001600020545b87516000908152600760205260408120919250908290826107aa600188612151565b8152602001908152602001600020546040516020016107d3929190918252602082015260400190565b60408051601f1981840301815291815281516020808401919091208a516000908152600890925291812092935090918161080e600189612151565b8152602001908152602001600020549050808214610839576000606f97509750505050505050610673565b505050505b600061084b600883612129565b9050600a6000805b8381116109835760005b60088160ff161015610970578261087381612164565b935050858311156108bf57895160009081526007602090815260408083208a84528252909120546108b891849081106108ae576108ae61217d565b1a60f81b826104ab565b9350610970565b8a5160009081526007602090815260408083208a845282528220546108f891859081106108ee576108ee61217d565b1a60f81b836104ab565b8b5160009081526007602090815260408083208c845282528220549293509091610936918690811061092c5761092c61217d565b1a60f81b846104ab565b90508060ff168260ff161461095b576000600c9a509a50505050505050505050610673565b5050808061096890612193565b91505061085d565b508061097b81612164565b915050610853565b5060028260ff16106109d55760405162461bcd60e51b8152602060048201526016602482015275736f6d657468696e672077656e742077726f6e67202160501b60448201526064015b60405180910390fd5b5060019890975095505050505050565b60046020528160005260406000208181548110610a0157600080fd5b90600052602060002001600091509150505481565b606082826001821015610a3f57604051633a2bd95560e11b8152600481018390526024016109cc565b808210610a695760405163d427f71f60e01b815260048101829052602481018390526044016109cc565b600154841115610a8f57604051633322840360e11b8152600481018590526024016109cc565b6000610a9b8686612151565b67ffffffffffffffff811115610ab357610ab3611c75565b604051908082528060200260200182016040528015610aec57816020015b610ad9611a25565b815260200190600190039081610ad15790505b50905060005b610afc8787612151565b811015610cb7576000600681610b12848b6121b2565b815260200190815260200160002060009054906101000a90046001600160a01b03169050604051806040016040528060036000846001600160a01b03166001600160a01b03168152602001908152602001600020604051806101600160405290816000820154815260200160018201604051806101000160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001600c8201548152602001600d8201548152602001600e8201548152602001600f820154815260200160108201548152602001601182015481526020016012820160009054906101000a900460ff161515151581526020016013820154815250508152602001826001600160a01b0316815250838381518110610c9857610c9861217d565b6020026020010181905250508080610caf90612164565b915050610af2565b5095945050505050565b610cc961195e565b60036000836001600160a01b03166001600160a01b03168152602001908152602001600020604051806101600160405290816000820154815260200160018201604051806101000160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001600c8201548152602001600d8201548152602001600e8201548152602001600f820154815260200160108201548152602001601182015481526020016012820160009054906101000a900460ff161515151581526020016013820154815250509050919050565b610e0b6110ad565b610e1560006110da565b565b6000610e238284612129565b9392505050565b610e326110ad565b6000805460ff60a01b19169055565b600054600160a01b900460ff16610e6b57604051631867fcd960e11b815260040160405180910390fd5b610e736110ad565b60005b815181101561106b5760036000838381518110610e9557610e9561217d565b60209081029190910181015160a001516001600160a01b031682528101919091526040016000206012015460ff16611059576001828281518110610edb57610edb61217d565b60200260200101516080015110158015610f1357506008828281518110610f0457610f0461217d565b60200260200101516080015111155b610f5f5760405162461bcd60e51b815260206004820152601760248201527f62765f6c6576656c206973206e6f7420636f727265637400000000000000000060448201526064016109cc565b611059828281518110610f7457610f7461217d565b602002602001015160000151838381518110610f9257610f9261217d565b602002602001015160200151848481518110610fb057610fb061217d565b602002602001015160400151858581518110610fce57610fce61217d565b602002602001015160600151868681518110610fec57610fec61217d565b60200260200101516080015187878151811061100a5761100a61217d565b602002602001015160a001518888815181106110285761102861217d565b602002602001015160c001518989815181106110465761104661217d565b602002602001015160e00151600061112a565b8061106381612164565b915050610e76565b5050565b6110776110ad565b6001600160a01b0381166110a157604051631e4fbdf760e01b8152600060048201526024016109cc565b6110aa816110da565b50565b6000546001600160a01b03163314610e155760405163118cdaa760e01b81523360048201526024016109cc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038084166000908152600360208181526040808420815161016081018352815481528251610100808201855260018401548252600284015482870152838701548286015260048401546060808401919091526005850154608080850191909152600686015460a080860191909152600787015460c080870191909152600888015460e080880191909152878b019690965288518085018a5260098901548152600a890154818c0152600b890154818b0152878a0152600c88015493870193909352600d87015491860191909152600e86015490850152600f8501549084015260108401549183019190915260118301549082015260128083015460ff9081161515610120840152601390930154610140830152968b168652939092529092209092015416156112935760405162461bcd60e51b815260206004820152600e60248201526d757365727320657869737473202160901b60448201526064016109cc565b6001805411156112db578061012001516112d65760015460405163056569ab60e21b81526001600160a01b038616600482015260248101919091526044016109cc565b611332565b6001600160a01b038416156113325760405162461bcd60e51b815260206004820152601960248201527f726f6f7420706172656e74206973206e6f74206578697374730000000000000060448201526064016109cc565b6002816020015160800151106113965760405162461bcd60e51b815260206004820152602360248201527f706172656e742063616e206e6f742068617665206d6f7265207468616e2032206044820152623234b960e91b60648201526084016109cc565b60015460009081526004602052604090206060805190916113b991608090611a45565b50600060405180610160016040528060015481526020016040518061010001604052808f81526020018e81526020018d81526020018c8152602001600081526020018b81526020018781526020016000815250815260200160405180606001604052806000815260200160008152602001600081525081526020016001805411611444576000611454565b60608501516114549060016121b2565b815260006020808301829052604080840183905260608401839052608080850184905260a08501849052600160c0860181905260e09095018490528454845260068352922080546001600160a01b0319166001600160a01b038d1617905586015101519192506114c491906121b2565b6001600160a01b038781166000908152600360208181526040808420600590810196909655938c1680845284842087518155878301518051600180840191909155818501516002840155818801519583019590955560608082015160048401556080808301519984019990995560a080830151600685015560c080840151600786015560e09384015160088601558b8a01518051600987015596870151600a86015595890151600b850155908a0151600c84015597890151600d83015596880151600e82015591870151600f830155948601516010820155610100860151601182015561012086015160128201805460ff19169115159190911790556101408601516013909101555491519192917fd9e1d255053318ccf2a036b32fd2a70cced70ba0d33da18b23b2ccb7d4c002799190a36001805490600061160683612164565b9091555050805161161890868a611630565b611622818461170f565b505050505050505050505050565b600083815260066020908152604080832080546001600160a01b039081168552600380855283862060100186905583518085018552888152808601888152600280548952600588528689208351815591516001928301558b89526004885286892090548154928301825590895287892090910155925490911685529092528220600e01805491926116c083612164565b91905055508183857f66833f6d7d7a01eaed9fb21eb9cc54f0fb9497fa9251a6c0773372c8d3e0aa0c60405160405180910390a46002805490600061170483612164565b919050555050505050565b600061010082606001516117239190612129565b905060006101008360600151611739919061213d565b905060005b828110156117b257835160009081526007602081815260408084208585528252808420548951855292825280842085855282528084209290925586518352600880825282842085855282528284205489518552908252828420858552909152912055806117aa81612164565b91505061173e565b50801561180b578251600090815260076020908152604080832085845282529091205490840151608001516117ea9190839015611930565b8451600090815260076020908152604080832086845290915290205561192a565b6000611824816000866020015160800151600014611930565b85516000908152600760209081526040808320878452909152902055821561192857600060018411611860576647656e6573697360c81b61188c565b855160009081526008602052604081209061187c600287612151565b8152602001908152602001600020545b86516000908152600760205260408120919250908290826118ae600189612151565b8152602001908152602001600020546040516020016118d7929190918252602082015260400190565b60408051601f1981840301815291815281516020808401919091208a51600090815260089092529181209293509091829161191360018a612151565b81526020810191909152604001600020555050505b505b50505050565b60008061193e8460ff612151565b8361194a57600161194d565b60005b60ff16901b85189150509392505050565b604051806101600160405280600081526020016119b960405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016119e260405180606001604052806000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600080191681525090565b6040518060400160405280611a3861195e565b8152600060209091015290565b828054828255906000526020600020908101928215611a80579160200282015b82811115611a80578251825591602001919060010190611a65565b50611a8c929150611a90565b5090565b5b80821115611a8c5760008155600101611a91565b600060208284031215611ab757600080fd5b5035919050565b60008060408385031215611ad157600080fd5b82356001600160f81b031981168114611ae957600080fd5b9150602083013560ff81168114611aff57600080fd5b809150509250929050565b60008060408385031215611b1d57600080fd5b50508035926020909101359150565b80358015158114611b3c57600080fd5b919050565b60008060408385031215611b5457600080fd5b82359150611b6460208401611b2c565b90509250929050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b805182526020810151611bd16020840182611b6d565b506040810151610120611bfa818501838051825260208082015190830152604090810151910152565b606083015161018085015260808301516101a085015260a08301516101c085015260c08301516101e085015260e0830151610200850152610100830151610220850152820151151561024084015250610140015161026090910152565b6001600160a01b03831681526102a08101610e236020830184611bbb565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611caf57611caf611c75565b60405290565b604051610160810167ffffffffffffffff81118282101715611caf57611caf611c75565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d0257611d02611c75565b604052919050565b60006101008284031215611d1d57600080fd5b611d25611c8b565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015292915050565b600060608284031215611d8957600080fd5b6040516060810181811067ffffffffffffffff82111715611dac57611dac611c75565b80604052508091508235815260208301356020820152604083013560408201525092915050565b60006102808284031215611de657600080fd5b611dee611cb5565b905081358152611e018360208401611d0a565b6020820152610120611e1584828501611d77565b604083015261018083013560608301526101a083013560808301526101c083013560a08301526101e083013560c083015261020083013560e0830152610220830135610100830152611e6a6102408401611b2c565b818301525061026082013561014082015292915050565b6000806105008385031215611e9557600080fd5b611e9f8484611dd3565b9150611b64846102808501611dd3565b6020808252825182820181905260009190848201906040850190845b81811015611f05578351611ee0848251611bbb565b8501516001600160a01b0316610280840152928401926102a090920191600101611ecb565b50909695505050505050565b80356001600160a01b0381168114611b3c57600080fd5b600060208284031215611f3a57600080fd5b610e2382611f11565b61028081016104e48284611bbb565b60006020808385031215611f6557600080fd5b823567ffffffffffffffff80821115611f7d57600080fd5b818501915085601f830112611f9157600080fd5b813581811115611fa357611fa3611c75565b611fb1848260051b01611cd9565b818152848101925060089190911b830184019087821115611fd157600080fd5b928401925b81841015612060576101008489031215611ff05760008081fd5b611ff8611c8b565b84358152858501358682015260408086013590820152606080860135908201526080808601359082015260a061202f818701611f11565b9082015260c0612040868201611f11565b9082015260e0858101359082015283526101009093019291840191611fd6565b979650505050505050565b8b81526102808101612080602083018d611b6d565b8a5161012083015260208b01516101408301526040909a01516101608201526101808101989098526101a08801969096526101c08701949094526101e086019290925261020085015261022084015215156102408301526102609091015292915050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156104e4576104e46120e4565b634e487b7160e01b600052601260045260246000fd5b60008261213857612138612113565b500490565b60008261214c5761214c612113565b500690565b818103818111156104e4576104e46120e4565b600060018201612176576121766120e4565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81036121a9576121a96120e4565b60010192915050565b808201808211156104e4576104e46120e456fea2646970667358221220938a4fb1787e9a654d6dbf052138715c7a42d352d05ebb62d7d4101e2ccaa54d64736f6c63430008140033";

type UsersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Users__factory extends ContractFactory {
  constructor(...args: UsersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Users> {
    return super.deploy(overrides || {}) as Promise<Users>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Users {
    return super.attach(address) as Users;
  }
  override connect(signer: Signer): Users__factory {
    return super.connect(signer) as Users__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsersInterface {
    return new utils.Interface(_abi) as UsersInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Users {
    return new Contract(address, _abi, signerOrProvider) as Users;
  }
}
