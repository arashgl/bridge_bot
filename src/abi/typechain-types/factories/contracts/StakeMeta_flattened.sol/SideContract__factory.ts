/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  SideContract,
  SideContractInterface,
} from "../../../contracts/StakeMeta_flattened.sol/SideContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
    ],
    name: "depositStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user_address",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "plan",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "daoAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uvmAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_id",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMetaInput",
        name: "stake_input",
        type: "tuple",
      },
    ],
    name: "stakeMeta",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stake_addr",
        type: "address",
      },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class SideContract__factory {
  static readonly abi = _abi;
  static createInterface(): SideContractInterface {
    return new utils.Interface(_abi) as SideContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SideContract {
    return new Contract(address, _abi, signerOrProvider) as SideContract;
  }
}
