/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Election, ElectionInterface } from "../../contracts/Election";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stake",
        type: "address",
      },
      {
        internalType: "address",
        name: "dnm_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "beCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkVotingPeriod",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cycleCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cycleUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dnmToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
    ],
    name: "getCandidateVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getVoterStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownersOfCycle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "voteWithStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voterStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "voterStakeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006001556301e13380600255621baf806003553480156200002557600080fd5b50604051620014e5380380620014e583398101604081905262000048916200011e565b33806200006f57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200007a81620000b1565b50600980546001600160a01b039384166001600160a01b031991821617909155600880549290931691161790554260045562000156565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200011957600080fd5b919050565b600080604083850312156200013257600080fd5b6200013d8362000101565b91506200014d6020840162000101565b90509250929050565b61137f80620001666000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638dcba1d6116100b8578063caf614621161007c578063caf61462146102a8578063d932a77f146102bb578063df69fd8a146102c3578063dfa4ee86146102e3578063eb03df8c1461030c578063f2fde38b1461031557600080fd5b80638dcba1d61461023b57806399ad7ed91461024e578063a781358714610284578063ab91ade81461028d578063bed9d861146102a057600080fd5b80635f74bbde116100ff5780635f74bbde146101db578063715018a6146101ee57806378e97925146101f65780638807f271146101ff5780638da5cb5b1461022a57600080fd5b8063069894541461013c5780632f54bf6e1461017a578063301fa53d1461019d578063316fda0f146101a75780633a4b66f1146101b0575b600080fd5b61016761014a366004611009565b600560209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61018d610188366004611033565b610328565b6040519015158152602001610171565b6101a5610394565b005b61016760015481565b6009546101c3906001600160a01b031681565b6040516001600160a01b039091168152602001610171565b6101a56101e9366004611009565b61048f565b6101a56107f0565b61016760045481565b61016761020d366004611009565b600760209081526000928352604080842090915290825290205481565b6000546001600160a01b03166101c3565b6008546101c3906001600160a01b031681565b61016761025c366004611033565b6001600160a01b03166000908152600760209081526040808320600154845290915290205490565b61016760035481565b6101c361029b366004611055565b610804565b6101a5610832565b6101a56102b6366004611009565b6109e3565b61018d610d66565b6101676102d1366004611033565b60066020526000908152604090205481565b6101676102f1366004611033565b6001600160a01b031660009081526006602052604090205490565b61016760025481565b6101a5610323366004611033565b610d98565b600080805b600a81101561038d57836001600160a01b0316600a6000600154815260200190815260200160002082600a811061036657610366611077565b01546001600160a01b03160361037b57600191505b80610385816110a3565b91505061032d565b5092915050565b6301e13380600454426103a791906110bc565b6103b191906110d5565b600181905560035460025490916103c891906110f7565b6004546103d5919061110e565b6103df90426110bc565b106104055760405162461bcd60e51b81526004016103fc90611121565b60405180910390fd5b33600090815260076020908152604080832060015484529091529020541561046f5760405162461bcd60e51b815260206004820152601960248201527f596f752061726520616c72656164792063616e6469646174650000000000000060448201526064016103fc565b336000908152600760209081526040808320600180548552925290912055565b6301e13380600454426104a291906110bc565b6104ac91906110d5565b600181905560035460025490916104c391906110f7565b6004546104d0919061110e565b6104da90426110bc565b106104f75760405162461bcd60e51b81526004016103fc90611121565b816001600160a01b03811661050b57600080fd5b816000811161054d5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642076616c75652160901b60448201526064016103fc565b6001600160a01b038416600090815260076020908152604080832060015484529091529020546105b35760405162461bcd60e51b8152602060048201526011602482015270696e76616c69642063616e64696461746560781b60448201526064016103fc565b6001600160a01b038416330361060b5760405162461bcd60e51b815260206004820152601c60248201527f796f752063616e6e6f7420766f746520666f7220796f757273656c660000000060448201526064016103fc565b600854604051636eb1769f60e11b815233600482015230602482015284916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d9190611158565b10156106bf5760405162461bcd60e51b8152602060048201526011602482015270696e76616c696420616c6c6f77616e636560781b60448201526064016103fc565b6008546040516323b872dd60e01b8152336004820152306024820152604481018590526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b9190611181565b9050806107945760405162461bcd60e51b815260206004820152602160248201527f736f6d657468696e672077656e742077726f6e672077697468207061796d656e6044820152601d60fa1b60648201526084016103fc565b6001600160a01b03851660009081526007602090815260408083206001548452909152812080548692906107c990849061110e565b90915550503360009081526006602052604090208490556107e985610dd3565b5050505050565b6107f8610f70565b6108026000610f9d565b565b600a60205281600052604060002081600a811061082057600080fd5b01546001600160a01b03169150829050565b6301e133806004544261084591906110bc565b61084f91906110d5565b6001819055600354600254909161086691906110f7565b600454610873919061110e565b61087d90426110bc565b116108ca5760405162461bcd60e51b815260206004820152601b60248201527f77652061726520696e2074686520766f74696e6720706572696f64000000000060448201526064016103fc565b3360009081526006602052604090205461091a5760405162461bcd60e51b8152602060048201526011602482015270796f752068617665206e6f207374616b6560781b60448201526064016103fc565b6008543360008181526006602052604080822054905163a9059cbb60e01b815260048101939093526024830152916001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561097a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099e9190611181565b9050806109e05760405162461bcd60e51b815260206004820152601060248201526f7769746864726177206661696c65642160801b60448201526064016103fc565b50565b6301e13380600454426109f691906110bc565b610a0091906110d5565b60018190556003546002549091610a1791906110f7565b600454610a24919061110e565b610a2e90426110bc565b10610a4b5760405162461bcd60e51b81526004016103fc90611121565b816001600160a01b038116610a5f57600080fd5b8160008111610aa15760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642076616c75652160901b60448201526064016103fc565b6001600160a01b03841660009081526007602090815260408083206001548452909152902054610b075760405162461bcd60e51b8152602060048201526011602482015270696e76616c69642063616e64696461746560781b60448201526064016103fc565b6001600160a01b0384163303610b5f5760405162461bcd60e51b815260206004820152601c60248201527f796f752063616e6e6f7420766f746520666f7220796f757273656c660000000060448201526064016103fc565b600954604051635dd6e49d60e11b81523360048201526000916001600160a01b03169063bbadc93a90602401600060405180830381865afa158015610ba8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bd0919081019061121e565b90506000805b8251811015610c42576000838281518110610bf357610bf3611077565b602002602001015160e0015111610c3057828181518110610c1657610c16611077565b60200260200101516080015182610c2d919061110e565b91505b80610c3a816110a3565b915050610bd6565b5084811015610c845760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b60448201526064016103fc565b33600090815260056020908152604080832060015484529091529020548190610cae90879061110e565b1115610cfc5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420616d6f756e74206f6620646e6d00000000000060448201526064016103fc565b6001600160a01b0386166000908152600760209081526040808320600154845290915281208054879290610d3190849061110e565b909155505033600090815260056020908152604080832060015484529091529020859055610d5e86610dd3565b505050505050565b6000600354600254600154610d7b91906110f7565b600454610d88919061110e565b610d9290426110bc565b10905090565b610da0610f70565b6001600160a01b038116610dca57604051631e4fbdf760e01b8152600060048201526024016103fc565b6109e081610f9d565b8060005b600a811015610f6b576001546000908152600a6020819052604082209083908110610e0457610e04611077565b01546001600160a01b031603610e5f5781600a6000600154815260200190815260200160002082600a8110610e3b57610e3b611077565b0180546001600160a01b0319166001600160a01b0392909216919091179055505050565b816001600160a01b0316600a6000600154815260200190815260200160002082600a8110610e8f57610e8f611077565b01546001600160a01b031614610f6b576001546000908152600a6020819052604082209083908110610ec357610ec3611077565b01546001600160a01b0384811660009081526007602081815260408084206001548086529083528185205495909616808552928252808420958452949052929020549192501115610f585782600a6000600154815260200190815260200160002083600a8110610f3557610f35611077565b0180546001600160a01b0319166001600160a01b03929092169190911790559150815b5080610f63816110a3565b915050610dd7565b505050565b6000546001600160a01b031633146108025760405163118cdaa760e01b81523360048201526024016103fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461100457600080fd5b919050565b6000806040838503121561101c57600080fd5b61102583610fed565b946020939093013593505050565b60006020828403121561104557600080fd5b61104e82610fed565b9392505050565b6000806040838503121561106857600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110b5576110b561108d565b5060010190565b818103818111156110cf576110cf61108d565b92915050565b6000826110f257634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176110cf576110cf61108d565b808201808211156110cf576110cf61108d565b6020808252601f908201527f776520617265206e6f7420696e2074686520766f74696e6720706572696f6400604082015260600190565b60006020828403121561116a57600080fd5b5051919050565b8051801515811461100457600080fd5b60006020828403121561119357600080fd5b61104e82611171565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156111d6576111d661119c565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156112055761120561119c565b604052919050565b805160ff8116811461100457600080fd5b6000602080838503121561123157600080fd5b825167ffffffffffffffff8082111561124957600080fd5b818501915085601f83011261125d57600080fd5b81518181111561126f5761126f61119c565b61127d848260051b016111dc565b818152848101925061014091820284018501918883111561129d57600080fd5b938501935b8285101561133d5780858a0312156112ba5760008081fd5b6112c26111b2565b855181526112d1878701611171565b8782015260406112e281880161120d565b90820152606086810151908201526080808701519082015260a0808701519082015260c0808701519082015260e0808701519082015261010080870151908201526101208087015190820152845293840193928501926112a2565b5097965050505050505056fea26469706673582212205edfbf2b5780803f273fc15cff7d9c349b8ab747924e8b50b19f3f070560f04e64736f6c63430008140033";

type ElectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Election__factory extends ContractFactory {
  constructor(...args: ElectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stake: string,
    dnm_token: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Election> {
    return super.deploy(
      _stake,
      dnm_token,
      overrides || {}
    ) as Promise<Election>;
  }
  override getDeployTransaction(
    _stake: string,
    dnm_token: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_stake, dnm_token, overrides || {});
  }
  override attach(address: string): Election {
    return super.attach(address) as Election;
  }
  override connect(signer: Signer): Election__factory {
    return super.connect(signer) as Election__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElectionInterface {
    return new utils.Interface(_abi) as ElectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Election {
    return new Contract(address, _abi, signerOrProvider) as Election;
  }
}
