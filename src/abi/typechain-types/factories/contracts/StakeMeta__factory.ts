/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StakeMeta, StakeMetaInterface } from "../../contracts/StakeMeta";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "uvm_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "dnm_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "land_token_wrapper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyDao",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOnce",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sc_address",
        type: "address",
      },
    ],
    name: "AddSideContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AddTokenToPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "FinalizeContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "plan",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dnmAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "uvm_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "land_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
    ],
    name: "NewStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "user_id",
        type: "uint256",
      },
    ],
    name: "NewUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "RemoveSideContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
    ],
    name: "WithdrawUserStake",
    type: "event",
  },
  {
    inputs: [],
    name: "CONTACT_FINALIZED",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DNM_TOKEN",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EIGHTEEN_MONTH_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LAND_TOKEN",
    outputs: [
      {
        internalType: "contract ERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LAUNCH_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_YEAR_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_DECAY_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SC_EXISTS",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKE_LIST_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKE_MAX_DNM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKE_MAX_UVM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKE_MIN_DNM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIME_STEP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOP_UP_PHASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_DNM_STAKED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_LAND_STAKED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_REWARD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_UVM_STAKED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TWO_YEAR_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USER_LIST_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UVM_FEE_BALANCE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UVM_POOL_BALANCE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UVM_TOKEN",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sc_address",
        type: "address",
      },
    ],
    name: "addSideContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addTokenToPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "plan",
        type: "uint8",
      },
    ],
    name: "allowedDnmAmountStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dnm",
        type: "uint256",
      },
    ],
    name: "calDnmUvmRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "plan_type",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "dnm_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stake_duration",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
    ],
    name: "calculateRewardForStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractDNMBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractUVMBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFinishedStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "land_id",
        type: "uint256",
      },
    ],
    name: "getPlanByTokenId",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan",
        name: "sp",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "getUserStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "getUserStakeIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeSideContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
    ],
    name: "setDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dnmAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "land_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stake_duration",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dnmAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "land_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stake_duration",
        type: "uint256",
      },
    ],
    name: "stakeFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakeList",
    outputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "plan",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "uvm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dnm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "land",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "finish",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stake_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "total_paid_out",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "transferRewardFromSideContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateTopUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "plan",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uvm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dnm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "land",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finish",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_paid_out",
            type: "uint256",
          },
        ],
        internalType: "struct StakeMeta.StakePlan",
        name: "sp",
        type: "tuple",
      },
    ],
    name: "withdrawAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawFeeByDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
    ],
    name: "withdrawReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stake_id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdraw_reward",
        type: "bool",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260008080556003805460ff60a01b199081169091556007805490911690556011819055601281905560138190556014553480156200004157600080fd5b506040516200474c3803806200474c83398101604081905262000064916200085b565b600180546001600160a01b0319166001600160a01b038416179055600260205268018493fba64ef000007fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e05567c249fdd3277800007f679795a0195a1b76cdebb7c51d74e058aee92919b8c3389af86ef24535e8a28c55676124fee993bc00007f88601476d11616a71c5be67555bd1dff4b1cbf21533d2669b768b61518cfe1c3556726db992a3b1800007fee60d0579bcffd98e668647d59fec1ff86a7fb340ce572e844f234ae73a6918f55600560005267136dcc951d8c00007fb98b78633099fa36ed8b8680c4f8092689e1e04080eb9cbb077ca38a14d7e3845533806200018857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200019381620007ec565b50604080518082018252670ed96754b5ab00008082526729a2241af62c0000602080840182815260016000818152600480855296517fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe055591517fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0655865180880188528581526714d1120d7b160000818501818152600280865289875292517f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a755517f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a8558851808a018a52878152670a688906bd8b000081870190815260038087528a885291517f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa055517f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa1558951808b018b52888152670429d069189e00008188018181528b88528b895291517f1a1e6821cde7d0159c0d293177871e09677b4e42307c7db3ba94f8648a5a050f5590517f1a1e6821cde7d0159c0d293177871e09677b4e42307c7db3ba94f8648a5a0510558a51808c018c52988952670214e8348c4f000089880190815260058088528b895299517f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f0555517f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f06558a51808c018c52671657de7848610000808252673e73362871420000828a019081528789528b8a5291517f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b5590517f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017c558b51808d018d52818152671f399b1438a10000818a019081528689528b8a5290517f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a55517f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733b558b51808d018d52818152670f8b0a10e4700000818a019081528489528b8a5290517fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc055517fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc1558b51808d018d5281815267063eb89da4ed0000818a019081528c89528b8a5290517f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d555517f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d6558b51808d018d5290815267031f5c4ed27680008189019081528a88528a895290517f458b30c2d72bfd2c6317304a4594ecbafe5f729d3111b65fdc3a33bd48e5432d55517f458b30c2d72bfd2c6317304a4594ecbafe5f729d3111b65fdc3a33bd48e5432e558a51808c018c52671dd6559bdb1700008082526753444835ec580000828a019081529688526006808a5291517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a315595517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a32558b51808d018d52868152808901998a5294875280885293517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace295596517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2a558951808b018b52848152808701928352908552828652517f75f96ab15d697e93042dc45b5c896c4b27e89bb6eaf39475c5c371cb2513f7d255517f75f96ab15d697e93042dc45b5c896c4b27e89bb6eaf39475c5c371cb2513f7d35587518089018952828152670853a0d2313c0000818601908152978452818552517fc5069e24aaadb2addc3e52e868fcf3f4f8acf5a87e24300992fd4540c2a87eed5595517fc5069e24aaadb2addc3e52e868fcf3f4f8acf5a87e24300992fd4540c2a87eee55865180880190975286528582019283529290925291905290517fbfd358e93f18da3ed276c3afdbdba00b8f0b6008a03476a6a86bd6320ee6938b55517fbfd358e93f18da3ed276c3afdbdba00b8f0b6008a03476a6a86bd6320ee6938c5542600c55600980546001600160a01b039485166001600160a01b031991821617909155600a805493851693821693909317909255600b8054919093169116179055620008a5565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200085657600080fd5b919050565b6000806000606084860312156200087157600080fd5b6200087c846200083e565b92506200088c602085016200083e565b91506200089c604085016200083e565b90509250925092565b613e9780620008b56000396000f3fe608060405234801561001057600080fd5b50600436106103785760003560e01c8063715018a6116101d3578063bbadc93a11610104578063e66db227116100a2578063f19d2e5e1161007c578063f19d2e5e146107c0578063f2a6c535146107d0578063f2fde38b146107e4578063fc964a84146107f757600080fd5b8063e66db22714610792578063ead8dbd41461079a578063ec2daa9c146107ad57600080fd5b8063c8333bb2116100de578063c8333bb21461074e578063ce325bf814610757578063d21d70de14610777578063e28231e91461078a57600080fd5b8063bbadc93a1461071f578063bf2683c414610732578063c81acf5c1461074557600080fd5b80639df8cf7211610171578063a61e28ce1161014b578063a61e28ce146106d5578063a638f2e2146106de578063af4572b1146106f1578063b4ebaa2d146106fa57600080fd5b80639df8cf72146106985780639f4216e8146106a1578063a4580cd0146106ca57600080fd5b80638da5cb5b116101ad5780638da5cb5b1461065a578063974c41951461066b5780639965f9e21461067e5780639d69c9911461068957600080fd5b8063715018a61461062e578063763ba356146106365780637fea672c1461064957600080fd5b806338f10585116102ad5780635b75366e1161024b5780636637b882116102255780636637b882146105b35780636841cbb4146105c65780636ddf4991146105cf5780636f77926b146105d757600080fd5b80635b75366e1461058c578063631e136c146103fa5780636560a8cc146105a057600080fd5b80634c86259e116102875780634c86259e146104a25780634cd1f5f21461054e578063523a3f0814610561578063567147901461058457600080fd5b806338f105851461045c5780634162169f1461046457806341eedcbe1461048f57600080fd5b80632424e6fa1161031a57806328c5cf0a116102f457806328c5cf0a146104215780633127ff9514610429578063313da78f1461043257806332bc298c1461045257600080fd5b80632424e6fa146103fa57806326815e9a146104055780632879cf4b1461040e57600080fd5b80630e171896116103565780630e171896146103c1578063142b9cc2146103d457806317387b58146103e95780631f744406146103f157600080fd5b8063022466b51461037d5780630adcbfac146103995780630ba70992146103ae575b600080fd5b610386600c5481565b6040519081526020015b60405180910390f35b6103a161080a565b60405161039091906138aa565b6103866103bc366004613971565b61093e565b6103866103cf366004613a06565b610a10565b6103e76103e2366004613a34565b610a40565b005b6103a1610b48565b61038660145481565b6103866301e1338081565b61038660125481565b61038661041c366004613a06565b610c9b565b6103e7610d7b565b610386600e5481565b610445610440366004613a64565b610dd2565b6040516103909190613a81565b6103866201518081565b6103a1610e41565b600854610477906001600160a01b031681565b6040516001600160a01b039091168152602001610390565b6103e761049d366004613ab9565b610fa4565b6104fc6104b0366004613a06565b601760205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880154600890980154969760ff8088169861010090980416968a565b604080519a8b5298151560208b015260ff909716978901979097526060880194909452608087019290925260a086015260c085015260e084015261010083019190915261012082015261014001610390565b600954610477906001600160a01b031681565b61057461056f366004613a06565b6118e9565b6040519015158152602001610390565b6103e7611c3c565b60035461057490600160a01b900460ff1681565b6103e76105ae366004613a34565b611cd1565b6103e76105c1366004613a64565b611d2e565b61038660005481565b610386611d82565b6106136105e5366004613a64565b6001600160a01b0316600090815260156020526040902080546001820154600390920154909260ff90921691565b60408051938452911515602084015290820152606001610390565b6103e7611df5565b600a54610477906001600160a01b031681565b61038669014542ba12a337c0000081565b6003546001600160a01b0316610477565b610386610679366004613af4565b611e09565b6103866303c2670081565b610386670de0b6b3a764000081565b610386600d5481565b6104776106af366004613a06565b6016602052600090815260409020546001600160a01b031681565b6103866302d1248081565b610386600f5481565b6103e76106ec366004613b0f565b611e3e565b61038660115481565b61070d610708366004613a06565b612713565b60405160ff9091168152602001610390565b6103a161072d366004613a64565b6129c4565b610386610740366004613b3b565b612b48565b61038660135481565b61038660105481565b61076a610765366004613a06565b612cf9565b6040516103909190613b86565b600b54610477906001600160a01b031681565b610386612d90565b6103e7612dc1565b6103e76107a8366004613b95565b612ece565b6103e76107bb366004613a64565b61339a565b61038668018493fba64ef0000081565b60075461057490600160a01b900460ff1681565b6103e76107f2366004613a64565b613441565b6103e7610805366004613a06565b61347c565b6060600060135467ffffffffffffffff811115610829576108296138f9565b60405190808252806020026020018201604052801561086257816020015b61084f613777565b8152602001906001900390816108475790505b50905060015b6013548111610938576000818152601760209081526040918290208251610140810184528154815260018083015460ff80821615159584019590955261010090819004909416948201949094526002820154606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e08201526007820154928101929092526008015461012082015290839061090a9084613bd0565b8151811061091a5761091a613be3565b6020026020010181905250808061093090613bf9565b915050610868565b50919050565b600080610966836040015160ff1684608001518560c001518660e00151876101000151612b48565b905082610120015160000361098757610980600a82613c12565b9392505050565b60008361012001518261099a9190613bd0565b9050600081116109fd5760405162461bcd60e51b8152602060048201526024808201527f796f7520686176652077697468647261776e20616c6c206f66207468652072656044820152631dd85c9960e21b60648201526084015b60405180910390fd5b610a08600a83613c12565b949350505050565b600068018493fba64ef00000610a308369014542ba12a337c00000613c34565b610a3a9190613c12565b92915050565b6008546001600160a01b03163314610a6b576040516327365a1960e01b815260040160405180910390fd5b601254821015610ab55760405162461bcd60e51b8152602060048201526015602482015274185b5bdd5b9d081a5cc81b9bdd0818dbdc9c9958dd605a1b60448201526064016109f4565b8160126000828254610ac79190613bd0565b909155505060095460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015610b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190613c4b565b505050565b60606000600f5467ffffffffffffffff811115610b6757610b676138f9565b604051908082528060200260200182016040528015610ba057816020015b610b8d613777565b815260200190600190039081610b855790505b509050600060015b6013548111610c93576000818152601760205260408120600601549003610c815760008181526017602090815260409182902082516101408101845281548152600182015460ff80821615159483019490945261010090819004909316938101939093526002810154606084015260038101546080840152600481015460a0840152600581015460c0840152600681015460e0840152600781015491830191909152600801546101208201528351849084908110610c6857610c68613be3565b6020908102919091010152610c7e826001613c68565b91505b80610c8b81613bf9565b915050610ba8565b509092915050565b600081815260176020526040812060019081015460ff16151514610cd15760405162461bcd60e51b81526004016109f490613c7b565b60008281526017602090815260409182902082516101408101845281548152600182015460ff80821615159483019490945261010090819004909316938101939093526002810154606084015260038101546080840152600481015460a0840152600581015460c0840152600681015460e084018190526007820154928401929092526008015461012083015215610d6c576109808161093e565b4260e08201526109808161093e565b610d836135ed565b6003805460ff60a01b1916600160a01b1790556040517fa26419d4e7754a6ee392a5f28e81e97453baa4d10cf3b78a2e198bd3cb14da1a90610dc89042815260200190565b60405180910390a1565b6001600160a01b038116600090815260156020908152604091829020600201805483518184028101840190945280845260609392830182828015610e3557602002820191906000526020600020905b815481526020019060010190808311610e21575b50505050509050919050565b60606000600f54601354610e559190613bd0565b905060008167ffffffffffffffff811115610e7257610e726138f9565b604051908082528060200260200182016040528015610eab57816020015b610e98613777565b815260200190600190039081610e905790505b509050600060015b838111610f9b5760008181526017602052604090206006015415610f895760008181526017602090815260409182902082516101408101845281548152600182015460ff80821615159483019490945261010090819004909316938101939093526002810154606084015260038101546080840152600481015460a0840152600581015460c0840152600681015460e0840152600781015491830191909152600801546101208201528351849084908110610f7057610f70613be3565b6020908102919091010152610f86826001613c68565b91505b80610f9381613bf9565b915050610eb3565b50909392505050565b6301e13380811480610fb957506302d1248081145b80610fc757506303c2670081145b6110085760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207374616b652074696d6560701b60448201526064016109f4565b600061101383612713565b905060068160ff1610801561102b575060008160ff16115b6110475760405162461bcd60e51b81526004016109f490613ca8565b600061105282611e09565b905080851115801561106c5750670de0b6b3a76400008510155b6110885760405162461bcd60e51b81526004016109f490613cce565b600061109386610a10565b600a546040516370a0823160e01b815233600482015291925087916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190613d10565b101561114e5760405162461bcd60e51b81526020600482015260196024820152780889c9a40c4c2d8c2dcc6ca40d2e640dcdee840cadcdeeaced603b1b60448201526064016109f4565b6009546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ba9190613d10565b10156111d85760405162461bcd60e51b81526004016109f490613d29565b600b546040516331a9108f60e11b81526004810187905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112459190613d60565b6001600160a01b0316146112975760405162461bcd60e51b8152602060048201526019602482015278165bdd48185c99481b9bdd081bdddb995c881bd9881b185b99603a1b60448201526064016109f4565b600a546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd906112cc90339030908c90600401613d7d565b6020604051808303816000875af11580156112eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130f9190613c4b565b90506001811515146113635760405162461bcd60e51b815260206004820152601e60248201527f496e7465726e616c204572726f72204f6e20444e4d205472616e73666572000060448201526064016109f4565b86600e546113719190613c68565b600e556009546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd906113a990339030908890600401613d7d565b6020604051808303816000875af11580156113c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ec9190613c4b565b90506001811515146114105760405162461bcd60e51b81526004016109f490613da1565b82600d5461141e9190613c68565b600d55600b546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061145590339030908c90600401613d7d565b600060405180830381600087803b15801561146f57600080fd5b505af1158015611483573d6000803e3d6000fd5b50505050600f5460016114969190613c68565b600f556001600160a01b0389166000908152601560209081526040808320815160808101835281548152600182015460ff1615158185015260028201805484518187028101870186528181529295939486019383018282801561151857602002820191906000526020600020905b815481526020019060010190808311611504575b505050505081526020016003820154815250509050806020015115156000151503611612576014805490600061154d83613bf9565b9091555050604080516080810182526014548152600160208201529081016000604051908082528060200260200182016040528015611596578160200160208202803683370190505b50815260006020918201819052601480548252601690925260409081902080546001600160a01b038f166001600160a01b031990911681179091559154905192935090917fd75b88a9203b17f9356ca063241beac16a25d5a46f485b378c2c229e864bdd4d916116099190815260200190565b60405180910390a25b6040805161014081018252825181526001602082015260ff88169181019190915260608101859052608081018a905260a081018990524260c0820152600060e0820181905261010082018990526101208201819052601380549161167583613bf9565b9190505550806017600060135481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff021916908360ff160217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e082015181600601556101008201518160070155610120820151816008015590505081601560008d6001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160020190805190602001906117929291906137cf565b50606091909101516003909101556001600160a01b038b166000908152601560209081526040822060135460029091018054600180820183559185529290932090910155600754600160a01b900460ff1615159003611882576040805160c0810182526001600160a01b03808e16825260ff8a1660208301528183018d905260608201889052608082018c905260135460a0830152600754925163af7107a560e01b81529192169063af7107a59061184e908490600401613dd8565b600060405180830381600087803b15801561186857600080fd5b505af115801561187c573d6000803e3d6000fd5b50505050505b81516013546040805192835260ff8a16602084015282018c905260608201879052608082018b905260a08201527fe63a5261debedf32bcae3ebaf6d8f288e9c71cfbcb99ec6e1832eef7255e8e2b9060c00160405180910390a15050505050505050505050565b336000908152601560209081526040808320848452601783528184208251610140810184528154815260018083015460ff808216151597840197909752610100908190048716958301959095526002830154606083015260038301546080830152600483015460a0830152600583015460c0830152600683015460e0830152600783015494820194909452600890910154610120820152828201549193909291161515146119cf5760405162461bcd60e51b81526020600482015260136024820152721d5cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016109f4565b602081015115156001146119f55760405162461bcd60e51b81526004016109f490613c7b565b8154815114611a165760405162461bcd60e51b81526004016109f490613e20565b61010081015160c0820151611a2b9042613bd0565b1015611a795760405162461bcd60e51b815260206004820152601f60248201527f596f752073686f756c642077616974206174206c65617374206120796561720060448201526064016109f4565b6000611a8485610c9b565b9050806011541015611ac85760405162461bcd60e51b815260206004820152600d60248201526c506f6f6c20697320656d70747960981b60448201526064016109f4565b808261012001818151611adb9190613c68565b905250600383018054829190600090611af5908490613c68565b9091555060009050670de0b6b3a7640000611b1783662386f26fc10000613c34565b611b219190613c12565b611b2b9083613bd0565b90506000611b398284613bd0565b90508115611c2f5760008781526017602090815260409182902086518155908601516001820180549388015161ffff1990941691151561ff0019169190911761010060ff9094168402179055606086015160028201556080860151600382015560a0860151600482015560c0860151600582015560e08601516006820155908501516007820155610120850151600890910155611bd6338361361a565b8060126000828254611be89190613c68565b909155505060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25060019695505050505050565b5060009695505050505050565b611c446135ed565b600354600160a01b900460ff1615611c935760405162461bcd60e51b815260206004820152601260248201527118dbdb9d1c9858dd08199a5b985b1a5e995960721b60448201526064016109f4565b6007805460ff60a01b19169055604051600081527fe8b0ba57f60acd4a38b199339c683a7c50d6648482b6969e80accaa6dc6cadc990602001610dc8565b6007546001600160a01b03163314611d205760405162461bcd60e51b81526020600482015260126024820152711bdb9b1e481cda59194818dbdb9d1c9858dd60721b60448201526064016109f4565b611d2a818361361a565b5050565b611d366135ed565b6008546001600160a01b031615611d605760405163041d6a9760e51b815260040160405180910390fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024015b602060405180830381865afa158015611dcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df09190613d10565b905090565b611dfd6135ed565b611e0760006136ef565b565b6000611e13612dc1565b600054611e21906001613c68565b60ff8316600090815260026020526040902054610a3a9190613c34565b6301e13380811480611e5357506302d1248081145b80611e6157506303c2670081145b611ea25760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207374616b652074696d6560701b60448201526064016109f4565b6000611ead83612713565b905060068160ff16108015611ec5575060008160ff16115b611ee15760405162461bcd60e51b81526004016109f490613ca8565b6000611eec82611e09565b9050808511158015611f065750670de0b6b3a76400008510155b611f225760405162461bcd60e51b81526004016109f490613cce565b6000611f2d86610a10565b600a546040516370a0823160e01b815233600482015291925087916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9e9190613d10565b1015611fe85760405162461bcd60e51b81526020600482015260196024820152780889c9a40c4c2d8c2dcc6ca40d2e640dcdee840cadcdeeaced603b1b60448201526064016109f4565b6009546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015612030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120549190613d10565b10156120725760405162461bcd60e51b81526004016109f490613d29565b600b546040516331a9108f60e11b81526004810187905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156120bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120df9190613d60565b6001600160a01b0316146121315760405162461bcd60e51b8152602060048201526019602482015278165bdd48185c99481b9bdd081bdddb995c881bd9881b185b99603a1b60448201526064016109f4565b600a546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd9061216690339030908c90600401613d7d565b6020604051808303816000875af1158015612185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121a99190613c4b565b90506001811515146121fd5760405162461bcd60e51b815260206004820152601e60248201527f496e7465726e616c204572726f72204f6e20444e4d205472616e73666572000060448201526064016109f4565b86600e5461220b9190613c68565b600e556009546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd9061224390339030908890600401613d7d565b6020604051808303816000875af1158015612262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122869190613c4b565b90506001811515146122aa5760405162461bcd60e51b81526004016109f490613da1565b82600d546122b89190613c68565b600d55600b546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906122ef90339030908c90600401613d7d565b600060405180830381600087803b15801561230957600080fd5b505af115801561231d573d6000803e3d6000fd5b50505050600f5460016123309190613c68565b600f55336000908152601560209081526040808320815160808101835281548152600182015460ff161515818501526002820180548451818702810187018652818152929593948601938301828280156123a957602002820191906000526020600020905b815481526020019060010190808311612395575b50505050508152602001600382015481525050905080602001511515600015150361248d57601480549060006123de83613bf9565b9091555050604080516080810182526014548152600160208201529081016000604051908082528060200260200182016040528015612427578160200160208202803683370190505b508152600060209182018190526014805482526016835260409182902080546001600160a01b03191633908117909155905491519182529293507fd75b88a9203b17f9356ca063241beac16a25d5a46f485b378c2c229e864bdd4d910160405180910390a25b6040805161014081018252825181526001602082015260ff88169181019190915260608101859052608081018a905260a081018990524260c0820152600060e082018190526101008201899052610120820181905260138054916124f083613bf9565b909155505060135460009081526017602090815260408083208451815584830151600180830180548886015161ffff1990911693151561ff0019169390931761010060ff909416840217905560608701516002808501919091556080880151600385015560a0880151600485015560c0880151600585015560e0880151600685015591870151600784015561012087015160089093019290925533855260158452938290208651815586840151918101805460ff191692151592909217909155908501518051869492936125c89385019201906137cf565b5060609190910151600390910155336000908152601560209081526040822060135460029091018054600180820183559185529290932090910155600754600160a01b900460ff16151590036126ad576040805160c08101825233815260ff891660208201528082018c905260608101879052608081018b905260135460a0820152600754915163af7107a560e01b815290916001600160a01b03169063af7107a590612679908490600401613dd8565b600060405180830381600087803b15801561269357600080fd5b505af11580156126a7573d6000803e3d6000fd5b50505050505b81516013546040805192835260ff8a16602084015282018c905260608201879052608082018b905260a08201527fe63a5261debedf32bcae3ebaf6d8f288e9c71cfbcb99ec6e1832eef7255e8e2b9060c00160405180910390a150505050505050505050565b6000600182101580156127285750611f408211155b1561273557506001919050565b611f4182101580156127495750613a988211155b1561275657506002919050565b613a99821015801561276a5750614e208211155b1561277757506003919050565b614e21821015801561278b57506159d88211155b1561279857506004919050565b6159d982101580156127ac57506161a88211155b156127b957506005919050565b6161a982101580156127cd57506180e88211155b156127da57506001919050565b6180e982101580156127ee5750619c408211155b156127fb57506002919050565b619c41821015801561280f575061afc88211155b1561281c57506003919050565b61afc98210158015612830575061bb808211155b1561283d57506004919050565b61bb818210158015612851575061c3508211155b1561285e57506005919050565b61c3518210158015612872575061e2908211155b1561287f57506001919050565b61e2918210158015612893575061fde88211155b156128a057506002919050565b61fde982101580156128b55750620111708211155b156128c257506003919050565b6201117182101580156128d8575062011d288211155b156128e557506004919050565b62011d2982101580156128fb5750620124f88211155b1561290857506005919050565b620124f9821015801561291e5750620144388211155b1561292b57506001919050565b620144398210158015612941575062015f908211155b1561294e57506002919050565b62015f9182101580156129645750620173188211155b1561297157506003919050565b620173198210158015612987575062017ed08211155b1561299457506004919050565b62017ed182101580156129aa5750620186a08211155b156129b757506005919050565b506000919050565b919050565b6001600160a01b0381166000908152601560205260408120600201546060918167ffffffffffffffff8111156129fc576129fc6138f9565b604051908082528060200260200182016040528015612a3557816020015b612a22613777565b815260200190600190039081612a1a5790505b50905060005b82811015612b40576001600160a01b03851660009081526015602052604081206002018054601792919084908110612a7557612a75613be3565b60009182526020808320909101548352828101939093526040918201902081516101408101835281548152600182015460ff80821615159583019590955261010090819004909416928101929092526002810154606083015260038101546080830152600481015460a0830152600581015460c0830152600681015460e08301526007810154928201929092526008909101546101208201528251839083908110612b2257612b22613be3565b60200260200101819052508080612b3890613bf9565b915050612a3b565b509392505050565b600060068661ffff16108015612b62575060008661ffff16115b612b7e5760405162461bcd60e51b81526004016109f490613ca8565b60008511612bc35760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908191b9b48185b5bdd5b9d60721b60448201526064016109f4565b82841115612c0b5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081cdd185c9d08185b9908195b99605a1b60448201526064016109f4565b600062015180612c1b8686613bd0565b612c259190613c12565b9050600060015b828111612ced576000806301e133808703612c645761ffff8b166000908152600460205260409020612c5e908b613741565b90925090505b6302d124808703612c925761ffff8b166000908152600560205260409020612c8c908b613741565b90925090505b6303c267008703612cc05761ffff8b166000908152600660205260409020612cba908b613741565b90925090505b612cca8285613c68565b9350612cd68185613c68565b935050508080612ce590613bf9565b915050612c2c565b50979650505050505050565b612d01613777565b5060009081526017602090815260409182902082516101408101845281548152600182015460ff80821615159483019490945261010090819004909316938101939093526002810154606084015260038101546080840152600481015460a0840152600581015460c0840152600681015460e08401526007810154918301919091526008015461012082015290565b6009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401611daf565b600154604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015612e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e2f9190613d10565b90506a07324bf1ed9079c58000008110612e4b57600660005550565b6a05ff3f499b4dbacf4000008110612e6557600560005550565b6a04cc32a1490afbd90000008110612e7f57600460005550565b6a039925f8f6c83ce2c000008110612e9957600360005550565b6a02661950a4857dec8000008110612eb357600260005550565b6a01330ca85242bef64000008110612ecb5760016000555b50565b33600090815260156020908152604080832085845260178352928190208151610140810183528154815260018083015460ff808216151596840196909652610100908190048616948301949094526002830154606083015260038301546080830152600483015460a0830152600583015460c0830152600683015460e083015260078301549382019390935260089091015461012082015281840154909216151514612fb25760405162461bcd60e51b81526020600482015260136024820152721d5cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016109f4565b60208101511515600114612fd85760405162461bcd60e51b81526004016109f490613c7b565b60e0810151156130205760405162461bcd60e51b81526020600482015260136024820152727374616b65206973206e6f742061637469766560681b60448201526064016109f4565b81548151146130415760405162461bcd60e51b81526004016109f490613e20565b61010081015160c08201516130569042613bd0565b10156130a45760405162461bcd60e51b815260206004820152601f60248201527f596f752073686f756c642077616974206174206c65617374206120796561720060448201526064016109f4565b4260e0820190815260008581526017602090815260409182902084518155908401516001820180548487015161ffff1990911692151561ff0019169290921761010060ff90931683021790556060850151600283018190556080860151600384015560a086015160048085019190915560c0870151600585015594516006840155908501516007830155610120850151600890920191909155600954915163a9059cbb60e01b8152339381019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561318b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131af9190613c4b565b508060600151600d546131c29190613bd0565b600d55600a54608082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561321c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132409190613c4b565b508060800151600e546132539190613bd0565b600e55600b5460a08201516040516323b872dd60e01b81526001600160a01b03909216916323b872dd9161328d9130913391600401613d7d565b600060405180830381600087803b1580156132a757600080fd5b505af11580156132bb573d6000803e3d6000fd5b505050506001600f546132ce9190613bd0565b600f558215156001036132e6576132e4846118e9565b505b600754600160a01b900460ff16151560010361336157600754604051635410f36560e01b8152336004820152602481018690526001600160a01b0390911690635410f36590604401600060405180830381600087803b15801561334857600080fd5b505af115801561335c573d6000803e3d6000fd5b505050505b6040518481527fbf82b326dece9f8ab13bc4f7bb7d61eef7ba78986c3f5b35cba39bea331844459060200160405180910390a150505050565b6133a26135ed565b600354600160a01b900460ff16156133f15760405162461bcd60e51b815260206004820152601260248201527118dbdb9d1c9858dd08199a5b985b1a5e995960721b60448201526064016109f4565b600780546001600160a81b0319166001600160a01b038316908117600160a01b179091556040517fb28ace751049cf14472ef879a8bf24b8fa60a3cf05b2ca4774c56845324bf04490600090a250565b6134496135ed565b6001600160a01b03811661347357604051631e4fbdf760e01b8152600060048201526024016109f4565b612ecb816136ef565b6009546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156134c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134e89190613d10565b10156135065760405162461bcd60e51b81526004016109f490613d29565b6009546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd9061353b90339030908790600401613d7d565b6020604051808303816000875af115801561355a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061357e9190613c4b565b90506001811515146135a25760405162461bcd60e51b81526004016109f490613da1565b816011546135b09190613c68565b60115560405182815233907f685455f4b0eabaeb2c46de87f47dfc665a4f0f8bb345f444535c1bbfdf98498b906020015b60405180910390a25050565b6003546001600160a01b03163314611e075760405163118cdaa760e01b81523360048201526024016109f4565b806011546136289190613bd0565b601155601054613639908290613c68565b60105560095460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af115801561368f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136b39190613c4b565b50816001600160a01b03167f65ba0d013dd6bc1414e500ad30e4d210e42f0159a37abcbc8f78e8e10a6a8765826040516135e191815260200190565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808360010154670de0b6b3a76400008486600001546137629190613c34565b61376c9190613c12565b915091509250929050565b60405180610140016040528060008152602001600015158152602001600060ff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b82805482825590600052602060002090810192821561380a579160200282015b8281111561380a5782518255916020019190600101906137ef565b5061381692915061381a565b5090565b5b80821115613816576000815560010161381b565b805182526020810151613846602084018215159052565b50604081015161385b604084018260ff169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b6020808252825182820181905260009190848201906040850190845b818110156138ed576138d983855161382f565b9284019261014092909201916001016138c6565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561394157634e487b7160e01b600052604160045260246000fd5b60405290565b8015158114612ecb57600080fd5b80356129bf81613947565b803560ff811681146129bf57600080fd5b6000610140828403121561398457600080fd5b61398c61390f565b8235815261399c60208401613955565b60208201526139ad60408401613960565b6040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013581830152506101208084013581830152508091505092915050565b600060208284031215613a1857600080fd5b5035919050565b6001600160a01b0381168114612ecb57600080fd5b60008060408385031215613a4757600080fd5b823591506020830135613a5981613a1f565b809150509250929050565b600060208284031215613a7657600080fd5b813561098081613a1f565b6020808252825182820181905260009190848201906040850190845b818110156138ed57835183529284019291840191600101613a9d565b60008060008060808587031215613acf57600080fd5b8435613ada81613a1f565b966020860135965060408601359560600135945092505050565b600060208284031215613b0657600080fd5b61098082613960565b600080600060608486031215613b2457600080fd5b505081359360208301359350604090920135919050565b600080600080600060a08688031215613b5357600080fd5b853561ffff81168114613b6557600080fd5b97602087013597506040870135966060810135965060800135945092505050565b6101408101610a3a828461382f565b60008060408385031215613ba857600080fd5b823591506020830135613a5981613947565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a3a57610a3a613bba565b634e487b7160e01b600052603260045260246000fd5b600060018201613c0b57613c0b613bba565b5060010190565b600082613c2f57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610a3a57610a3a613bba565b600060208284031215613c5d57600080fd5b815161098081613947565b80820180821115610a3a57610a3a613bba565b6020808252601390820152727374616b65206973206e6f742065786973747360681b604082015260600190565b6020808252600c908201526b24b73b30b634b210383630b760a11b604082015260600190565b60208082526022908201527f444e4d20616d6f756e74206973206e6f7420696e20636f72726563742072616e604082015261676560f01b606082015260800190565b600060208284031215613d2257600080fd5b5051919050565b60208082526019908201527f55564d2062616c616e6365206973206e6f7420656e6f75676800000000000000604082015260600190565b600060208284031215613d7257600080fd5b815161098081613a1f565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252601e908201527f496e7465726e616c204572726f72204f6e2055766d205472616e736665720000604082015260600190565b81516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201519181019190915260c00190565b60208082526021908201527f796f752063616e206f6e6c7920776974686472617720796f75722072657761726040820152601960fa1b60608201526080019056fea2646970667358221220ffdf28b261120dab469e0ab42ae703b5013cbd910a16b4be215a4e6aac8167ce64736f6c63430008140033";

type StakeMetaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeMetaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeMeta__factory extends ContractFactory {
  constructor(...args: StakeMetaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uvm_token: string,
    dnm_token: string,
    land_token_wrapper: string,
    overrides?: Overrides & { from?: string }
  ): Promise<StakeMeta> {
    return super.deploy(
      uvm_token,
      dnm_token,
      land_token_wrapper,
      overrides || {}
    ) as Promise<StakeMeta>;
  }
  override getDeployTransaction(
    uvm_token: string,
    dnm_token: string,
    land_token_wrapper: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      uvm_token,
      dnm_token,
      land_token_wrapper,
      overrides || {}
    );
  }
  override attach(address: string): StakeMeta {
    return super.attach(address) as StakeMeta;
  }
  override connect(signer: Signer): StakeMeta__factory {
    return super.connect(signer) as StakeMeta__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeMetaInterface {
    return new utils.Interface(_abi) as StakeMetaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakeMeta {
    return new Contract(address, _abi, signerOrProvider) as StakeMeta;
  }
}
