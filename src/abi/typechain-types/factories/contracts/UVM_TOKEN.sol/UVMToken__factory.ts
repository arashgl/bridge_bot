/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UVMToken,
  UVMTokenInterface,
} from "../../../contracts/UVM_TOKEN.sol/UVMToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "createOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "developShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "send_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintByOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "operators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "privateShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDevelopShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPrivateShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakeShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTeamShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006006556000600755600060085560006009553480156200002557600080fd5b506040516200109038038062001090833981016040819052620000489162000344565b338383600362000059838262000446565b50600462000068828262000446565b5050506001600160a01b0381166200009b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000a681620000bc565b50620000b333826200010e565b5050506200053a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200013a5760405163ec442f0560e01b81526000600482015260240162000092565b62000148600083836200014c565b5050565b6001600160a01b0383166200017b5780600260008282546200016f919062000512565b90915550620001ef9050565b6001600160a01b03831660009081526020819052604090205481811015620001d05760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000092565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200020d576002805482900390556200022c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200027291815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a757600080fd5b81516001600160401b0380821115620002c457620002c46200027f565b604051601f8301601f19908116603f01168101908282118183101715620002ef57620002ef6200027f565b816040528381526020925086838588010111156200030c57600080fd5b600091505b8382101562000330578582018301518183018401529082019062000311565b600093810190920192909252949350505050565b6000806000606084860312156200035a57600080fd5b83516001600160401b03808211156200037257600080fd5b620003808783880162000295565b945060208601519150808211156200039757600080fd5b50620003a68682870162000295565b925050604084015190509250925092565b600181811c90821680620003cc57607f821691505b602082108103620003ed57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200044157600081815260208120601f850160051c810160208610156200041c5750805b601f850160051c820191505b818110156200043d5782815560010162000428565b5050505b505050565b81516001600160401b038111156200046257620004626200027f565b6200047a81620004738454620003b7565b84620003f3565b602080601f831160018114620004b25760008415620004995750858301515b600019600386901b1c1916600185901b1785556200043d565b600085815260208120601f198616915b82811015620004e357888601518255948401946001909101908401620004c2565b5085821015620005025787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200053457634e487b7160e01b600052601160045260246000fd5b92915050565b610b46806200054a6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063dd62ed3e1161007c578063dd62ed3e146102c3578063def7b6a7146102fc578063ea6ef2fe1461030f578063f0d6c62914610318578063f2fde38b1461032a578063f6ae6f131461033d57600080fd5b80638da5cb5b146102555780639380f3841461027057806395d89b4114610283578063a9059cbb1461028b578063ac8a584a1461029e578063ca1e14aa146102b157600080fd5b8063313ce56711610115578063313ce567146101ef5780633ca430ca146101fe5780636940628d1461020757806370a0823114610210578063715018a614610239578063804b60a31461024357600080fd5b806306fdde031461015d578063095ea7b31461017b57806313e7c9d81461019e57806318160ddd146101c15780631ea41c2c146101d357806323b872dd146101dc575b600080fd5b610165610350565b6040516101729190610990565b60405180910390f35b61018e6101893660046109fa565b6103e2565b6040519015158152602001610172565b61018e6101ac366004610a24565b600a6020526000908152604090205460ff1681565b6002545b604051908152602001610172565b6101c560095481565b61018e6101ea366004610a46565b6103fc565b60405160128152602001610172565b6101c560085481565b6101c560065481565b6101c561021e366004610a24565b6001600160a01b031660009081526020819052604090205490565b610241610420565b005b6101c56a95392f98879c410e00000081565b6005546040516001600160a01b039091168152602001610172565b61024161027e3660046109fa565b610434565b61016561053d565b61018e6102993660046109fa565b61054c565b6102416102ac366004610a24565b61055a565b6101c56a4a9c97cc43ce208700000081565b6101c56102d1366004610a82565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101c56b0414904d2bb545c76200000081565b6101c560075481565b6101c56adfd5c764cb6a619500000081565b610241610338366004610a24565b610583565b61024161034b366004610a24565b6105c1565b60606003805461035f90610ab5565b80601f016020809104026020016040519081016040528092919081815260200182805461038b90610ab5565b80156103d85780601f106103ad576101008083540402835291602001916103d8565b820191906000526020600020905b8154815290600101906020018083116103bb57829003601f168201915b5050505050905090565b6000336103f08185856105ed565b60019150505b92915050565b60003361040a8582856105ff565b61041585858561067d565b506001949350505050565b6104286106dc565b6104326000610709565b565b336000908152600a602052604090205460ff16151560011461049d5760405162461bcd60e51b815260206004820152601a60248201527f63616c6c6572206973206e6f7420746865206f70657261746f7200000000000060448201526064015b60405180910390fd5b6a4a9c97cc43ce2087000000816006546104b79190610aef565b11156105175760405162461bcd60e51b815260206004820152602960248201527f63616e206e6f74206d696e74206d6f7265207468616e20746f74616c207072696044820152681d985d19481cd95b1b60ba1b6064820152608401610494565b80600660008282546105299190610aef565b909155506105399050828261075b565b5050565b60606004805461035f90610ab5565b6000336103f081858561067d565b6105626106dc565b6001600160a01b03166000908152600a60205260409020805460ff19169055565b61058b6106dc565b6001600160a01b0381166105b557604051631e4fbdf760e01b815260006004820152602401610494565b6105be81610709565b50565b6105c96106dc565b6001600160a01b03166000908152600a60205260409020805460ff19166001179055565b6105fa8383836001610791565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610677578181101561066857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610494565b61067784848484036000610791565b50505050565b6001600160a01b0383166106a757604051634b637e8f60e11b815260006004820152602401610494565b6001600160a01b0382166106d15760405163ec442f0560e01b815260006004820152602401610494565b6105fa838383610866565b6005546001600160a01b031633146104325760405163118cdaa760e01b8152336004820152602401610494565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166107855760405163ec442f0560e01b815260006004820152602401610494565b61053960008383610866565b6001600160a01b0384166107bb5760405163e602df0560e01b815260006004820152602401610494565b6001600160a01b0383166107e557604051634a1406b160e11b815260006004820152602401610494565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561067757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161085891815260200190565b60405180910390a350505050565b6001600160a01b0383166108915780600260008282546108869190610aef565b909155506109039050565b6001600160a01b038316600090815260208190526040902054818110156108e45760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610494565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661091f5760028054829003905561093e565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161098391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156109bd578581018301518582016040015282016109a1565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109f557600080fd5b919050565b60008060408385031215610a0d57600080fd5b610a16836109de565b946020939093013593505050565b600060208284031215610a3657600080fd5b610a3f826109de565b9392505050565b600080600060608486031215610a5b57600080fd5b610a64846109de565b9250610a72602085016109de565b9150604084013590509250925092565b60008060408385031215610a9557600080fd5b610a9e836109de565b9150610aac602084016109de565b90509250929050565b600181811c90821680610ac957607f821691505b602082108103610ae957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156103f657634e487b7160e01b600052601160045260246000fdfea2646970667358221220c040e40ccf52e8e7f80323f80f6c46090abf70d557dea30a0cc086a4f16c31f964736f6c63430008140033";

type UVMTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UVMTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UVMToken__factory extends ContractFactory {
  constructor(...args: UVMTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<UVMToken> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<UVMToken>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  override attach(address: string): UVMToken {
    return super.attach(address) as UVMToken;
  }
  override connect(signer: Signer): UVMToken__factory {
    return super.connect(signer) as UVMToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UVMTokenInterface {
    return new utils.Interface(_abi) as UVMTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UVMToken {
    return new Contract(address, _abi, signerOrProvider) as UVMToken;
  }
}
