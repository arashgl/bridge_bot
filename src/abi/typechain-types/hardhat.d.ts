/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC4906",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4906__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Holder__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Math",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Math__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "Bridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bridge__factory>;
    getContractFactory(
      name: "Calculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Calculator__factory>;
    getContractFactory(
      name: "CallBack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CallBack__factory>;
    getContractFactory(
      name: "Counter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Counter__factory>;
    getContractFactory(
      name: "DAO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DAO__factory>;
    getContractFactory(
      name: "Dex",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Dex__factory>;
    getContractFactory(
      name: "DNM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DNM__factory>;
    getContractFactory(
      name: "Election",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Election__factory>;
    getContractFactory(
      name: "Dev",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Dev__factory>;
    getContractFactory(
      name: "CallBack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CallBack__factory>;
    getContractFactory(
      name: "Gateway",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Gateway__factory>;
    getContractFactory(
      name: "IStakeMeta",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakeMeta__factory>;
    getContractFactory(
      name: "ILazyMintError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILazyMintError__factory>;
    getContractFactory(
      name: "IMarketplaceError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarketplaceError__factory>;
    getContractFactory(
      name: "LazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LazyMint__factory>;
    getContractFactory(
      name: "Market",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Market__factory>;
    getContractFactory(
      name: "NFTLandMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTLandMarket__factory>;
    getContractFactory(
      name: "GetListModifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GetListModifier__factory>;
    getContractFactory(
      name: "NFTLand",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTLand__factory>;
    getContractFactory(
      name: "Orders",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Orders__factory>;
    getContractFactory(
      name: "OrdersStruct",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrdersStruct__factory>;
    getContractFactory(
      name: "DNMToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DNMToken__factory>;
    getContractFactory(
      name: "Payments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Payments__factory>;
    getContractFactory(
      name: "Plan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Plan__factory>;
    getContractFactory(
      name: "ProductNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProductNFT__factory>;
    getContractFactory(
      name: "SC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SC__factory>;
    getContractFactory(
      name: "Sellers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Sellers__factory>;
    getContractFactory(
      name: "Finalizable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Finalizable__factory>;
    getContractFactory(
      name: "LandPlan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LandPlan__factory>;
    getContractFactory(
      name: "SideContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SideContract__factory>;
    getContractFactory(
      name: "StakeGetters",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakeGetters__factory>;
    getContractFactory(
      name: "TopUp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TopUp__factory>;
    getContractFactory(
      name: "StakeMeta",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakeMeta__factory>;
    getContractFactory(
      name: "Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Token__factory>;
    getContractFactory(
      name: "Users",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Users__factory>;
    getContractFactory(
      name: "UsersStruct",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UsersStruct__factory>;
    getContractFactory(
      name: "UVMToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UVMToken__factory>;
    getContractFactory(
      name: "UVM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UVM__factory>;
    getContractFactory(
      name: "Withdrawal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Withdrawal__factory>;
    getContractFactory(
      name: "Wrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Wrapper__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721TokenReceiver__factory>;
    getContractFactory(
      name: "IMulticall3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall3__factory>;
    getContractFactory(
      name: "MockERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC20__factory>;
    getContractFactory(
      name: "IERC721TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721TokenReceiver__factory>;
    getContractFactory(
      name: "MockERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC721__factory>;
    getContractFactory(
      name: "StdAssertions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StdAssertions__factory>;
    getContractFactory(
      name: "StdError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StdError__factory>;
    getContractFactory(
      name: "StdInvariant",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StdInvariant__factory>;
    getContractFactory(
      name: "StdStorageSafe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StdStorageSafe__factory>;
    getContractFactory(
      name: "Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Test__factory>;
    getContractFactory(
      name: "Vm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vm__factory>;
    getContractFactory(
      name: "VmSafe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VmSafe__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC4906",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4906>;
    getContractAt(
      name: "IERC5267",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Holder>;
    getContractAt(
      name: "ECDSA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "EIP712",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Math",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Math>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "ShortStrings",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "Strings",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "Bridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Bridge>;
    getContractAt(
      name: "Calculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Calculator>;
    getContractAt(
      name: "CallBack",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CallBack>;
    getContractAt(
      name: "Counter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Counter>;
    getContractAt(
      name: "DAO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DAO>;
    getContractAt(
      name: "Dex",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Dex>;
    getContractAt(
      name: "DNM",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DNM>;
    getContractAt(
      name: "Election",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Election>;
    getContractAt(
      name: "Dev",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Dev>;
    getContractAt(
      name: "CallBack",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CallBack>;
    getContractAt(
      name: "Gateway",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Gateway>;
    getContractAt(
      name: "IStakeMeta",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakeMeta>;
    getContractAt(
      name: "ILazyMintError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILazyMintError>;
    getContractAt(
      name: "IMarketplaceError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarketplaceError>;
    getContractAt(
      name: "LazyMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LazyMint>;
    getContractAt(
      name: "Market",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Market>;
    getContractAt(
      name: "NFTLandMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTLandMarket>;
    getContractAt(
      name: "GetListModifier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GetListModifier>;
    getContractAt(
      name: "NFTLand",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTLand>;
    getContractAt(
      name: "Orders",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Orders>;
    getContractAt(
      name: "OrdersStruct",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OrdersStruct>;
    getContractAt(
      name: "DNMToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DNMToken>;
    getContractAt(
      name: "Payments",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Payments>;
    getContractAt(
      name: "Plan",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Plan>;
    getContractAt(
      name: "ProductNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProductNFT>;
    getContractAt(
      name: "SC",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SC>;
    getContractAt(
      name: "Sellers",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Sellers>;
    getContractAt(
      name: "Finalizable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Finalizable>;
    getContractAt(
      name: "LandPlan",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LandPlan>;
    getContractAt(
      name: "SideContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SideContract>;
    getContractAt(
      name: "StakeGetters",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakeGetters>;
    getContractAt(
      name: "TopUp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TopUp>;
    getContractAt(
      name: "StakeMeta",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakeMeta>;
    getContractAt(
      name: "Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Token>;
    getContractAt(
      name: "Users",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Users>;
    getContractAt(
      name: "UsersStruct",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UsersStruct>;
    getContractAt(
      name: "UVMToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UVMToken>;
    getContractAt(
      name: "UVM",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UVM>;
    getContractAt(
      name: "Withdrawal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Withdrawal>;
    getContractAt(
      name: "Wrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Wrapper>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721TokenReceiver>;
    getContractAt(
      name: "IMulticall3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMulticall3>;
    getContractAt(
      name: "MockERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC20>;
    getContractAt(
      name: "IERC721TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721TokenReceiver>;
    getContractAt(
      name: "MockERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC721>;
    getContractAt(
      name: "StdAssertions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StdAssertions>;
    getContractAt(
      name: "StdError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StdError>;
    getContractAt(
      name: "StdInvariant",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StdInvariant>;
    getContractAt(
      name: "StdStorageSafe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StdStorageSafe>;
    getContractAt(
      name: "Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Test>;
    getContractAt(
      name: "Vm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vm>;
    getContractAt(
      name: "VmSafe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VmSafe>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
